com.badlogic.gdx.Application -> com.badlogic.gdx.a:
    com.badlogic.gdx.Graphics getGraphics() -> getGraphics
    void log(java.lang.String,java.lang.String) -> log
    void error(java.lang.String,java.lang.String,java.lang.Throwable) -> error
    void debug(java.lang.String,java.lang.String) -> debug
    com.badlogic.gdx.Application$ApplicationType getType() -> getType
    void postRunnable(java.lang.Runnable) -> postRunnable
com.badlogic.gdx.Application$ApplicationType -> com.badlogic.gdx.b:
    com.badlogic.gdx.Application$ApplicationType Android -> a
    com.badlogic.gdx.Application$ApplicationType Desktop -> b
    com.badlogic.gdx.Application$ApplicationType Applet -> c
    com.badlogic.gdx.Application$ApplicationType WebGL -> d
    com.badlogic.gdx.Application$ApplicationType iOS -> e
    com.badlogic.gdx.Application$ApplicationType[] $VALUES -> f
    com.badlogic.gdx.Application$ApplicationType[] values() -> values
    com.badlogic.gdx.Application$ApplicationType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.ApplicationListener -> com.badlogic.gdx.c:
    void create() -> a
    void resize$255f295() -> b
    void render() -> c
    void pause() -> d
    void resume() -> e
    void dispose() -> f
com.badlogic.gdx.Audio -> com.badlogic.gdx.d:
com.badlogic.gdx.Files -> com.badlogic.gdx.e:
    com.badlogic.gdx.files.FileHandle getFileHandle(java.lang.String,com.badlogic.gdx.Files$FileType) -> getFileHandle
    com.badlogic.gdx.files.FileHandle classpath(java.lang.String) -> classpath
    com.badlogic.gdx.files.FileHandle internal(java.lang.String) -> internal
    java.lang.String getExternalStoragePath() -> getExternalStoragePath
com.badlogic.gdx.Files$FileType -> com.badlogic.gdx.f:
    com.badlogic.gdx.Files$FileType Classpath -> a
    com.badlogic.gdx.Files$FileType Internal -> b
    com.badlogic.gdx.Files$FileType External -> c
    com.badlogic.gdx.Files$FileType Absolute -> d
    com.badlogic.gdx.Files$FileType Local -> e
    com.badlogic.gdx.Files$FileType[] $VALUES -> f
    com.badlogic.gdx.Files$FileType[] values() -> values
    com.badlogic.gdx.Files$FileType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.Game -> com.badlogic.gdx.g:
    com.badlogic.gdx.Screen screen -> a
    void dispose() -> f
    void pause() -> d
    void resume() -> e
    void render() -> c
    void resize$255f295() -> b
    void setScreen(com.badlogic.gdx.Screen) -> a
    com.badlogic.gdx.Screen getScreen() -> g
com.badlogic.gdx.Gdx -> com.badlogic.gdx.h:
    com.badlogic.gdx.Application app -> a
    com.badlogic.gdx.Graphics graphics -> b
    com.badlogic.gdx.Audio audio -> c
    com.badlogic.gdx.Input input -> d
    com.badlogic.gdx.Files files -> e
    com.badlogic.gdx.Net net -> f
    com.badlogic.gdx.graphics.GLCommon gl -> g
    com.badlogic.gdx.graphics.GL10 gl10 -> h
    com.badlogic.gdx.graphics.GL11 gl11 -> i
    com.badlogic.gdx.graphics.GL20 gl20 -> j
com.badlogic.gdx.Graphics -> com.badlogic.gdx.i:
    boolean isGL20Available() -> isGL20Available
    com.badlogic.gdx.graphics.GL10 getGL10() -> getGL10
    com.badlogic.gdx.graphics.GL11 getGL11() -> getGL11
    com.badlogic.gdx.graphics.GL20 getGL20() -> getGL20
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    float getDeltaTime() -> getDeltaTime
    com.badlogic.gdx.Graphics$DisplayMode getDesktopDisplayMode() -> getDesktopDisplayMode
    boolean supportsExtension(java.lang.String) -> supportsExtension
    void requestRendering() -> requestRendering
com.badlogic.gdx.Graphics$BufferFormat -> com.badlogic.gdx.j:
    int r -> a
    int g -> b
    int b -> c
    int a -> d
    int depth -> e
    int stencil -> f
    int samples -> g
    boolean coverageSampling -> h
    java.lang.String toString() -> toString
com.badlogic.gdx.Graphics$DisplayMode -> com.badlogic.gdx.k:
    int width -> width
    int height -> height
    int refreshRate -> refreshRate
    int bitsPerPixel -> bitsPerPixel
    java.lang.String toString() -> toString
com.badlogic.gdx.Graphics$GraphicsType -> com.badlogic.gdx.l:
    com.badlogic.gdx.Graphics$GraphicsType AndroidGL -> a
    com.badlogic.gdx.Graphics$GraphicsType LWJGL -> b
    com.badlogic.gdx.Graphics$GraphicsType Angle -> c
    com.badlogic.gdx.Graphics$GraphicsType WebGL -> d
    com.badlogic.gdx.Graphics$GraphicsType iOSGL -> e
    com.badlogic.gdx.Graphics$GraphicsType JGLFW -> f
    com.badlogic.gdx.Graphics$GraphicsType[] $VALUES -> g
    com.badlogic.gdx.Graphics$GraphicsType[] values() -> values
    com.badlogic.gdx.Graphics$GraphicsType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.Input -> com.badlogic.gdx.m:
    float getAccelerometerX() -> getAccelerometerX
    float getAccelerometerY() -> getAccelerometerY
    int getX() -> getX
    int getY() -> getY
    boolean isTouched() -> isTouched
    void setInputProcessor(com.badlogic.gdx.InputProcessor) -> setInputProcessor
    boolean isPeripheralAvailable(com.badlogic.gdx.Input$Peripheral) -> isPeripheralAvailable
com.badlogic.gdx.Input$Orientation -> com.badlogic.gdx.n:
    com.badlogic.gdx.Input$Orientation Landscape -> a
    com.badlogic.gdx.Input$Orientation Portrait -> b
    com.badlogic.gdx.Input$Orientation[] $VALUES -> c
    com.badlogic.gdx.Input$Orientation[] values() -> values
    com.badlogic.gdx.Input$Orientation valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.Input$Peripheral -> com.badlogic.gdx.o:
    com.badlogic.gdx.Input$Peripheral HardwareKeyboard -> a
    com.badlogic.gdx.Input$Peripheral OnscreenKeyboard -> b
    com.badlogic.gdx.Input$Peripheral MultitouchScreen -> c
    com.badlogic.gdx.Input$Peripheral Accelerometer -> d
    com.badlogic.gdx.Input$Peripheral Compass -> e
    com.badlogic.gdx.Input$Peripheral Vibrator -> f
    com.badlogic.gdx.Input$Peripheral[] $VALUES -> g
    com.badlogic.gdx.Input$Peripheral[] values() -> values
    com.badlogic.gdx.Input$Peripheral valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.Input$TextInputListener -> com.badlogic.gdx.p:
com.badlogic.gdx.InputProcessor -> com.badlogic.gdx.q:
    boolean touchUp$3b4dfe47(int,int) -> a
com.badlogic.gdx.LifecycleListener -> com.badlogic.gdx.r:
com.badlogic.gdx.Net -> com.badlogic.gdx.s:
com.badlogic.gdx.Net$HttpRequest -> com.badlogic.gdx.t:
    java.lang.String httpMethod -> a
    java.lang.String url -> b
    java.util.Map headers -> c
    int timeOut -> d
    java.lang.String content -> e
    java.io.InputStream contentStream -> f
    int getTimeOut() -> a
    java.lang.String getMethod() -> b
    java.lang.String getUrl() -> c
    java.lang.String getContent() -> d
    java.io.InputStream getContentStream() -> e
    java.util.Map getHeaders() -> f
com.badlogic.gdx.Net$HttpResponseListener -> com.badlogic.gdx.u:
com.badlogic.gdx.Net$Protocol -> com.badlogic.gdx.v:
    com.badlogic.gdx.Net$Protocol TCP -> a
    com.badlogic.gdx.Net$Protocol[] $VALUES -> b
    com.badlogic.gdx.Net$Protocol[] values() -> values
    com.badlogic.gdx.Net$Protocol valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.Preferences -> com.badlogic.gdx.w:
com.badlogic.gdx.Screen -> com.badlogic.gdx.x:
    void render(float) -> a
    void resume() -> a
com.badlogic.gdx.assets.AssetDescriptor -> com.badlogic.gdx.a.a:
    java.lang.String fileName -> a
    java.lang.Class type -> b
    com.badlogic.gdx.assets.AssetLoaderParameters params -> c
    java.lang.String toString() -> toString
com.badlogic.gdx.assets.AssetErrorListener -> com.badlogic.gdx.a.b:
com.badlogic.gdx.assets.AssetLoaderParameters -> com.badlogic.gdx.a.c:
    com.badlogic.gdx.assets.AssetLoaderParameters$LoadedCallback loadedCallback -> a
com.badlogic.gdx.assets.AssetLoaderParameters$LoadedCallback -> com.badlogic.gdx.a.d:
    void finishedLoading$190c2c84(com.badlogic.gdx.assets.AssetManager,java.lang.String) -> a
com.badlogic.gdx.assets.AssetLoadingTask -> com.badlogic.gdx.a.e:
    com.badlogic.gdx.assets.AssetManager manager -> a
    com.badlogic.gdx.assets.AssetDescriptor assetDesc -> b
    com.badlogic.gdx.assets.loaders.AssetLoader loader -> c
    com.badlogic.gdx.utils.async.AsyncExecutor executor -> d
    long startTime -> e
    boolean asyncDone -> f
    boolean dependenciesLoaded -> g
    com.badlogic.gdx.utils.Array dependencies -> h
    com.badlogic.gdx.utils.async.AsyncResult depsFuture -> i
    com.badlogic.gdx.utils.async.AsyncResult loadFuture -> j
    java.lang.Object asset -> k
    int ticks -> l
    boolean cancel -> m
    boolean update() -> a
    java.lang.Object call() -> b
com.badlogic.gdx.assets.AssetManager -> com.badlogic.gdx.a.f:
    com.badlogic.gdx.utils.ObjectMap assets -> a
    com.badlogic.gdx.utils.ObjectMap assetTypes -> b
    com.badlogic.gdx.utils.ObjectMap assetDependencies -> c
    com.badlogic.gdx.utils.ObjectMap loaders -> d
    com.badlogic.gdx.utils.Array loadQueue -> e
    com.badlogic.gdx.utils.async.AsyncExecutor executor -> f
    java.util.Stack tasks -> g
    com.badlogic.gdx.assets.AssetErrorListener listener -> h
    int loaded -> i
    int toLoad -> j
    com.badlogic.gdx.utils.Logger log -> k
    java.lang.Object get(java.lang.String,java.lang.Class) -> a
    void unload(java.lang.String) -> a
    java.lang.String getAssetFileName(java.lang.Object) -> a
    boolean isLoaded(java.lang.String) -> c
    com.badlogic.gdx.assets.loaders.AssetLoader getLoader(java.lang.Class,java.lang.String) -> a
    void load(java.lang.String,java.lang.Class,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
    boolean update() -> b
    void finishLoading() -> a
    void injectDependencies(java.lang.String,com.badlogic.gdx.utils.Array) -> a
    void injectDependency(java.lang.String,com.badlogic.gdx.assets.AssetDescriptor) -> a
    void addTask(com.badlogic.gdx.assets.AssetDescriptor) -> a
    void incrementRefCountedDependencies(java.lang.String) -> d
    void handleTaskError(java.lang.Throwable) -> a
    void dispose() -> dispose
    void clear() -> c
    int getReferenceCount(java.lang.String) -> b
    void setReferenceCount(java.lang.String,int) -> a
com.badlogic.gdx.assets.RefCountedContainer -> com.badlogic.gdx.a.g:
    java.lang.Object object -> a
    int refCount -> b
    void incRefCount() -> a
com.badlogic.gdx.assets.loaders.AssetLoader -> com.badlogic.gdx.a.a.a:
    com.badlogic.gdx.assets.loaders.FileHandleResolver resolver -> a
    com.badlogic.gdx.files.FileHandle resolve$4d33a3a8() -> a
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
com.badlogic.gdx.assets.loaders.AsynchronousAssetLoader -> com.badlogic.gdx.a.a.b:
    void loadAsync$4de814fd(java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> b
    java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
com.badlogic.gdx.assets.loaders.FileHandleResolver -> com.badlogic.gdx.a.a.c:
    com.badlogic.gdx.files.FileHandle resolve$4d33a3a8() -> a
com.badlogic.gdx.assets.loaders.ModelLoader -> com.badlogic.gdx.a.a.d:
    com.badlogic.gdx.utils.Array items -> a
    com.badlogic.gdx.graphics.g3d.model.data.ModelData loadModelData(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
    com.badlogic.gdx.graphics.g3d.Model loadModel(com.badlogic.gdx.files.FileHandle) -> a
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
    void loadAsync$4de814fd(java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> b
    com.badlogic.gdx.graphics.g3d.Model loadSync$75dc77ea(com.badlogic.gdx.assets.AssetManager,java.lang.String) -> a
    java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
com.badlogic.gdx.assets.loaders.SynchronousAssetLoader -> com.badlogic.gdx.a.a.e:
    java.lang.Object load$6d88328f() -> b
com.badlogic.gdx.assets.loaders.TextureLoader -> com.badlogic.gdx.a.a.f:
    com.badlogic.gdx.assets.loaders.TextureLoader$TextureLoaderInfo info -> a
    java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
    void loadAsync$4de814fd(java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> b
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
com.badlogic.gdx.assets.loaders.TextureLoader$TextureLoaderInfo -> com.badlogic.gdx.a.a.g:
    java.lang.String filename -> a
    com.badlogic.gdx.graphics.TextureData data -> b
    com.badlogic.gdx.graphics.Texture texture -> c
com.badlogic.gdx.assets.loaders.TextureLoader$TextureParameter -> com.badlogic.gdx.a.a.h:
    com.badlogic.gdx.graphics.Pixmap$Format format -> b
    boolean genMipMaps -> c
    com.badlogic.gdx.graphics.Texture texture -> d
    com.badlogic.gdx.graphics.TextureData textureData -> e
    com.badlogic.gdx.graphics.Texture$TextureFilter minFilter -> f
    com.badlogic.gdx.graphics.Texture$TextureFilter magFilter -> g
    com.badlogic.gdx.graphics.Texture$TextureWrap wrapU -> h
    com.badlogic.gdx.graphics.Texture$TextureWrap wrapV -> i
com.badlogic.gdx.audio.AudioDevice -> com.badlogic.gdx.b.a:
com.badlogic.gdx.audio.AudioRecorder -> com.badlogic.gdx.b.b:
com.badlogic.gdx.audio.Music -> com.badlogic.gdx.b.c:
com.badlogic.gdx.audio.Music$OnCompletionListener -> com.badlogic.gdx.b.d:
com.badlogic.gdx.audio.Sound -> com.badlogic.gdx.b.e:
com.badlogic.gdx.backends.android.AndroidApplication -> com.badlogic.gdx.backends.android.AndroidApplication:
    com.badlogic.gdx.backends.android.AndroidGraphics graphics -> graphics
    com.badlogic.gdx.backends.android.AndroidInput input -> input
    com.badlogic.gdx.backends.android.AndroidAudio audio -> audio
    com.badlogic.gdx.backends.android.AndroidFiles files -> files
    com.badlogic.gdx.backends.android.AndroidNet net -> net
    com.badlogic.gdx.ApplicationListener listener -> listener
    android.os.Handler handler -> handler
    boolean firstResume -> firstResume
    com.badlogic.gdx.utils.Array runnables -> runnables
    com.badlogic.gdx.utils.Array executedRunnables -> executedRunnables
    com.badlogic.gdx.utils.Array lifecycleListeners -> lifecycleListeners
    android.os.PowerManager$WakeLock wakeLock -> wakeLock
    int logLevel -> logLevel
    com.badlogic.gdx.backends.android.AndroidClipboard clipboard -> clipboard
    void initialize(com.badlogic.gdx.ApplicationListener,boolean) -> initialize
    void initialize(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> initialize
    android.widget.FrameLayout$LayoutParams createLayoutParams() -> createLayoutParams
    void createWakeLock(com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> createWakeLock
    void hideStatusBar(com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> hideStatusBar
    android.view.View initializeForView(com.badlogic.gdx.ApplicationListener,boolean) -> initializeForView
    android.view.View initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> initializeForView
    void onPause() -> onPause
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    com.badlogic.gdx.ApplicationListener getApplicationListener() -> getApplicationListener
    com.badlogic.gdx.Audio getAudio() -> getAudio
    com.badlogic.gdx.Files getFiles() -> getFiles
    com.badlogic.gdx.Graphics getGraphics() -> getGraphics
    com.badlogic.gdx.Input getInput() -> getInput
    com.badlogic.gdx.Net getNet() -> getNet
    com.badlogic.gdx.Application$ApplicationType getType() -> getType
    int getVersion() -> getVersion
    long getJavaHeap() -> getJavaHeap
    long getNativeHeap() -> getNativeHeap
    com.badlogic.gdx.Preferences getPreferences(java.lang.String) -> getPreferences
    com.badlogic.gdx.utils.Clipboard getClipboard() -> getClipboard
    void postRunnable(java.lang.Runnable) -> postRunnable
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void exit() -> exit
    void debug(java.lang.String,java.lang.String) -> debug
    void debug(java.lang.String,java.lang.String,java.lang.Throwable) -> debug
    void log(java.lang.String,java.lang.String) -> log
    void log(java.lang.String,java.lang.String,java.lang.Exception) -> log
    void error(java.lang.String,java.lang.String) -> error
    void error(java.lang.String,java.lang.String,java.lang.Throwable) -> error
    void setLogLevel(int) -> setLogLevel
    void addLifecycleListener(com.badlogic.gdx.LifecycleListener) -> addLifecycleListener
    void removeLifecycleListener(com.badlogic.gdx.LifecycleListener) -> removeLifecycleListener
com.badlogic.gdx.backends.android.AndroidApplication$1 -> com.badlogic.gdx.backends.android.AndroidApplication$1:
    com.badlogic.gdx.backends.android.AndroidApplication this$0 -> this$0
    void run() -> run
com.badlogic.gdx.backends.android.AndroidApplicationConfiguration -> com.badlogic.gdx.backends.android.AndroidApplicationConfiguration:
    boolean useGL20 -> useGL20
    int r -> r
    int g -> g
    int b -> b
    int a -> a
    int depth -> depth
    int stencil -> stencil
    int numSamples -> numSamples
    boolean useAccelerometer -> useAccelerometer
    boolean useCompass -> useCompass
    int touchSleepTime -> touchSleepTime
    boolean useWakelock -> useWakelock
    boolean hideStatusBar -> hideStatusBar
    int maxSimultaneousSounds -> maxSimultaneousSounds
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy resolutionStrategy -> resolutionStrategy
    boolean getTouchEventsForLiveWallpaper -> getTouchEventsForLiveWallpaper
com.badlogic.gdx.backends.android.AndroidAudio -> com.badlogic.gdx.backends.android.AndroidAudio:
    android.media.SoundPool soundPool -> soundPool
    android.media.AudioManager manager -> manager
    java.util.List musics -> musics
    void pause() -> pause
    void resume() -> resume
    com.badlogic.gdx.audio.AudioDevice newAudioDevice(int,boolean) -> newAudioDevice
    com.badlogic.gdx.audio.Music newMusic(com.badlogic.gdx.files.FileHandle) -> newMusic
    com.badlogic.gdx.audio.Sound newSound(com.badlogic.gdx.files.FileHandle) -> newSound
    com.badlogic.gdx.audio.AudioRecorder newAudioRecorder(int,boolean) -> newAudioRecorder
    void dispose() -> dispose
com.badlogic.gdx.backends.android.AndroidAudioDevice -> com.badlogic.gdx.backends.android.AndroidAudioDevice:
    android.media.AudioTrack track -> track
    short[] buffer -> buffer
    boolean isMono -> isMono
    int latency -> latency
    void dispose() -> dispose
    boolean isMono() -> isMono
    void writeSamples(short[],int,int) -> writeSamples
    void writeSamples(float[],int,int) -> writeSamples
    int getLatency() -> getLatency
    void setVolume(float) -> setVolume
com.badlogic.gdx.backends.android.AndroidAudioRecorder -> com.badlogic.gdx.backends.android.AndroidAudioRecorder:
    android.media.AudioRecord recorder -> recorder
    void dispose() -> dispose
    void read(short[],int,int) -> read
com.badlogic.gdx.backends.android.AndroidClipboard -> com.badlogic.gdx.backends.android.AndroidClipboard:
    android.content.Context context -> context
    java.lang.String contents -> contents
    java.lang.String getContents() -> getContents
    void setContents(java.lang.String) -> setContents
com.badlogic.gdx.backends.android.AndroidDaydream -> com.badlogic.gdx.backends.android.AndroidDaydream:
    com.badlogic.gdx.backends.android.AndroidGraphicsDaydream graphics -> graphics
    com.badlogic.gdx.backends.android.AndroidInput input -> input
    com.badlogic.gdx.backends.android.AndroidAudio audio -> audio
    com.badlogic.gdx.backends.android.AndroidFiles files -> files
    com.badlogic.gdx.backends.android.AndroidNet net -> net
    com.badlogic.gdx.ApplicationListener listener -> listener
    android.os.Handler handler -> handler
    boolean firstResume -> firstResume
    com.badlogic.gdx.utils.Array runnables -> runnables
    com.badlogic.gdx.utils.Array executedRunnables -> executedRunnables
    com.badlogic.gdx.utils.Array lifecycleListeners -> lifecycleListeners
    android.os.PowerManager$WakeLock wakeLock -> wakeLock
    int logLevel -> logLevel
    com.badlogic.gdx.backends.android.AndroidClipboard clipboard -> clipboard
    void initialize(com.badlogic.gdx.ApplicationListener,boolean) -> initialize
    void initialize(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> initialize
    android.widget.FrameLayout$LayoutParams createLayoutParams() -> createLayoutParams
    void createWakeLock(com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> createWakeLock
    void hideStatusBar(com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> hideStatusBar
    android.view.View initializeForView(com.badlogic.gdx.ApplicationListener,boolean) -> initializeForView
    android.view.View initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> initializeForView
    void onDreamingStopped() -> onDreamingStopped
    void onDreamingStarted() -> onDreamingStarted
    void onDetachedFromWindow() -> onDetachedFromWindow
    com.badlogic.gdx.ApplicationListener getApplicationListener() -> getApplicationListener
    com.badlogic.gdx.Audio getAudio() -> getAudio
    com.badlogic.gdx.Files getFiles() -> getFiles
    com.badlogic.gdx.Graphics getGraphics() -> getGraphics
    com.badlogic.gdx.Input getInput() -> getInput
    com.badlogic.gdx.Net getNet() -> getNet
    com.badlogic.gdx.Application$ApplicationType getType() -> getType
    int getVersion() -> getVersion
    long getJavaHeap() -> getJavaHeap
    long getNativeHeap() -> getNativeHeap
    com.badlogic.gdx.Preferences getPreferences(java.lang.String) -> getPreferences
    com.badlogic.gdx.utils.Clipboard getClipboard() -> getClipboard
    void postRunnable(java.lang.Runnable) -> postRunnable
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void exit() -> exit
    void debug(java.lang.String,java.lang.String) -> debug
    void debug(java.lang.String,java.lang.String,java.lang.Throwable) -> debug
    void log(java.lang.String,java.lang.String) -> log
    void log(java.lang.String,java.lang.String,java.lang.Exception) -> log
    void error(java.lang.String,java.lang.String) -> error
    void error(java.lang.String,java.lang.String,java.lang.Throwable) -> error
    void setLogLevel(int) -> setLogLevel
    void addLifecycleListener(com.badlogic.gdx.LifecycleListener) -> addLifecycleListener
    void removeLifecycleListener(com.badlogic.gdx.LifecycleListener) -> removeLifecycleListener
com.badlogic.gdx.backends.android.AndroidDaydream$1 -> com.badlogic.gdx.backends.android.AndroidDaydream$1:
    com.badlogic.gdx.backends.android.AndroidDaydream this$0 -> this$0
    void run() -> run
com.badlogic.gdx.backends.android.AndroidFileHandle -> com.badlogic.gdx.backends.android.AndroidFileHandle:
    android.content.res.AssetManager assets -> assets
    com.badlogic.gdx.files.FileHandle child(java.lang.String) -> child
    com.badlogic.gdx.files.FileHandle sibling(java.lang.String) -> sibling
    com.badlogic.gdx.files.FileHandle parent() -> parent
    java.io.InputStream read() -> read
    com.badlogic.gdx.files.FileHandle[] list() -> list
    com.badlogic.gdx.files.FileHandle[] list(java.lang.String) -> list
    boolean isDirectory() -> isDirectory
    boolean exists() -> exists
    long length() -> length
    long lastModified() -> lastModified
com.badlogic.gdx.backends.android.AndroidFiles -> com.badlogic.gdx.backends.android.AndroidFiles:
    java.lang.String sdcard -> sdcard
    java.lang.String localpath -> localpath
    android.content.res.AssetManager assets -> assets
    com.badlogic.gdx.files.FileHandle getFileHandle(java.lang.String,com.badlogic.gdx.Files$FileType) -> getFileHandle
    com.badlogic.gdx.files.FileHandle classpath(java.lang.String) -> classpath
    com.badlogic.gdx.files.FileHandle internal(java.lang.String) -> internal
    com.badlogic.gdx.files.FileHandle external(java.lang.String) -> external
    com.badlogic.gdx.files.FileHandle absolute(java.lang.String) -> absolute
    com.badlogic.gdx.files.FileHandle local(java.lang.String) -> local
    java.lang.String getExternalStoragePath() -> getExternalStoragePath
    boolean isExternalStorageAvailable() -> isExternalStorageAvailable
    java.lang.String getLocalStoragePath() -> getLocalStoragePath
    boolean isLocalStorageAvailable() -> isLocalStorageAvailable
com.badlogic.gdx.backends.android.AndroidGL10 -> com.badlogic.gdx.backends.android.AndroidGL10:
    javax.microedition.khronos.opengles.GL10 gl -> gl
    void glActiveTexture(int) -> glActiveTexture
    void glAlphaFunc(int,float) -> glAlphaFunc
    void glBindTexture(int,int) -> glBindTexture
    void glBlendFunc(int,int) -> glBlendFunc
    void glClear(int) -> glClear
    void glClearColor(float,float,float,float) -> glClearColor
    void glClearDepthf(float) -> glClearDepthf
    void glClearStencil(int) -> glClearStencil
    void glClientActiveTexture(int) -> glClientActiveTexture
    void glColor4f(float,float,float,float) -> glColor4f
    void glColorMask(boolean,boolean,boolean,boolean) -> glColorMask
    void glColorPointer(int,int,int,java.nio.Buffer) -> glColorPointer
    void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexImage2D
    void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexSubImage2D
    void glCopyTexImage2D(int,int,int,int,int,int,int,int) -> glCopyTexImage2D
    void glCopyTexSubImage2D(int,int,int,int,int,int,int,int) -> glCopyTexSubImage2D
    void glCullFace(int) -> glCullFace
    void glDeleteTextures(int,java.nio.IntBuffer) -> glDeleteTextures
    void glDepthFunc(int) -> glDepthFunc
    void glDepthMask(boolean) -> glDepthMask
    void glDepthRangef(float,float) -> glDepthRangef
    void glDisable(int) -> glDisable
    void glDisableClientState(int) -> glDisableClientState
    void glDrawArrays(int,int,int) -> glDrawArrays
    void glDrawElements(int,int,int,java.nio.Buffer) -> glDrawElements
    void glEnable(int) -> glEnable
    void glEnableClientState(int) -> glEnableClientState
    void glFinish() -> glFinish
    void glFlush() -> glFlush
    void glFogf(int,float) -> glFogf
    void glFogfv(int,java.nio.FloatBuffer) -> glFogfv
    void glFrontFace(int) -> glFrontFace
    void glFrustumf(float,float,float,float,float,float) -> glFrustumf
    void glGenTextures(int,java.nio.IntBuffer) -> glGenTextures
    int glGetError() -> glGetError
    void glGetIntegerv(int,java.nio.IntBuffer) -> glGetIntegerv
    java.lang.String glGetString(int) -> glGetString
    void glHint(int,int) -> glHint
    void glLightModelf(int,float) -> glLightModelf
    void glLightModelfv(int,java.nio.FloatBuffer) -> glLightModelfv
    void glLightf(int,int,float) -> glLightf
    void glLightfv(int,int,java.nio.FloatBuffer) -> glLightfv
    void glLineWidth(float) -> glLineWidth
    void glLoadIdentity() -> glLoadIdentity
    void glLoadMatrixf(java.nio.FloatBuffer) -> glLoadMatrixf
    void glLogicOp(int) -> glLogicOp
    void glMaterialf(int,int,float) -> glMaterialf
    void glMaterialfv(int,int,java.nio.FloatBuffer) -> glMaterialfv
    void glMatrixMode(int) -> glMatrixMode
    void glMultMatrixf(java.nio.FloatBuffer) -> glMultMatrixf
    void glMultiTexCoord4f(int,float,float,float,float) -> glMultiTexCoord4f
    void glNormal3f(float,float,float) -> glNormal3f
    void glNormalPointer(int,int,java.nio.Buffer) -> glNormalPointer
    void glOrthof(float,float,float,float,float,float) -> glOrthof
    void glPixelStorei(int,int) -> glPixelStorei
    void glPointSize(float) -> glPointSize
    void glPolygonOffset(float,float) -> glPolygonOffset
    void glPopMatrix() -> glPopMatrix
    void glPushMatrix() -> glPushMatrix
    void glReadPixels(int,int,int,int,int,int,java.nio.Buffer) -> glReadPixels
    void glRotatef(float,float,float,float) -> glRotatef
    void glSampleCoverage(float,boolean) -> glSampleCoverage
    void glScalef(float,float,float) -> glScalef
    void glScissor(int,int,int,int) -> glScissor
    void glShadeModel(int) -> glShadeModel
    void glStencilFunc(int,int,int) -> glStencilFunc
    void glStencilMask(int) -> glStencilMask
    void glStencilOp(int,int,int) -> glStencilOp
    void glTexCoordPointer(int,int,int,java.nio.Buffer) -> glTexCoordPointer
    void glTexEnvf(int,int,float) -> glTexEnvf
    void glTexEnvfv(int,int,java.nio.FloatBuffer) -> glTexEnvfv
    void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexImage2D
    void glTexParameterf(int,int,float) -> glTexParameterf
    void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexSubImage2D
    void glTranslatef(float,float,float) -> glTranslatef
    void glVertexPointer(int,int,int,java.nio.Buffer) -> glVertexPointer
    void glViewport(int,int,int,int) -> glViewport
    void glDeleteTextures(int,int[],int) -> glDeleteTextures
    void glFogfv(int,float[],int) -> glFogfv
    void glGenTextures(int,int[],int) -> glGenTextures
    void glGetIntegerv(int,int[],int) -> glGetIntegerv
    void glLightModelfv(int,float[],int) -> glLightModelfv
    void glLightfv(int,int,float[],int) -> glLightfv
    void glLoadMatrixf(float[],int) -> glLoadMatrixf
    void glMaterialfv(int,int,float[],int) -> glMaterialfv
    void glMultMatrixf(float[],int) -> glMultMatrixf
    void glTexEnvfv(int,int,float[],int) -> glTexEnvfv
    void glPolygonMode(int,int) -> glPolygonMode
com.badlogic.gdx.backends.android.AndroidGL11 -> com.badlogic.gdx.backends.android.AndroidGL11:
    javax.microedition.khronos.opengles.GL11 gl -> gl
    void glBindBuffer(int,int) -> glBindBuffer
    void glBufferData(int,int,java.nio.Buffer,int) -> glBufferData
    void glBufferSubData(int,int,int,java.nio.Buffer) -> glBufferSubData
    void glClipPlanef(int,java.nio.FloatBuffer) -> glClipPlanef
    void glColor4ub(byte,byte,byte,byte) -> glColor4ub
    void glDeleteBuffers(int,java.nio.IntBuffer) -> glDeleteBuffers
    void glGenBuffers(int,java.nio.IntBuffer) -> glGenBuffers
    void glGetBooleanv(int,java.nio.IntBuffer) -> glGetBooleanv
    void glGetBufferParameteriv(int,int,java.nio.IntBuffer) -> glGetBufferParameteriv
    void glGetClipPlanef(int,java.nio.FloatBuffer) -> glGetClipPlanef
    void glGetFloatv(int,java.nio.FloatBuffer) -> glGetFloatv
    void glGetLightfv(int,int,java.nio.FloatBuffer) -> glGetLightfv
    void glGetMaterialfv(int,int,java.nio.FloatBuffer) -> glGetMaterialfv
    void glGetPointerv(int,java.nio.Buffer[]) -> glGetPointerv
    void glGetTexEnviv(int,int,java.nio.IntBuffer) -> glGetTexEnviv
    void glGetTexParameterfv(int,int,java.nio.FloatBuffer) -> glGetTexParameterfv
    void glGetTexParameteriv(int,int,java.nio.IntBuffer) -> glGetTexParameteriv
    boolean glIsBuffer(int) -> glIsBuffer
    boolean glIsEnabled(int) -> glIsEnabled
    boolean glIsTexture(int) -> glIsTexture
    void glPointParameterf(int,float) -> glPointParameterf
    void glPointParameterfv(int,java.nio.FloatBuffer) -> glPointParameterfv
    void glPointSizePointerOES(int,int,java.nio.Buffer) -> glPointSizePointerOES
    void glTexEnvi(int,int,int) -> glTexEnvi
    void glTexEnviv(int,int,java.nio.IntBuffer) -> glTexEnviv
    void glTexParameterfv(int,int,java.nio.FloatBuffer) -> glTexParameterfv
    void glTexParameteri(int,int,int) -> glTexParameteri
    void glTexParameteriv(int,int,java.nio.IntBuffer) -> glTexParameteriv
    void glClipPlanef(int,float[],int) -> glClipPlanef
    void glDeleteBuffers(int,int[],int) -> glDeleteBuffers
    void glGenBuffers(int,int[],int) -> glGenBuffers
    void glGetBooleanv(int,boolean[],int) -> glGetBooleanv
    void glGetBufferParameteriv(int,int,int[],int) -> glGetBufferParameteriv
    void glGetClipPlanef(int,float[],int) -> glGetClipPlanef
    void glGetFloatv(int,float[],int) -> glGetFloatv
    void glGetLightfv(int,int,float[],int) -> glGetLightfv
    void glGetMaterialfv(int,int,float[],int) -> glGetMaterialfv
    void glGetTexEnviv(int,int,int[],int) -> glGetTexEnviv
    void glGetTexParameterfv(int,int,float[],int) -> glGetTexParameterfv
    void glGetTexParameteriv(int,int,int[],int) -> glGetTexParameteriv
    void glPointParameterfv(int,float[],int) -> glPointParameterfv
    void glTexEnviv(int,int,int[],int) -> glTexEnviv
    void glTexParameterfv(int,int,float[],int) -> glTexParameterfv
    void glTexParameteriv(int,int,int[],int) -> glTexParameteriv
    void glColorPointer(int,int,int,int) -> glColorPointer
    void glNormalPointer(int,int,int) -> glNormalPointer
    void glTexCoordPointer(int,int,int,int) -> glTexCoordPointer
    void glVertexPointer(int,int,int,int) -> glVertexPointer
    void glDrawElements(int,int,int,int) -> glDrawElements
com.badlogic.gdx.backends.android.AndroidGL20 -> com.badlogic.gdx.backends.android.AndroidGL20:
    void init() -> init
    void glActiveTexture(int) -> glActiveTexture
    void glAttachShader(int,int) -> glAttachShader
    void glBindAttribLocation(int,int,java.lang.String) -> glBindAttribLocation
    void glBindBuffer(int,int) -> glBindBuffer
    void glBindFramebuffer(int,int) -> glBindFramebuffer
    void glBindRenderbuffer(int,int) -> glBindRenderbuffer
    void glBindTexture(int,int) -> glBindTexture
    void glBlendColor(float,float,float,float) -> glBlendColor
    void glBlendEquation(int) -> glBlendEquation
    void glBlendEquationSeparate(int,int) -> glBlendEquationSeparate
    void glBlendFunc(int,int) -> glBlendFunc
    void glBlendFuncSeparate(int,int,int,int) -> glBlendFuncSeparate
    void glBufferData(int,int,java.nio.Buffer,int) -> glBufferData
    void glBufferSubData(int,int,int,java.nio.Buffer) -> glBufferSubData
    int glCheckFramebufferStatus(int) -> glCheckFramebufferStatus
    void glClear(int) -> glClear
    void glClearColor(float,float,float,float) -> glClearColor
    void glClearDepthf(float) -> glClearDepthf
    void glClearStencil(int) -> glClearStencil
    void glColorMask(boolean,boolean,boolean,boolean) -> glColorMask
    void glCompileShader(int) -> glCompileShader
    void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexImage2D
    void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexSubImage2D
    void glCopyTexImage2D(int,int,int,int,int,int,int,int) -> glCopyTexImage2D
    void glCopyTexSubImage2D(int,int,int,int,int,int,int,int) -> glCopyTexSubImage2D
    int glCreateProgram() -> glCreateProgram
    int glCreateShader(int) -> glCreateShader
    void glCullFace(int) -> glCullFace
    void glDeleteBuffers(int,java.nio.IntBuffer) -> glDeleteBuffers
    void glDeleteFramebuffers(int,java.nio.IntBuffer) -> glDeleteFramebuffers
    void glDeleteProgram(int) -> glDeleteProgram
    void glDeleteRenderbuffers(int,java.nio.IntBuffer) -> glDeleteRenderbuffers
    void glDeleteShader(int) -> glDeleteShader
    void glDeleteTextures(int,java.nio.IntBuffer) -> glDeleteTextures
    void glDepthFunc(int) -> glDepthFunc
    void glDepthMask(boolean) -> glDepthMask
    void glDepthRangef(float,float) -> glDepthRangef
    void glDetachShader(int,int) -> glDetachShader
    void glDisable(int) -> glDisable
    void glDisableVertexAttribArray(int) -> glDisableVertexAttribArray
    void glDrawArrays(int,int,int) -> glDrawArrays
    void glDrawElements(int,int,int,java.nio.Buffer) -> glDrawElements
    void glDrawElements(int,int,int,int) -> glDrawElements
    void glEnable(int) -> glEnable
    void glEnableVertexAttribArray(int) -> glEnableVertexAttribArray
    void glFinish() -> glFinish
    void glFlush() -> glFlush
    void glFramebufferRenderbuffer(int,int,int,int) -> glFramebufferRenderbuffer
    void glFramebufferTexture2D(int,int,int,int,int) -> glFramebufferTexture2D
    void glFrontFace(int) -> glFrontFace
    void glGenBuffers(int,java.nio.IntBuffer) -> glGenBuffers
    void glGenerateMipmap(int) -> glGenerateMipmap
    void glGenFramebuffers(int,java.nio.IntBuffer) -> glGenFramebuffers
    void glGenRenderbuffers(int,java.nio.IntBuffer) -> glGenRenderbuffers
    void glGenTextures(int,java.nio.IntBuffer) -> glGenTextures
    java.lang.String glGetActiveAttrib(int,int,java.nio.IntBuffer,java.nio.Buffer) -> glGetActiveAttrib
    java.lang.String glGetActiveUniform(int,int,java.nio.IntBuffer,java.nio.Buffer) -> glGetActiveUniform
    void glGetAttachedShaders(int,int,java.nio.Buffer,java.nio.IntBuffer) -> glGetAttachedShaders
    int glGetAttribLocation(int,java.lang.String) -> glGetAttribLocation
    void glGetBooleanv(int,java.nio.Buffer) -> glGetBooleanv
    void glGetBufferParameteriv(int,int,java.nio.IntBuffer) -> glGetBufferParameteriv
    int glGetError() -> glGetError
    void glGetFloatv(int,java.nio.FloatBuffer) -> glGetFloatv
    void glGetFramebufferAttachmentParameteriv(int,int,int,java.nio.IntBuffer) -> glGetFramebufferAttachmentParameteriv
    void glGetIntegerv(int,java.nio.IntBuffer) -> glGetIntegerv
    void glGetProgramiv(int,int,java.nio.IntBuffer) -> glGetProgramiv
    java.lang.String glGetProgramInfoLog(int) -> glGetProgramInfoLog
    void glGetRenderbufferParameteriv(int,int,java.nio.IntBuffer) -> glGetRenderbufferParameteriv
    void glGetShaderiv(int,int,java.nio.IntBuffer) -> glGetShaderiv
    java.lang.String glGetShaderInfoLog(int) -> glGetShaderInfoLog
    void glGetShaderPrecisionFormat(int,int,java.nio.IntBuffer,java.nio.IntBuffer) -> glGetShaderPrecisionFormat
    void glGetShaderSource(int,int,java.nio.Buffer,java.lang.String) -> glGetShaderSource
    java.lang.String glGetString(int) -> glGetString
    void glGetTexParameterfv(int,int,java.nio.FloatBuffer) -> glGetTexParameterfv
    void glGetTexParameteriv(int,int,java.nio.IntBuffer) -> glGetTexParameteriv
    void glGetUniformfv(int,int,java.nio.FloatBuffer) -> glGetUniformfv
    void glGetUniformiv(int,int,java.nio.IntBuffer) -> glGetUniformiv
    int glGetUniformLocation(int,java.lang.String) -> glGetUniformLocation
    void glGetVertexAttribfv(int,int,java.nio.FloatBuffer) -> glGetVertexAttribfv
    void glGetVertexAttribiv(int,int,java.nio.IntBuffer) -> glGetVertexAttribiv
    void glGetVertexAttribPointerv(int,int,java.nio.Buffer) -> glGetVertexAttribPointerv
    void glHint(int,int) -> glHint
    boolean glIsBuffer(int) -> glIsBuffer
    boolean glIsEnabled(int) -> glIsEnabled
    boolean glIsFramebuffer(int) -> glIsFramebuffer
    boolean glIsProgram(int) -> glIsProgram
    boolean glIsRenderbuffer(int) -> glIsRenderbuffer
    boolean glIsShader(int) -> glIsShader
    boolean glIsTexture(int) -> glIsTexture
    void glLineWidth(float) -> glLineWidth
    void glLinkProgram(int) -> glLinkProgram
    void glPixelStorei(int,int) -> glPixelStorei
    void glPolygonOffset(float,float) -> glPolygonOffset
    void glReadPixels(int,int,int,int,int,int,java.nio.Buffer) -> glReadPixels
    void glReleaseShaderCompiler() -> glReleaseShaderCompiler
    void glRenderbufferStorage(int,int,int,int) -> glRenderbufferStorage
    void glSampleCoverage(float,boolean) -> glSampleCoverage
    void glScissor(int,int,int,int) -> glScissor
    void glShaderBinary(int,java.nio.IntBuffer,int,java.nio.Buffer,int) -> glShaderBinary
    void glShaderSource(int,java.lang.String) -> glShaderSource
    void glStencilFunc(int,int,int) -> glStencilFunc
    void glStencilFuncSeparate(int,int,int,int) -> glStencilFuncSeparate
    void glStencilMask(int) -> glStencilMask
    void glStencilMaskSeparate(int,int) -> glStencilMaskSeparate
    void glStencilOp(int,int,int) -> glStencilOp
    void glStencilOpSeparate(int,int,int,int) -> glStencilOpSeparate
    void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexImage2D
    void glTexParameterf(int,int,float) -> glTexParameterf
    void glTexParameterfv(int,int,java.nio.FloatBuffer) -> glTexParameterfv
    void glTexParameteri(int,int,int) -> glTexParameteri
    void glTexParameteriv(int,int,java.nio.IntBuffer) -> glTexParameteriv
    void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexSubImage2D
    void glUniform1f(int,float) -> glUniform1f
    void glUniform1fv(int,int,java.nio.FloatBuffer) -> glUniform1fv
    void glUniform1i(int,int) -> glUniform1i
    void glUniform1iv(int,int,java.nio.IntBuffer) -> glUniform1iv
    void glUniform2f(int,float,float) -> glUniform2f
    void glUniform2fv(int,int,java.nio.FloatBuffer) -> glUniform2fv
    void glUniform2i(int,int,int) -> glUniform2i
    void glUniform2iv(int,int,java.nio.IntBuffer) -> glUniform2iv
    void glUniform3f(int,float,float,float) -> glUniform3f
    void glUniform3fv(int,int,java.nio.FloatBuffer) -> glUniform3fv
    void glUniform3i(int,int,int,int) -> glUniform3i
    void glUniform3iv(int,int,java.nio.IntBuffer) -> glUniform3iv
    void glUniform4f(int,float,float,float,float) -> glUniform4f
    void glUniform4fv(int,int,java.nio.FloatBuffer) -> glUniform4fv
    void glUniform4i(int,int,int,int,int) -> glUniform4i
    void glUniform4iv(int,int,java.nio.IntBuffer) -> glUniform4iv
    void glUniformMatrix2fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix2fv
    void glUniformMatrix3fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix3fv
    void glUniformMatrix4fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix4fv
    void glUseProgram(int) -> glUseProgram
    void glValidateProgram(int) -> glValidateProgram
    void glVertexAttrib1f(int,float) -> glVertexAttrib1f
    void glVertexAttrib1fv(int,java.nio.FloatBuffer) -> glVertexAttrib1fv
    void glVertexAttrib2f(int,float,float) -> glVertexAttrib2f
    void glVertexAttrib2fv(int,java.nio.FloatBuffer) -> glVertexAttrib2fv
    void glVertexAttrib3f(int,float,float,float) -> glVertexAttrib3f
    void glVertexAttrib3fv(int,java.nio.FloatBuffer) -> glVertexAttrib3fv
    void glVertexAttrib4f(int,float,float,float,float) -> glVertexAttrib4f
    void glVertexAttrib4fv(int,java.nio.FloatBuffer) -> glVertexAttrib4fv
    void glVertexAttribPointer(int,int,int,boolean,int,java.nio.Buffer) -> glVertexAttribPointer
    void glVertexAttribPointer(int,int,int,boolean,int,int) -> glVertexAttribPointer
    void glViewport(int,int,int,int) -> glViewport
com.badlogic.gdx.backends.android.AndroidGraphics -> com.badlogic.gdx.backends.android.AndroidGraphics:
    android.view.View view -> view
    int width -> width
    int height -> height
    com.badlogic.gdx.backends.android.AndroidApplication app -> app
    com.badlogic.gdx.graphics.GLCommon gl -> gl
    com.badlogic.gdx.graphics.GL10 gl10 -> gl10
    com.badlogic.gdx.graphics.GL11 gl11 -> gl11
    com.badlogic.gdx.graphics.GL20 gl20 -> gl20
    javax.microedition.khronos.egl.EGLContext eglContext -> eglContext
    java.lang.String extensions -> extensions
    long lastFrameTime -> lastFrameTime
    float deltaTime -> deltaTime
    long frameStart -> frameStart
    int frames -> frames
    int fps -> fps
    com.badlogic.gdx.math.WindowedMean mean -> mean
    boolean created -> created
    boolean running -> running
    boolean pause -> pause
    boolean resume -> resume
    boolean destroy -> destroy
    float ppiX -> ppiX
    float ppiY -> ppiY
    float ppcX -> ppcX
    float ppcY -> ppcY
    float density -> density
    com.badlogic.gdx.backends.android.AndroidApplicationConfiguration config -> config
    com.badlogic.gdx.Graphics$BufferFormat bufferFormat -> bufferFormat
    boolean isContinuous -> isContinuous
    int[] value -> value
    java.lang.Object synch -> synch
    void setPreserveContext(android.view.View) -> setPreserveContext
    android.view.View createGLSurfaceView(android.app.Activity,boolean,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy) -> createGLSurfaceView
    android.opengl.GLSurfaceView$EGLConfigChooser getEglConfigChooser() -> getEglConfigChooser
    void updatePpi() -> updatePpi
    boolean checkGL20() -> checkGL20
    com.badlogic.gdx.graphics.GL10 getGL10() -> getGL10
    com.badlogic.gdx.graphics.GL11 getGL11() -> getGL11
    com.badlogic.gdx.graphics.GL20 getGL20() -> getGL20
    int getHeight() -> getHeight
    int getWidth() -> getWidth
    boolean isGL11Available() -> isGL11Available
    boolean isGL20Available() -> isGL20Available
    boolean isPowerOfTwo(int) -> isPowerOfTwo
    void setupGL(javax.microedition.khronos.opengles.GL10) -> setupGL
    void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int) -> onSurfaceChanged
    void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig) -> onSurfaceCreated
    void logConfig(javax.microedition.khronos.egl.EGLConfig) -> logConfig
    int getAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> getAttrib
    void resume() -> resume
    void pause() -> pause
    void destroy() -> destroy
    void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
    float getDeltaTime() -> getDeltaTime
    float getRawDeltaTime() -> getRawDeltaTime
    com.badlogic.gdx.Graphics$GraphicsType getType() -> getType
    int getFramesPerSecond() -> getFramesPerSecond
    void clearManagedCaches() -> clearManagedCaches
    android.view.View getView() -> getView
    com.badlogic.gdx.graphics.GLCommon getGLCommon() -> getGLCommon
    float getPpiX() -> getPpiX
    float getPpiY() -> getPpiY
    float getPpcX() -> getPpcX
    float getPpcY() -> getPpcY
    float getDensity() -> getDensity
    boolean supportsDisplayModeChange() -> supportsDisplayModeChange
    boolean setDisplayMode(com.badlogic.gdx.Graphics$DisplayMode) -> setDisplayMode
    com.badlogic.gdx.Graphics$DisplayMode[] getDisplayModes() -> getDisplayModes
    boolean setDisplayMode(int,int,boolean) -> setDisplayMode
    void setTitle(java.lang.String) -> setTitle
    com.badlogic.gdx.Graphics$DisplayMode getDesktopDisplayMode() -> getDesktopDisplayMode
    com.badlogic.gdx.Graphics$BufferFormat getBufferFormat() -> getBufferFormat
    void setVSync(boolean) -> setVSync
    boolean supportsExtension(java.lang.String) -> supportsExtension
    void setContinuousRendering(boolean) -> setContinuousRendering
    boolean isContinuousRendering() -> isContinuousRendering
    void requestRendering() -> requestRendering
    boolean isFullscreen() -> isFullscreen
com.badlogic.gdx.backends.android.AndroidGraphics$1 -> com.badlogic.gdx.backends.android.AndroidGraphics$1:
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy val$resolutionStrategy -> val$resolutionStrategy
    com.badlogic.gdx.backends.android.AndroidGraphics this$0 -> this$0
    void onMeasure(int,int) -> onMeasure
    android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
com.badlogic.gdx.backends.android.AndroidGraphics$1$1 -> com.badlogic.gdx.backends.android.AndroidGraphics$1$1:
    com.badlogic.gdx.backends.android.AndroidGraphics$1 this$1 -> this$1
    boolean deleteSurroundingText(int,int) -> deleteSurroundingText
    void sendDownUpKeyEventForBackwardCompatibility(int) -> sendDownUpKeyEventForBackwardCompatibility
com.badlogic.gdx.backends.android.AndroidGraphics$AndroidDisplayMode -> com.badlogic.gdx.backends.android.AndroidGraphics$AndroidDisplayMode:
    com.badlogic.gdx.backends.android.AndroidGraphics this$0 -> this$0
com.badlogic.gdx.backends.android.AndroidGraphicsDaydream -> com.badlogic.gdx.backends.android.AndroidGraphicsDaydream:
    android.view.View view -> view
    int width -> width
    int height -> height
    com.badlogic.gdx.backends.android.AndroidDaydream app -> app
    com.badlogic.gdx.graphics.GLCommon gl -> gl
    com.badlogic.gdx.graphics.GL10 gl10 -> gl10
    com.badlogic.gdx.graphics.GL11 gl11 -> gl11
    com.badlogic.gdx.graphics.GL20 gl20 -> gl20
    javax.microedition.khronos.egl.EGLContext eglContext -> eglContext
    java.lang.String extensions -> extensions
    long lastFrameTime -> lastFrameTime
    float deltaTime -> deltaTime
    long frameStart -> frameStart
    int frames -> frames
    int fps -> fps
    com.badlogic.gdx.math.WindowedMean mean -> mean
    boolean created -> created
    boolean running -> running
    boolean pause -> pause
    boolean resume -> resume
    boolean destroy -> destroy
    float ppiX -> ppiX
    float ppiY -> ppiY
    float ppcX -> ppcX
    float ppcY -> ppcY
    float density -> density
    com.badlogic.gdx.backends.android.AndroidApplicationConfiguration config -> config
    com.badlogic.gdx.Graphics$BufferFormat bufferFormat -> bufferFormat
    boolean isContinuous -> isContinuous
    int[] value -> value
    java.lang.Object synch -> synch
    void setPreserveContext(android.view.View) -> setPreserveContext
    android.view.View createGLSurfaceView(android.service.dreams.DreamService,boolean,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy) -> createGLSurfaceView
    android.opengl.GLSurfaceView$EGLConfigChooser getEglConfigChooser() -> getEglConfigChooser
    void updatePpi() -> updatePpi
    boolean checkGL20() -> checkGL20
    com.badlogic.gdx.graphics.GL10 getGL10() -> getGL10
    com.badlogic.gdx.graphics.GL11 getGL11() -> getGL11
    com.badlogic.gdx.graphics.GL20 getGL20() -> getGL20
    int getHeight() -> getHeight
    int getWidth() -> getWidth
    boolean isGL11Available() -> isGL11Available
    boolean isGL20Available() -> isGL20Available
    boolean isPowerOfTwo(int) -> isPowerOfTwo
    void setupGL(javax.microedition.khronos.opengles.GL10) -> setupGL
    void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int) -> onSurfaceChanged
    void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig) -> onSurfaceCreated
    void logConfig(javax.microedition.khronos.egl.EGLConfig) -> logConfig
    int getAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> getAttrib
    void resume() -> resume
    void pause() -> pause
    void destroy() -> destroy
    void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
    float getDeltaTime() -> getDeltaTime
    float getRawDeltaTime() -> getRawDeltaTime
    com.badlogic.gdx.Graphics$GraphicsType getType() -> getType
    int getFramesPerSecond() -> getFramesPerSecond
    void clearManagedCaches() -> clearManagedCaches
    android.view.View getView() -> getView
    com.badlogic.gdx.graphics.GLCommon getGLCommon() -> getGLCommon
    float getPpiX() -> getPpiX
    float getPpiY() -> getPpiY
    float getPpcX() -> getPpcX
    float getPpcY() -> getPpcY
    float getDensity() -> getDensity
    boolean supportsDisplayModeChange() -> supportsDisplayModeChange
    boolean setDisplayMode(com.badlogic.gdx.Graphics$DisplayMode) -> setDisplayMode
    com.badlogic.gdx.Graphics$DisplayMode[] getDisplayModes() -> getDisplayModes
    boolean setDisplayMode(int,int,boolean) -> setDisplayMode
    void setTitle(java.lang.String) -> setTitle
    com.badlogic.gdx.Graphics$DisplayMode getDesktopDisplayMode() -> getDesktopDisplayMode
    com.badlogic.gdx.Graphics$BufferFormat getBufferFormat() -> getBufferFormat
    void setVSync(boolean) -> setVSync
    boolean supportsExtension(java.lang.String) -> supportsExtension
    void setContinuousRendering(boolean) -> setContinuousRendering
    boolean isContinuousRendering() -> isContinuousRendering
    void requestRendering() -> requestRendering
    boolean isFullscreen() -> isFullscreen
com.badlogic.gdx.backends.android.AndroidGraphicsDaydream$1 -> com.badlogic.gdx.backends.android.AndroidGraphicsDaydream$1:
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy val$resolutionStrategy -> val$resolutionStrategy
    com.badlogic.gdx.backends.android.AndroidGraphicsDaydream this$0 -> this$0
    void onMeasure(int,int) -> onMeasure
com.badlogic.gdx.backends.android.AndroidGraphicsDaydream$AndroidDisplayMode -> com.badlogic.gdx.backends.android.AndroidGraphicsDaydream$AndroidDisplayMode:
    com.badlogic.gdx.backends.android.AndroidGraphicsDaydream this$0 -> this$0
com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper -> com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper:
    android.view.View view -> view
    int width -> width
    int height -> height
    com.badlogic.gdx.backends.android.AndroidLiveWallpaper app -> app
    com.badlogic.gdx.graphics.GLCommon gl -> gl
    com.badlogic.gdx.graphics.GL10 gl10 -> gl10
    com.badlogic.gdx.graphics.GL11 gl11 -> gl11
    com.badlogic.gdx.graphics.GL20 gl20 -> gl20
    android.opengl.GLU glu -> glu
    javax.microedition.khronos.egl.EGLContext eglContext -> eglContext
    java.lang.String extensions -> extensions
    long lastFrameTime -> lastFrameTime
    float deltaTime -> deltaTime
    long frameStart -> frameStart
    int frames -> frames
    int fps -> fps
    com.badlogic.gdx.math.WindowedMean mean -> mean
    boolean created -> created
    boolean running -> running
    boolean pause -> pause
    boolean resume -> resume
    boolean destroy -> destroy
    float ppiX -> ppiX
    float ppiY -> ppiY
    float ppcX -> ppcX
    float ppcY -> ppcY
    float density -> density
    com.badlogic.gdx.backends.android.AndroidApplicationConfiguration config -> config
    com.badlogic.gdx.Graphics$BufferFormat bufferFormat -> bufferFormat
    boolean isContinuous -> isContinuous
    boolean configLogged -> configLogged
    int[] value -> value
    java.lang.Object synch -> synch
    void setPreserveContext(java.lang.Object) -> setPreserveContext
    android.view.SurfaceHolder getSurfaceHolder() -> getSurfaceHolder
    android.view.View createGLSurfaceView(android.content.Context,boolean,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy) -> createGLSurfaceView
    android.opengl.GLSurfaceView$EGLConfigChooser getEglConfigChooser() -> getEglConfigChooser
    void updatePpi() -> updatePpi
    boolean checkGL20() -> checkGL20
    com.badlogic.gdx.graphics.GL10 getGL10() -> getGL10
    com.badlogic.gdx.graphics.GL11 getGL11() -> getGL11
    com.badlogic.gdx.graphics.GL20 getGL20() -> getGL20
    int getHeight() -> getHeight
    int getWidth() -> getWidth
    boolean isGL11Available() -> isGL11Available
    boolean isGL20Available() -> isGL20Available
    boolean isPowerOfTwo(int) -> isPowerOfTwo
    void setupGL(javax.microedition.khronos.opengles.GL10) -> setupGL
    void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int) -> onSurfaceChanged
    void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig) -> onSurfaceCreated
    void logConfig(javax.microedition.khronos.egl.EGLConfig) -> logConfig
    int getAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> getAttrib
    void resume() -> resume
    void pause() -> pause
    void destroy() -> destroy
    void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
    float getDeltaTime() -> getDeltaTime
    float getRawDeltaTime() -> getRawDeltaTime
    com.badlogic.gdx.Graphics$GraphicsType getType() -> getType
    int getFramesPerSecond() -> getFramesPerSecond
    void clearManagedCaches() -> clearManagedCaches
    android.view.View getView() -> getView
    com.badlogic.gdx.graphics.GLCommon getGLCommon() -> getGLCommon
    float getPpiX() -> getPpiX
    float getPpiY() -> getPpiY
    float getPpcX() -> getPpcX
    float getPpcY() -> getPpcY
    float getDensity() -> getDensity
    boolean supportsDisplayModeChange() -> supportsDisplayModeChange
    boolean setDisplayMode(com.badlogic.gdx.Graphics$DisplayMode) -> setDisplayMode
    com.badlogic.gdx.Graphics$DisplayMode[] getDisplayModes() -> getDisplayModes
    boolean setDisplayMode(int,int,boolean) -> setDisplayMode
    void setTitle(java.lang.String) -> setTitle
    com.badlogic.gdx.Graphics$DisplayMode getDesktopDisplayMode() -> getDesktopDisplayMode
    com.badlogic.gdx.Graphics$BufferFormat getBufferFormat() -> getBufferFormat
    void setVSync(boolean) -> setVSync
    boolean supportsExtension(java.lang.String) -> supportsExtension
    void setContinuousRendering(boolean) -> setContinuousRendering
    boolean isContinuousRendering() -> isContinuousRendering
    void requestRendering() -> requestRendering
    boolean isFullscreen() -> isFullscreen
com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper$1 -> com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper$1:
    com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper this$0 -> this$0
    android.view.SurfaceHolder getHolder() -> getHolder
    void onDestroy() -> onDestroy
com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper$2 -> com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper$2:
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy val$resolutionStrategy -> val$resolutionStrategy
    com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper this$0 -> this$0
    void onMeasure(int,int) -> onMeasure
    android.view.SurfaceHolder getHolder() -> getHolder
    void onDestroy() -> onDestroy
com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper$3 -> com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper$3:
    com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper this$0 -> this$0
    android.view.SurfaceHolder getHolder() -> getHolder
com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper$AndroidDisplayMode -> com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper$AndroidDisplayMode:
    com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper this$0 -> this$0
com.badlogic.gdx.backends.android.AndroidInput -> com.badlogic.gdx.backends.android.AndroidInput:
    com.badlogic.gdx.utils.Pool usedKeyEvents -> usedKeyEvents
    com.badlogic.gdx.utils.Pool usedTouchEvents -> usedTouchEvents
    java.util.ArrayList keyListeners -> keyListeners
    java.util.ArrayList keyEvents -> keyEvents
    java.util.ArrayList touchEvents -> touchEvents
    int[] touchX -> touchX
    int[] touchY -> touchY
    int[] deltaX -> deltaX
    int[] deltaY -> deltaY
    boolean[] touched -> touched
    int[] realId -> realId
    boolean hasMultitouch -> hasMultitouch
    com.badlogic.gdx.utils.IntMap keys -> keys
    android.hardware.SensorManager manager -> manager
    boolean accelerometerAvailable -> accelerometerAvailable
    float[] accelerometerValues -> accelerometerValues
    java.lang.String text -> text
    com.badlogic.gdx.Input$TextInputListener textListener -> textListener
    android.os.Handler handle -> handle
    com.badlogic.gdx.Application app -> app
    android.content.Context context -> context
    com.badlogic.gdx.backends.android.AndroidTouchHandler touchHandler -> touchHandler
    int sleepTime -> sleepTime
    boolean catchBack -> catchBack
    boolean catchMenu -> catchMenu
    android.os.Vibrator vibrator -> vibrator
    boolean compassAvailable -> compassAvailable
    boolean keyboardAvailable -> keyboardAvailable
    float[] magneticFieldValues -> magneticFieldValues
    float azimuth -> azimuth
    float pitch -> pitch
    float roll -> roll
    float inclination -> inclination
    boolean justTouched -> justTouched
    com.badlogic.gdx.InputProcessor processor -> processor
    com.badlogic.gdx.backends.android.AndroidApplicationConfiguration config -> config
    com.badlogic.gdx.Input$Orientation nativeOrientation -> nativeOrientation
    long currentEventTimeStamp -> currentEventTimeStamp
    com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard onscreenKeyboard -> onscreenKeyboard
    android.hardware.SensorEventListener accelerometerListener -> accelerometerListener
    android.hardware.SensorEventListener compassListener -> compassListener
    boolean requestFocus -> requestFocus
    float[] R -> R
    float[] orientation -> orientation
    float getAccelerometerX() -> getAccelerometerX
    float getAccelerometerY() -> getAccelerometerY
    float getAccelerometerZ() -> getAccelerometerZ
    void getTextInput(com.badlogic.gdx.Input$TextInputListener,java.lang.String,java.lang.String) -> getTextInput
    void getPlaceholderTextInput(com.badlogic.gdx.Input$TextInputListener,java.lang.String,java.lang.String) -> getPlaceholderTextInput
    int getX() -> getX
    int getY() -> getY
    int getX(int) -> getX
    int getY(int) -> getY
    boolean isTouched(int) -> isTouched
    boolean isKeyPressed(int) -> isKeyPressed
    boolean isTouched() -> isTouched
    void setInputProcessor(com.badlogic.gdx.InputProcessor) -> setInputProcessor
    void processEvents() -> processEvents
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void onTap(int,int) -> onTap
    void onDrop(int,int) -> onDrop
    void postTap(int,int) -> postTap
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    void setOnscreenKeyboardVisible(boolean) -> setOnscreenKeyboardVisible
    void setCatchBackKey(boolean) -> setCatchBackKey
    void setCatchMenuKey(boolean) -> setCatchMenuKey
    void vibrate(int) -> vibrate
    void vibrate(long[],int) -> vibrate
    void cancelVibrate() -> cancelVibrate
    boolean justTouched() -> justTouched
    boolean isButtonPressed(int) -> isButtonPressed
    void updateOrientation() -> updateOrientation
    void getRotationMatrix(float[]) -> getRotationMatrix
    float getAzimuth() -> getAzimuth
    float getPitch() -> getPitch
    float getRoll() -> getRoll
    void registerSensorListeners() -> registerSensorListeners
    void unregisterSensorListeners() -> unregisterSensorListeners
    com.badlogic.gdx.InputProcessor getInputProcessor() -> getInputProcessor
    boolean isPeripheralAvailable(com.badlogic.gdx.Input$Peripheral) -> isPeripheralAvailable
    int getFreePointerIndex() -> getFreePointerIndex
    int lookUpPointerIndex(int) -> lookUpPointerIndex
    int getRotation() -> getRotation
    com.badlogic.gdx.Input$Orientation getNativeOrientation() -> getNativeOrientation
    void setCursorCatched(boolean) -> setCursorCatched
    boolean isCursorCatched() -> isCursorCatched
    int getDeltaX() -> getDeltaX
    int getDeltaX(int) -> getDeltaX
    int getDeltaY() -> getDeltaY
    int getDeltaY(int) -> getDeltaY
    void setCursorPosition(int,int) -> setCursorPosition
    long getCurrentEventTime() -> getCurrentEventTime
    void addKeyListener(android.view.View$OnKeyListener) -> addKeyListener
com.badlogic.gdx.backends.android.AndroidInput$1 -> com.badlogic.gdx.backends.android.AndroidInput$1:
    com.badlogic.gdx.backends.android.AndroidInput this$0 -> this$0
    com.badlogic.gdx.backends.android.AndroidInput$KeyEvent newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.backends.android.AndroidInput$2 -> com.badlogic.gdx.backends.android.AndroidInput$2:
    com.badlogic.gdx.backends.android.AndroidInput this$0 -> this$0
    com.badlogic.gdx.backends.android.AndroidInput$TouchEvent newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.backends.android.AndroidInput$3 -> com.badlogic.gdx.backends.android.AndroidInput$3:
    java.lang.String val$title -> val$title
    java.lang.String val$text -> val$text
    com.badlogic.gdx.Input$TextInputListener val$listener -> val$listener
    com.badlogic.gdx.backends.android.AndroidInput this$0 -> this$0
    void run() -> run
com.badlogic.gdx.backends.android.AndroidInput$3$1 -> com.badlogic.gdx.backends.android.AndroidInput$3$1:
    android.widget.EditText val$input -> val$input
    com.badlogic.gdx.backends.android.AndroidInput$3 this$1 -> this$1
    void onClick(android.content.DialogInterface,int) -> onClick
com.badlogic.gdx.backends.android.AndroidInput$3$1$1 -> com.badlogic.gdx.backends.android.AndroidInput$3$1$1:
    com.badlogic.gdx.backends.android.AndroidInput$3$1 this$2 -> this$2
    void run() -> run
com.badlogic.gdx.backends.android.AndroidInput$3$2 -> com.badlogic.gdx.backends.android.AndroidInput$3$2:
    com.badlogic.gdx.backends.android.AndroidInput$3 this$1 -> this$1
    void onClick(android.content.DialogInterface,int) -> onClick
com.badlogic.gdx.backends.android.AndroidInput$3$2$1 -> com.badlogic.gdx.backends.android.AndroidInput$3$2$1:
    com.badlogic.gdx.backends.android.AndroidInput$3$2 this$2 -> this$2
    void run() -> run
com.badlogic.gdx.backends.android.AndroidInput$3$3 -> com.badlogic.gdx.backends.android.AndroidInput$3$3:
    com.badlogic.gdx.backends.android.AndroidInput$3 this$1 -> this$1
    void onCancel(android.content.DialogInterface) -> onCancel
com.badlogic.gdx.backends.android.AndroidInput$3$3$1 -> com.badlogic.gdx.backends.android.AndroidInput$3$3$1:
    com.badlogic.gdx.backends.android.AndroidInput$3$3 this$2 -> this$2
    void run() -> run
com.badlogic.gdx.backends.android.AndroidInput$4 -> com.badlogic.gdx.backends.android.AndroidInput$4:
    java.lang.String val$title -> val$title
    java.lang.String val$placeholder -> val$placeholder
    com.badlogic.gdx.Input$TextInputListener val$listener -> val$listener
    com.badlogic.gdx.backends.android.AndroidInput this$0 -> this$0
    void run() -> run
com.badlogic.gdx.backends.android.AndroidInput$4$1 -> com.badlogic.gdx.backends.android.AndroidInput$4$1:
    android.widget.EditText val$input -> val$input
    com.badlogic.gdx.backends.android.AndroidInput$4 this$1 -> this$1
    void onClick(android.content.DialogInterface,int) -> onClick
com.badlogic.gdx.backends.android.AndroidInput$4$1$1 -> com.badlogic.gdx.backends.android.AndroidInput$4$1$1:
    com.badlogic.gdx.backends.android.AndroidInput$4$1 this$2 -> this$2
    void run() -> run
com.badlogic.gdx.backends.android.AndroidInput$4$2 -> com.badlogic.gdx.backends.android.AndroidInput$4$2:
    com.badlogic.gdx.backends.android.AndroidInput$4 this$1 -> this$1
    void onCancel(android.content.DialogInterface) -> onCancel
com.badlogic.gdx.backends.android.AndroidInput$4$2$1 -> com.badlogic.gdx.backends.android.AndroidInput$4$2$1:
    com.badlogic.gdx.backends.android.AndroidInput$4$2 this$2 -> this$2
    void run() -> run
com.badlogic.gdx.backends.android.AndroidInput$5 -> com.badlogic.gdx.backends.android.AndroidInput$5:
    boolean val$visible -> val$visible
    com.badlogic.gdx.backends.android.AndroidInput this$0 -> this$0
    void run() -> run
com.badlogic.gdx.backends.android.AndroidInput$KeyEvent -> com.badlogic.gdx.backends.android.AndroidInput$KeyEvent:
    int KEY_DOWN -> KEY_DOWN
    int KEY_UP -> KEY_UP
    int KEY_TYPED -> KEY_TYPED
    long timeStamp -> timeStamp
    int type -> type
    int keyCode -> keyCode
    char keyChar -> keyChar
com.badlogic.gdx.backends.android.AndroidInput$SensorListener -> com.badlogic.gdx.backends.android.AndroidInput$SensorListener:
    float[] accelerometerValues -> accelerometerValues
    float[] magneticFieldValues -> magneticFieldValues
    com.badlogic.gdx.Input$Orientation nativeOrientation -> nativeOrientation
    com.badlogic.gdx.backends.android.AndroidInput this$0 -> this$0
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
com.badlogic.gdx.backends.android.AndroidInput$TouchEvent -> com.badlogic.gdx.backends.android.AndroidInput$TouchEvent:
    int TOUCH_DOWN -> TOUCH_DOWN
    int TOUCH_UP -> TOUCH_UP
    int TOUCH_DRAGGED -> TOUCH_DRAGGED
    long timeStamp -> timeStamp
    int type -> type
    int x -> x
    int y -> y
    int pointer -> pointer
com.badlogic.gdx.backends.android.AndroidInputFactory -> com.badlogic.gdx.backends.android.AndroidInputFactory:
    com.badlogic.gdx.backends.android.AndroidInput newAndroidInput(com.badlogic.gdx.Application,android.content.Context,java.lang.Object,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> newAndroidInput
com.badlogic.gdx.backends.android.AndroidInputThreePlus -> com.badlogic.gdx.backends.android.AndroidInputThreePlus:
    java.util.ArrayList genericMotionListeners -> genericMotionListeners
    boolean onGenericMotion(android.view.View,android.view.MotionEvent) -> onGenericMotion
    void addGenericMotionListener(android.view.View$OnGenericMotionListener) -> addGenericMotionListener
com.badlogic.gdx.backends.android.AndroidLiveWallpaper -> com.badlogic.gdx.backends.android.AndroidLiveWallpaper:
    com.badlogic.gdx.backends.android.AndroidLiveWallpaperService service -> service
    com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper graphics -> graphics
    com.badlogic.gdx.backends.android.AndroidInput input -> input
    com.badlogic.gdx.backends.android.AndroidAudio audio -> audio
    com.badlogic.gdx.backends.android.AndroidFiles files -> files
    com.badlogic.gdx.backends.android.AndroidNet net -> net
    com.badlogic.gdx.ApplicationListener listener -> listener
    boolean firstResume -> firstResume
    com.badlogic.gdx.utils.Array runnables -> runnables
    com.badlogic.gdx.utils.Array executedRunnables -> executedRunnables
    com.badlogic.gdx.utils.Array lifecycleListeners -> lifecycleListeners
    int logLevel -> logLevel
    com.badlogic.gdx.backends.android.AndroidClipboard clipboard -> clipboard
    void initialize(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> initialize
    void onPause() -> onPause
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    android.view.WindowManager getWindowManager() -> getWindowManager
    com.badlogic.gdx.backends.android.AndroidLiveWallpaperService getService() -> getService
    com.badlogic.gdx.ApplicationListener getListener() -> getListener
    void postRunnable(java.lang.Runnable) -> postRunnable
    com.badlogic.gdx.Audio getAudio() -> getAudio
    com.badlogic.gdx.Files getFiles() -> getFiles
    com.badlogic.gdx.Graphics getGraphics() -> getGraphics
    com.badlogic.gdx.Input getInput() -> getInput
    com.badlogic.gdx.Net getNet() -> getNet
    com.badlogic.gdx.Application$ApplicationType getType() -> getType
    int getVersion() -> getVersion
    long getJavaHeap() -> getJavaHeap
    long getNativeHeap() -> getNativeHeap
    com.badlogic.gdx.Preferences getPreferences(java.lang.String) -> getPreferences
    com.badlogic.gdx.utils.Clipboard getClipboard() -> getClipboard
    void debug(java.lang.String,java.lang.String) -> debug
    void debug(java.lang.String,java.lang.String,java.lang.Throwable) -> debug
    void log(java.lang.String,java.lang.String) -> log
    void log(java.lang.String,java.lang.String,java.lang.Exception) -> log
    void error(java.lang.String,java.lang.String) -> error
    void error(java.lang.String,java.lang.String,java.lang.Throwable) -> error
    void setLogLevel(int) -> setLogLevel
    void exit() -> exit
    void addLifecycleListener(com.badlogic.gdx.LifecycleListener) -> addLifecycleListener
    void removeLifecycleListener(com.badlogic.gdx.LifecycleListener) -> removeLifecycleListener
    com.badlogic.gdx.ApplicationListener getApplicationListener() -> getApplicationListener
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService -> com.badlogic.gdx.backends.android.AndroidLiveWallpaperService:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    com.badlogic.gdx.backends.android.AndroidLiveWallpaper app -> app
    android.view.SurfaceHolder$Callback view -> view
    int viewFormat -> viewFormat
    int viewWidth -> viewWidth
    int viewHeight -> viewHeight
    int engines -> engines
    int visibleEngines -> visibleEngines
    com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine linkedEngine -> linkedEngine
    boolean isPreviewNotified -> isPreviewNotified
    boolean notifiedPreviewState -> notifiedPreviewState
    int[] sync -> sync
    void setLinkedEngine(com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine) -> setLinkedEngine
    void onCreate() -> onCreate
    android.service.wallpaper.WallpaperService$Engine onCreateEngine() -> onCreateEngine
    void onCreateApplication() -> onCreateApplication
    void initialize(com.badlogic.gdx.ApplicationListener,boolean) -> initialize
    void initialize(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> initialize
    android.view.SurfaceHolder getSurfaceHolder() -> getSurfaceHolder
    void onDeepPauseApplication() -> onDeepPauseApplication
    void onDestroy() -> onDestroy
    void finalize() -> finalize
    com.badlogic.gdx.backends.android.AndroidLiveWallpaper getLiveWallpaper() -> getLiveWallpaper
    android.view.WindowManager getWindowManager() -> getWindowManager
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine -> com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine:
    boolean engineIsVisible -> engineIsVisible
    int engineFormat -> engineFormat
    int engineWidth -> engineWidth
    int engineHeight -> engineHeight
    boolean offsetsConsumed -> offsetsConsumed
    float xOffset -> xOffset
    float yOffset -> yOffset
    float xOffsetStep -> xOffsetStep
    float yOffsetStep -> yOffsetStep
    int xPixelOffset -> xPixelOffset
    int yPixelOffset -> yPixelOffset
    com.badlogic.gdx.backends.android.AndroidLiveWallpaperService this$0 -> this$0
    void onCreate(android.view.SurfaceHolder) -> onCreate
    void onSurfaceCreated(android.view.SurfaceHolder) -> onSurfaceCreated
    void onSurfaceChanged(android.view.SurfaceHolder,int,int,int) -> onSurfaceChanged
    void notifySurfaceChanged(int,int,int,boolean) -> notifySurfaceChanged
    void onVisibilityChanged(boolean) -> onVisibilityChanged
    void notifyVisibilityChanged(boolean) -> notifyVisibilityChanged
    void onResume() -> onResume
    void onPause() -> onPause
    void onSurfaceDestroyed(android.view.SurfaceHolder) -> onSurfaceDestroyed
    void onDestroy() -> onDestroy
    android.os.Bundle onCommand(java.lang.String,int,int,int,android.os.Bundle,boolean) -> onCommand
    void onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onOffsetsChanged(float,float,float,float,int,int) -> onOffsetsChanged
    void notifyOffsetsChanged() -> notifyOffsetsChanged
    void notifyPreviewState() -> notifyPreviewState
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine$1 -> com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine$1:
    com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine this$1 -> this$1
    void run() -> run
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine$2 -> com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine$2:
    boolean val$currentPreviewState -> val$currentPreviewState
    com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine this$1 -> this$1
    void run() -> run
com.badlogic.gdx.backends.android.AndroidMultiTouchHandler -> com.badlogic.gdx.backends.android.AndroidMultiTouchHandler:
    void onTouch(android.view.MotionEvent,com.badlogic.gdx.backends.android.AndroidInput) -> onTouch
    void logAction(int,int) -> logAction
    void postTouchEvent(com.badlogic.gdx.backends.android.AndroidInput,int,int,int,int,long) -> postTouchEvent
    boolean supportsMultitouch(android.content.Context) -> supportsMultitouch
com.badlogic.gdx.backends.android.AndroidMusic -> com.badlogic.gdx.backends.android.AndroidMusic:
    com.badlogic.gdx.backends.android.AndroidAudio audio -> audio
    android.media.MediaPlayer player -> player
    boolean isPrepared -> isPrepared
    boolean wasPlaying -> wasPlaying
    float volume -> volume
    com.badlogic.gdx.audio.Music$OnCompletionListener onCompletionListener -> onCompletionListener
    void dispose() -> dispose
    boolean isLooping() -> isLooping
    boolean isPlaying() -> isPlaying
    void pause() -> pause
    void play() -> play
    void setLooping(boolean) -> setLooping
    void setVolume(float) -> setVolume
    float getVolume() -> getVolume
    void setPan(float,float) -> setPan
    void stop() -> stop
    float getPosition() -> getPosition
    void setOnCompletionListener(com.badlogic.gdx.audio.Music$OnCompletionListener) -> setOnCompletionListener
    void onCompletion(android.media.MediaPlayer) -> onCompletion
com.badlogic.gdx.backends.android.AndroidMusic$1 -> com.badlogic.gdx.backends.android.AndroidMusic$1:
    com.badlogic.gdx.backends.android.AndroidMusic this$0 -> this$0
    void run() -> run
com.badlogic.gdx.backends.android.AndroidNet -> com.badlogic.gdx.backends.android.AndroidNet:
    com.badlogic.gdx.backends.android.AndroidApplication app -> app
    com.badlogic.gdx.net.NetJavaImpl netJavaImpl -> netJavaImpl
    void sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener) -> sendHttpRequest
    com.badlogic.gdx.net.ServerSocket newServerSocket(com.badlogic.gdx.Net$Protocol,int,com.badlogic.gdx.net.ServerSocketHints) -> newServerSocket
    com.badlogic.gdx.net.Socket newClientSocket(com.badlogic.gdx.Net$Protocol,java.lang.String,int,com.badlogic.gdx.net.SocketHints) -> newClientSocket
    void openURI(java.lang.String) -> openURI
com.badlogic.gdx.backends.android.AndroidNet$1 -> com.badlogic.gdx.backends.android.AndroidNet$1:
    android.net.Uri val$uri -> val$uri
    com.badlogic.gdx.backends.android.AndroidNet this$0 -> this$0
    void run() -> run
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard -> com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard:
    android.content.Context context -> context
    android.os.Handler handler -> handler
    com.badlogic.gdx.backends.android.AndroidInput input -> input
    android.app.Dialog dialog -> dialog
    android.widget.TextView textView -> textView
    android.app.Dialog createDialog() -> createDialog
    android.widget.TextView createView(android.content.Context) -> createView
    void setVisible(boolean) -> setVisible
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$1 -> com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$1:
    android.text.Editable editable -> editable
    boolean getDefaultEditable() -> getDefaultEditable
    android.text.Editable getEditableText() -> getEditableText
    android.text.method.MovementMethod getDefaultMovementMethod() -> getDefaultMovementMethod
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2 -> com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2:
    com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard this$0 -> this$0
    void run() -> run
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2$1 -> com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2$1:
    com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2 this$1 -> this$1
    void run() -> run
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2$2 -> com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2$2:
    int[] screenloc -> screenloc
    int keyboardHeight -> keyboardHeight
    boolean keyboardShowing -> keyboardShowing
    android.view.View val$content -> val$content
    com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2 this$1 -> this$1
    boolean onPreDraw() -> onPreDraw
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$PassThroughEditable -> com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$PassThroughEditable:
    char charAt(int) -> charAt
    int length() -> length
    java.lang.CharSequence subSequence(int,int) -> subSequence
    void getChars(int,int,char[],int) -> getChars
    void removeSpan(java.lang.Object) -> removeSpan
    void setSpan(java.lang.Object,int,int,int) -> setSpan
    int getSpanEnd(java.lang.Object) -> getSpanEnd
    int getSpanFlags(java.lang.Object) -> getSpanFlags
    int getSpanStart(java.lang.Object) -> getSpanStart
    java.lang.Object[] getSpans(int,int,java.lang.Class) -> getSpans
    int nextSpanTransition(int,int,java.lang.Class) -> nextSpanTransition
    android.text.Editable append(java.lang.CharSequence) -> append
    android.text.Editable append(char) -> append
    android.text.Editable append(java.lang.CharSequence,int,int) -> append
    void clear() -> clear
    void clearSpans() -> clearSpans
    android.text.Editable delete(int,int) -> delete
    android.text.InputFilter[] getFilters() -> getFilters
    android.text.Editable insert(int,java.lang.CharSequence) -> insert
    android.text.Editable insert(int,java.lang.CharSequence,int,int) -> insert
    android.text.Editable replace(int,int,java.lang.CharSequence) -> replace
    android.text.Editable replace(int,int,java.lang.CharSequence,int,int) -> replace
    void setFilters(android.text.InputFilter[]) -> setFilters
    java.lang.Appendable append(char) -> append
    java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    java.lang.Appendable append(java.lang.CharSequence) -> append
com.badlogic.gdx.backends.android.AndroidPreferences -> com.badlogic.gdx.backends.android.AndroidPreferences:
    android.content.SharedPreferences sharedPrefs -> sharedPrefs
    android.content.SharedPreferences$Editor editor -> editor
    void putBoolean(java.lang.String,boolean) -> putBoolean
    void putInteger(java.lang.String,int) -> putInteger
    void putLong(java.lang.String,long) -> putLong
    void putFloat(java.lang.String,float) -> putFloat
    void putString(java.lang.String,java.lang.String) -> putString
    void put(java.util.Map) -> put
    boolean getBoolean(java.lang.String) -> getBoolean
    int getInteger(java.lang.String) -> getInteger
    long getLong(java.lang.String) -> getLong
    float getFloat(java.lang.String) -> getFloat
    java.lang.String getString(java.lang.String) -> getString
    boolean getBoolean(java.lang.String,boolean) -> getBoolean
    int getInteger(java.lang.String,int) -> getInteger
    long getLong(java.lang.String,long) -> getLong
    float getFloat(java.lang.String,float) -> getFloat
    java.lang.String getString(java.lang.String,java.lang.String) -> getString
    java.util.Map get() -> get
    boolean contains(java.lang.String) -> contains
    void clear() -> clear
    void flush() -> flush
    void remove(java.lang.String) -> remove
    void edit() -> edit
com.badlogic.gdx.backends.android.AndroidServerSocket -> com.badlogic.gdx.backends.android.AndroidServerSocket:
    com.badlogic.gdx.Net$Protocol protocol -> protocol
    java.net.ServerSocket server -> server
    com.badlogic.gdx.Net$Protocol getProtocol() -> getProtocol
    com.badlogic.gdx.net.Socket accept(com.badlogic.gdx.net.SocketHints) -> accept
    void dispose() -> dispose
com.badlogic.gdx.backends.android.AndroidSingleTouchHandler -> com.badlogic.gdx.backends.android.AndroidSingleTouchHandler:
    void onTouch(android.view.MotionEvent,com.badlogic.gdx.backends.android.AndroidInput) -> onTouch
    void postTouchEvent(com.badlogic.gdx.backends.android.AndroidInput,int,int,int,int,long) -> postTouchEvent
    boolean supportsMultitouch(android.content.Context) -> supportsMultitouch
com.badlogic.gdx.backends.android.AndroidSocket -> com.badlogic.gdx.backends.android.AndroidSocket:
    java.net.Socket socket -> socket
    void applyHints(com.badlogic.gdx.net.SocketHints) -> applyHints
    boolean isConnected() -> isConnected
    java.io.InputStream getInputStream() -> getInputStream
    java.io.OutputStream getOutputStream() -> getOutputStream
    void dispose() -> dispose
com.badlogic.gdx.backends.android.AndroidSound -> com.badlogic.gdx.backends.android.AndroidSound:
    android.media.SoundPool soundPool -> soundPool
    android.media.AudioManager manager -> manager
    int soundId -> soundId
    com.badlogic.gdx.utils.IntArray streamIds -> streamIds
    void dispose() -> dispose
    long play() -> play
    long play(float) -> play
    void stop() -> stop
    void stop(long) -> stop
    void pause() -> pause
    void pause(long) -> pause
    void resume() -> resume
    void resume(long) -> resume
    void setPitch(long,float) -> setPitch
    void setVolume(long,float) -> setVolume
    long loop() -> loop
    long loop(float) -> loop
    void setLooping(long,boolean) -> setLooping
    void setPan(long,float,float) -> setPan
    long play(float,float,float) -> play
    long loop(float,float,float) -> loop
    void setPriority(long,int) -> setPriority
com.badlogic.gdx.backends.android.AndroidTouchHandler -> com.badlogic.gdx.backends.android.AndroidTouchHandler:
    void onTouch(android.view.MotionEvent,com.badlogic.gdx.backends.android.AndroidInput) -> onTouch
    boolean supportsMultitouch(android.content.Context) -> supportsMultitouch
com.badlogic.gdx.backends.android.AndroidWallpaperListener -> com.badlogic.gdx.backends.android.AndroidWallpaperListener:
    void offsetChange(float,float,float,float,int,int) -> offsetChange
    void previewStateChange(boolean) -> previewStateChange
com.badlogic.gdx.backends.android.InputProcessorLW -> com.badlogic.gdx.backends.android.InputProcessorLW:
    void touchDrop(int,int) -> touchDrop
com.badlogic.gdx.backends.android.surfaceview.DefaultGLSurfaceView -> com.badlogic.gdx.backends.android.surfaceview.DefaultGLSurfaceView:
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy resolutionStrategy -> resolutionStrategy
    void onMeasure(int,int) -> onMeasure
com.badlogic.gdx.backends.android.surfaceview.DefaultGLSurfaceViewLW -> com.badlogic.gdx.backends.android.surfaceview.DefaultGLSurfaceViewLW:
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy resolutionStrategy -> resolutionStrategy
com.badlogic.gdx.backends.android.surfaceview.EGLLogWrapper -> com.badlogic.gdx.backends.android.surfaceview.EGLLogWrapper:
    javax.microedition.khronos.egl.EGL10 mEgl10 -> mEgl10
    java.io.Writer mLog -> mLog
    boolean mLogArgumentNames -> mLogArgumentNames
    boolean mCheckError -> mCheckError
    int mArgCount -> mArgCount
    boolean eglChooseConfig(javax.microedition.khronos.egl.EGLDisplay,int[],javax.microedition.khronos.egl.EGLConfig[],int,int[]) -> eglChooseConfig
    boolean eglCopyBuffers(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface,java.lang.Object) -> eglCopyBuffers
    javax.microedition.khronos.egl.EGLContext eglCreateContext(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,javax.microedition.khronos.egl.EGLContext,int[]) -> eglCreateContext
    javax.microedition.khronos.egl.EGLSurface eglCreatePbufferSurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int[]) -> eglCreatePbufferSurface
    javax.microedition.khronos.egl.EGLSurface eglCreatePixmapSurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object,int[]) -> eglCreatePixmapSurface
    javax.microedition.khronos.egl.EGLSurface eglCreateWindowSurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object,int[]) -> eglCreateWindowSurface
    boolean eglDestroyContext(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> eglDestroyContext
    boolean eglDestroySurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface) -> eglDestroySurface
    boolean eglGetConfigAttrib(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int[]) -> eglGetConfigAttrib
    boolean eglGetConfigs(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[],int,int[]) -> eglGetConfigs
    javax.microedition.khronos.egl.EGLContext eglGetCurrentContext() -> eglGetCurrentContext
    javax.microedition.khronos.egl.EGLDisplay eglGetCurrentDisplay() -> eglGetCurrentDisplay
    javax.microedition.khronos.egl.EGLSurface eglGetCurrentSurface(int) -> eglGetCurrentSurface
    javax.microedition.khronos.egl.EGLDisplay eglGetDisplay(java.lang.Object) -> eglGetDisplay
    int eglGetError() -> eglGetError
    boolean eglInitialize(javax.microedition.khronos.egl.EGLDisplay,int[]) -> eglInitialize
    boolean eglMakeCurrent(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface,javax.microedition.khronos.egl.EGLSurface,javax.microedition.khronos.egl.EGLContext) -> eglMakeCurrent
    boolean eglQueryContext(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext,int,int[]) -> eglQueryContext
    java.lang.String eglQueryString(javax.microedition.khronos.egl.EGLDisplay,int) -> eglQueryString
    boolean eglQuerySurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface,int,int[]) -> eglQuerySurface
    boolean eglSwapBuffers(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface) -> eglSwapBuffers
    boolean eglTerminate(javax.microedition.khronos.egl.EGLDisplay) -> eglTerminate
    boolean eglWaitGL() -> eglWaitGL
    boolean eglWaitNative(int,java.lang.Object) -> eglWaitNative
    void checkError() -> checkError
    void logLine(java.lang.String) -> logLine
    void log(java.lang.String) -> log
    void begin(java.lang.String) -> begin
    void arg(java.lang.String,java.lang.String) -> arg
    void end() -> end
    void flush() -> flush
    void arg(java.lang.String,int) -> arg
    void arg(java.lang.String,java.lang.Object) -> arg
    void arg(java.lang.String,javax.microedition.khronos.egl.EGLDisplay) -> arg
    void arg(java.lang.String,javax.microedition.khronos.egl.EGLContext) -> arg
    void arg(java.lang.String,javax.microedition.khronos.egl.EGLSurface) -> arg
    void returns(java.lang.String) -> returns
    void returns(int) -> returns
    void returns(boolean) -> returns
    void returns(java.lang.Object) -> returns
    java.lang.String toString(java.lang.Object) -> toString
    void arg(java.lang.String,int[]) -> arg
    void arg(java.lang.String,java.lang.Object[]) -> arg
    java.lang.String toString(int,int[],int) -> toString
    java.lang.String toString(int,java.lang.Object[],int) -> toString
    java.lang.String getHex(int) -> getHex
    java.lang.String getErrorString(int) -> getErrorString
com.badlogic.gdx.backends.android.surfaceview.FillResolutionStrategy -> com.badlogic.gdx.backends.android.surfaceview.FillResolutionStrategy:
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension calcMeasures(int,int) -> calcMeasures
com.badlogic.gdx.backends.android.surfaceview.FixedResolutionStrategy -> com.badlogic.gdx.backends.android.surfaceview.FixedResolutionStrategy:
    int width -> width
    int height -> height
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension calcMeasures(int,int) -> calcMeasures
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView:
    boolean LOG_THREADS -> LOG_THREADS
    boolean LOG_SURFACE -> LOG_SURFACE
    boolean LOG_RENDERER -> LOG_RENDERER
    boolean DRAW_TWICE_AFTER_SIZE_CHANGED -> DRAW_TWICE_AFTER_SIZE_CHANGED
    int RENDERMODE_WHEN_DIRTY -> RENDERMODE_WHEN_DIRTY
    int RENDERMODE_CONTINUOUSLY -> RENDERMODE_CONTINUOUSLY
    int DEBUG_CHECK_GL_ERROR -> DEBUG_CHECK_GL_ERROR
    int DEBUG_LOG_GL_CALLS -> DEBUG_LOG_GL_CALLS
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThreadManager sGLThreadManager -> sGLThreadManager
    boolean mSizeChanged -> mSizeChanged
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThread mGLThread -> mGLThread
    android.opengl.GLSurfaceView$EGLConfigChooser mEGLConfigChooser -> mEGLConfigChooser
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EGLContextFactory mEGLContextFactory -> mEGLContextFactory
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EGLWindowSurfaceFactory mEGLWindowSurfaceFactory -> mEGLWindowSurfaceFactory
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLWrapper mGLWrapper -> mGLWrapper
    int mDebugFlags -> mDebugFlags
    void init() -> init
    void setGLWrapper(com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLWrapper) -> setGLWrapper
    void setDebugFlags(int) -> setDebugFlags
    int getDebugFlags() -> getDebugFlags
    void setRenderer(android.opengl.GLSurfaceView$Renderer) -> setRenderer
    void setEGLContextFactory(com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EGLContextFactory) -> setEGLContextFactory
    void setEGLWindowSurfaceFactory(com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EGLWindowSurfaceFactory) -> setEGLWindowSurfaceFactory
    void setEGLConfigChooser(android.opengl.GLSurfaceView$EGLConfigChooser) -> setEGLConfigChooser
    void setEGLConfigChooser(boolean) -> setEGLConfigChooser
    void setEGLConfigChooser(int,int,int,int,int,int) -> setEGLConfigChooser
    void setRenderMode(int) -> setRenderMode
    int getRenderMode() -> getRenderMode
    void requestRender() -> requestRender
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void onPause() -> onPause
    void onResume() -> onResume
    void queueEvent(java.lang.Runnable) -> queueEvent
    void onDetachedFromWindow() -> onDetachedFromWindow
    void checkRenderThreadState() -> checkRenderThreadState
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$BaseConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$BaseConfigChooser:
    int[] mConfigSpec -> mConfigSpec
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$ComponentSizeChooser -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$ComponentSizeChooser:
    int[] mValue -> mValue
    int mRedSize -> mRedSize
    int mGreenSize -> mGreenSize
    int mBlueSize -> mBlueSize
    int mAlphaSize -> mAlphaSize
    int mDepthSize -> mDepthSize
    int mStencilSize -> mStencilSize
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
    int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> findConfigAttrib
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$DefaultContextFactory -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$DefaultContextFactory:
    javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> createContext
    void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> destroyContext
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$DefaultWindowSurfaceFactory -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$DefaultWindowSurfaceFactory:
    javax.microedition.khronos.egl.EGLSurface createWindowSurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object) -> createWindowSurface
    void destroySurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface) -> destroySurface
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EGLContextFactory -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EGLContextFactory:
    javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> createContext
    void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> destroyContext
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EGLWindowSurfaceFactory -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EGLWindowSurfaceFactory:
    javax.microedition.khronos.egl.EGLSurface createWindowSurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object) -> createWindowSurface
    void destroySurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface) -> destroySurface
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EglHelper -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EglHelper:
    javax.microedition.khronos.egl.EGL10 mEgl -> mEgl
    javax.microedition.khronos.egl.EGLDisplay mEglDisplay -> mEglDisplay
    javax.microedition.khronos.egl.EGLSurface mEglSurface -> mEglSurface
    javax.microedition.khronos.egl.EGLConfig mEglConfig -> mEglConfig
    javax.microedition.khronos.egl.EGLContext mEglContext -> mEglContext
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView this$0 -> this$0
    void start() -> start
    javax.microedition.khronos.opengles.GL createSurface(android.view.SurfaceHolder) -> createSurface
    boolean swap() -> swap
    void destroySurface() -> destroySurface
    void finish() -> finish
    void throwEglException(java.lang.String) -> throwEglException
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThread -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThread:
    boolean mShouldExit -> mShouldExit
    boolean mExited -> mExited
    boolean mPaused -> mPaused
    boolean mHasSurface -> mHasSurface
    boolean mWaitingForSurface -> mWaitingForSurface
    boolean mHaveEgl -> mHaveEgl
    int mWidth -> mWidth
    int mHeight -> mHeight
    int mRenderMode -> mRenderMode
    boolean mRequestRender -> mRequestRender
    boolean mRenderComplete -> mRenderComplete
    java.util.ArrayList mEventQueue -> mEventQueue
    android.opengl.GLSurfaceView$Renderer mRenderer -> mRenderer
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$EglHelper mEglHelper -> mEglHelper
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView this$0 -> this$0
    void run() -> run
    void stopEglLocked() -> stopEglLocked
    void guardedRun() -> guardedRun
    void setRenderMode(int) -> setRenderMode
    int getRenderMode() -> getRenderMode
    void requestRender() -> requestRender
    void surfaceCreated() -> surfaceCreated
    void surfaceDestroyed() -> surfaceDestroyed
    void onPause() -> onPause
    void onResume() -> onResume
    void onWindowResize(int,int) -> onWindowResize
    void requestExitAndWait() -> requestExitAndWait
    void queueEvent(java.lang.Runnable) -> queueEvent
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThreadManager -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThreadManager:
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThread mEglOwner -> mEglOwner
    void threadExiting(com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThread) -> threadExiting
    boolean tryAcquireEglSurfaceLocked(com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThread) -> tryAcquireEglSurfaceLocked
    void releaseEglSurfaceLocked(com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLThread) -> releaseEglSurfaceLocked
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLWrapper -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$GLWrapper:
    javax.microedition.khronos.opengles.GL wrap(javax.microedition.khronos.opengles.GL) -> wrap
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$LogWriter -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$LogWriter:
    java.lang.StringBuilder mBuilder -> mBuilder
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> flushBuilder
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$SimpleEGLConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceView$SimpleEGLConfigChooser:
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW:
    java.lang.String TAG -> TAG
    boolean LOG_VIEW -> LOG_VIEW
    boolean LOG_THREADS -> LOG_THREADS
    boolean LOG_SURFACE -> LOG_SURFACE
    boolean LOG_RENDERER -> LOG_RENDERER
    boolean DRAW_TWICE_AFTER_SIZE_CHANGED -> DRAW_TWICE_AFTER_SIZE_CHANGED
    int RENDERMODE_WHEN_DIRTY -> RENDERMODE_WHEN_DIRTY
    int RENDERMODE_CONTINUOUSLY -> RENDERMODE_CONTINUOUSLY
    int DEBUG_CHECK_GL_ERROR -> DEBUG_CHECK_GL_ERROR
    int DEBUG_LOG_GL_CALLS -> DEBUG_LOG_GL_CALLS
    android.service.wallpaper.WallpaperService$Engine engine -> engine
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLThreadManager sGLThreadManager -> sGLThreadManager
    boolean mSizeChanged -> mSizeChanged
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLThread mGLThread -> mGLThread
    android.opengl.GLSurfaceView$EGLConfigChooser mEGLConfigChooser -> mEGLConfigChooser
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$EGLContextFactory mEGLContextFactory -> mEGLContextFactory
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$EGLWindowSurfaceFactory mEGLWindowSurfaceFactory -> mEGLWindowSurfaceFactory
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLWrapper mGLWrapper -> mGLWrapper
    int mDebugFlags -> mDebugFlags
    void init() -> init
    android.view.SurfaceHolder getHolder() -> getHolder
    void setGLWrapper(com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLWrapper) -> setGLWrapper
    void setDebugFlags(int) -> setDebugFlags
    int getDebugFlags() -> getDebugFlags
    void setRenderer(android.opengl.GLSurfaceView$Renderer) -> setRenderer
    void setEGLContextFactory(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20LW$ContextFactory) -> setEGLContextFactory
    void setEGLWindowSurfaceFactory(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20LW$ContextFactory) -> setEGLWindowSurfaceFactory
    void setEGLConfigChooser(android.opengl.GLSurfaceView$EGLConfigChooser) -> setEGLConfigChooser
    void setEGLConfigChooser(boolean) -> setEGLConfigChooser
    void setEGLConfigChooser(int,int,int,int,int,int) -> setEGLConfigChooser
    void setRenderMode(int) -> setRenderMode
    int getRenderMode() -> getRenderMode
    void requestRender() -> requestRender
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void onPause() -> onPause
    void onResume() -> onResume
    void queueEvent(java.lang.Runnable) -> queueEvent
    void onDestroy() -> onDestroy
    void checkRenderThreadState() -> checkRenderThreadState
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$BaseConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$BaseConfigChooser:
    int[] mConfigSpec -> mConfigSpec
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$ComponentSizeChooser -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$ComponentSizeChooser:
    int[] mValue -> mValue
    int mRedSize -> mRedSize
    int mGreenSize -> mGreenSize
    int mBlueSize -> mBlueSize
    int mAlphaSize -> mAlphaSize
    int mDepthSize -> mDepthSize
    int mStencilSize -> mStencilSize
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
    int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> findConfigAttrib
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$DefaultContextFactory -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$DefaultContextFactory:
    javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> createContext
    void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> destroyContext
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$DefaultWindowSurfaceFactory -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$DefaultWindowSurfaceFactory:
    javax.microedition.khronos.egl.EGLSurface createWindowSurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object) -> createWindowSurface
    void destroySurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface) -> destroySurface
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$EGLContextFactory -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$EGLContextFactory:
    javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> createContext
    void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> destroyContext
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$EGLWindowSurfaceFactory -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$EGLWindowSurfaceFactory:
    javax.microedition.khronos.egl.EGLSurface createWindowSurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object) -> createWindowSurface
    void destroySurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface) -> destroySurface
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$EglHelper -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$EglHelper:
    javax.microedition.khronos.egl.EGL10 mEgl -> mEgl
    javax.microedition.khronos.egl.EGLDisplay mEglDisplay -> mEglDisplay
    javax.microedition.khronos.egl.EGLSurface mEglSurface -> mEglSurface
    javax.microedition.khronos.egl.EGLConfig mEglConfig -> mEglConfig
    javax.microedition.khronos.egl.EGLContext mEglContext -> mEglContext
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW this$0 -> this$0
    void start() -> start
    javax.microedition.khronos.opengles.GL createSurface(android.view.SurfaceHolder) -> createSurface
    boolean swap() -> swap
    void destroySurface() -> destroySurface
    void finish() -> finish
    void throwEglException(java.lang.String) -> throwEglException
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLThread -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLThread:
    boolean mShouldExit -> mShouldExit
    boolean mExited -> mExited
    boolean mPaused -> mPaused
    boolean mHasSurface -> mHasSurface
    boolean mWaitingForSurface -> mWaitingForSurface
    boolean mHaveEgl -> mHaveEgl
    int mWidth -> mWidth
    int mHeight -> mHeight
    int mRenderMode -> mRenderMode
    boolean mRequestRender -> mRequestRender
    boolean mRenderComplete -> mRenderComplete
    java.util.ArrayList mEventQueue -> mEventQueue
    android.opengl.GLSurfaceView$Renderer mRenderer -> mRenderer
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$EglHelper mEglHelper -> mEglHelper
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW this$0 -> this$0
    void run() -> run
    void stopEglLocked() -> stopEglLocked
    void guardedRun() -> guardedRun
    void setRenderMode(int) -> setRenderMode
    int getRenderMode() -> getRenderMode
    void requestRender() -> requestRender
    void surfaceCreated() -> surfaceCreated
    void surfaceDestroyed() -> surfaceDestroyed
    void onPause() -> onPause
    void onResume() -> onResume
    void onWindowResize(int,int) -> onWindowResize
    void requestExitAndWait() -> requestExitAndWait
    void queueEvent(java.lang.Runnable) -> queueEvent
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLThreadManager -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLThreadManager:
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLThread mEglOwner -> mEglOwner
    com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW this$0 -> this$0
    void threadExiting(com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLThread) -> threadExiting
    boolean tryAcquireEglSurfaceLocked(com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLThread) -> tryAcquireEglSurfaceLocked
    void releaseEglSurfaceLocked(com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLThread) -> releaseEglSurfaceLocked
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLWrapper -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$GLWrapper:
    javax.microedition.khronos.opengles.GL wrap(javax.microedition.khronos.opengles.GL) -> wrap
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$LogWriter -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$LogWriter:
    java.lang.StringBuilder mBuilder -> mBuilder
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> flushBuilder
com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$SimpleEGLConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.GLBaseSurfaceViewLW$SimpleEGLConfigChooser:
com.badlogic.gdx.backends.android.surfaceview.GLDebugHelper -> com.badlogic.gdx.backends.android.surfaceview.GLDebugHelper:
    int CONFIG_CHECK_GL_ERROR -> CONFIG_CHECK_GL_ERROR
    int CONFIG_CHECK_THREAD -> CONFIG_CHECK_THREAD
    int CONFIG_LOG_ARGUMENT_NAMES -> CONFIG_LOG_ARGUMENT_NAMES
    int ERROR_WRONG_THREAD -> ERROR_WRONG_THREAD
    javax.microedition.khronos.opengles.GL wrap(javax.microedition.khronos.opengles.GL,int,java.io.Writer) -> wrap
    javax.microedition.khronos.egl.EGL wrap(javax.microedition.khronos.egl.EGL,int,java.io.Writer) -> wrap
com.badlogic.gdx.backends.android.surfaceview.GLErrorWrapper -> com.badlogic.gdx.backends.android.surfaceview.GLErrorWrapper:
    boolean mCheckError -> mCheckError
    boolean mCheckThread -> mCheckThread
    java.lang.Thread mOurThread -> mOurThread
    void checkThread() -> checkThread
    void checkError() -> checkError
    void glActiveTexture(int) -> glActiveTexture
    void glAlphaFunc(int,float) -> glAlphaFunc
    void glAlphaFuncx(int,int) -> glAlphaFuncx
    void glBindTexture(int,int) -> glBindTexture
    void glBlendFunc(int,int) -> glBlendFunc
    void glClear(int) -> glClear
    void glClearColor(float,float,float,float) -> glClearColor
    void glClearColorx(int,int,int,int) -> glClearColorx
    void glClearDepthf(float) -> glClearDepthf
    void glClearDepthx(int) -> glClearDepthx
    void glClearStencil(int) -> glClearStencil
    void glClientActiveTexture(int) -> glClientActiveTexture
    void glColor4f(float,float,float,float) -> glColor4f
    void glColor4x(int,int,int,int) -> glColor4x
    void glColorMask(boolean,boolean,boolean,boolean) -> glColorMask
    void glColorPointer(int,int,int,java.nio.Buffer) -> glColorPointer
    void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexImage2D
    void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexSubImage2D
    void glCopyTexImage2D(int,int,int,int,int,int,int,int) -> glCopyTexImage2D
    void glCopyTexSubImage2D(int,int,int,int,int,int,int,int) -> glCopyTexSubImage2D
    void glCullFace(int) -> glCullFace
    void glDeleteTextures(int,int[],int) -> glDeleteTextures
    void glDeleteTextures(int,java.nio.IntBuffer) -> glDeleteTextures
    void glDepthFunc(int) -> glDepthFunc
    void glDepthMask(boolean) -> glDepthMask
    void glDepthRangef(float,float) -> glDepthRangef
    void glDepthRangex(int,int) -> glDepthRangex
    void glDisable(int) -> glDisable
    void glDisableClientState(int) -> glDisableClientState
    void glDrawArrays(int,int,int) -> glDrawArrays
    void glDrawElements(int,int,int,java.nio.Buffer) -> glDrawElements
    void glEnable(int) -> glEnable
    void glEnableClientState(int) -> glEnableClientState
    void glFinish() -> glFinish
    void glFlush() -> glFlush
    void glFogf(int,float) -> glFogf
    void glFogfv(int,float[],int) -> glFogfv
    void glFogfv(int,java.nio.FloatBuffer) -> glFogfv
    void glFogx(int,int) -> glFogx
    void glFogxv(int,int[],int) -> glFogxv
    void glFogxv(int,java.nio.IntBuffer) -> glFogxv
    void glFrontFace(int) -> glFrontFace
    void glFrustumf(float,float,float,float,float,float) -> glFrustumf
    void glFrustumx(int,int,int,int,int,int) -> glFrustumx
    void glGenTextures(int,int[],int) -> glGenTextures
    void glGenTextures(int,java.nio.IntBuffer) -> glGenTextures
    int glGetError() -> glGetError
    void glGetIntegerv(int,int[],int) -> glGetIntegerv
    void glGetIntegerv(int,java.nio.IntBuffer) -> glGetIntegerv
    java.lang.String glGetString(int) -> glGetString
    void glHint(int,int) -> glHint
    void glLightModelf(int,float) -> glLightModelf
    void glLightModelfv(int,float[],int) -> glLightModelfv
    void glLightModelfv(int,java.nio.FloatBuffer) -> glLightModelfv
    void glLightModelx(int,int) -> glLightModelx
    void glLightModelxv(int,int[],int) -> glLightModelxv
    void glLightModelxv(int,java.nio.IntBuffer) -> glLightModelxv
    void glLightf(int,int,float) -> glLightf
    void glLightfv(int,int,float[],int) -> glLightfv
    void glLightfv(int,int,java.nio.FloatBuffer) -> glLightfv
    void glLightx(int,int,int) -> glLightx
    void glLightxv(int,int,int[],int) -> glLightxv
    void glLightxv(int,int,java.nio.IntBuffer) -> glLightxv
    void glLineWidth(float) -> glLineWidth
    void glLineWidthx(int) -> glLineWidthx
    void glLoadIdentity() -> glLoadIdentity
    void glLoadMatrixf(float[],int) -> glLoadMatrixf
    void glLoadMatrixf(java.nio.FloatBuffer) -> glLoadMatrixf
    void glLoadMatrixx(int[],int) -> glLoadMatrixx
    void glLoadMatrixx(java.nio.IntBuffer) -> glLoadMatrixx
    void glLogicOp(int) -> glLogicOp
    void glMaterialf(int,int,float) -> glMaterialf
    void glMaterialfv(int,int,float[],int) -> glMaterialfv
    void glMaterialfv(int,int,java.nio.FloatBuffer) -> glMaterialfv
    void glMaterialx(int,int,int) -> glMaterialx
    void glMaterialxv(int,int,int[],int) -> glMaterialxv
    void glMaterialxv(int,int,java.nio.IntBuffer) -> glMaterialxv
    void glMatrixMode(int) -> glMatrixMode
    void glMultMatrixf(float[],int) -> glMultMatrixf
    void glMultMatrixf(java.nio.FloatBuffer) -> glMultMatrixf
    void glMultMatrixx(int[],int) -> glMultMatrixx
    void glMultMatrixx(java.nio.IntBuffer) -> glMultMatrixx
    void glMultiTexCoord4f(int,float,float,float,float) -> glMultiTexCoord4f
    void glMultiTexCoord4x(int,int,int,int,int) -> glMultiTexCoord4x
    void glNormal3f(float,float,float) -> glNormal3f
    void glNormal3x(int,int,int) -> glNormal3x
    void glNormalPointer(int,int,java.nio.Buffer) -> glNormalPointer
    void glOrthof(float,float,float,float,float,float) -> glOrthof
    void glOrthox(int,int,int,int,int,int) -> glOrthox
    void glPixelStorei(int,int) -> glPixelStorei
    void glPointSize(float) -> glPointSize
    void glPointSizex(int) -> glPointSizex
    void glPolygonOffset(float,float) -> glPolygonOffset
    void glPolygonOffsetx(int,int) -> glPolygonOffsetx
    void glPopMatrix() -> glPopMatrix
    void glPushMatrix() -> glPushMatrix
    void glReadPixels(int,int,int,int,int,int,java.nio.Buffer) -> glReadPixels
    void glRotatef(float,float,float,float) -> glRotatef
    void glRotatex(int,int,int,int) -> glRotatex
    void glSampleCoverage(float,boolean) -> glSampleCoverage
    void glSampleCoveragex(int,boolean) -> glSampleCoveragex
    void glScalef(float,float,float) -> glScalef
    void glScalex(int,int,int) -> glScalex
    void glScissor(int,int,int,int) -> glScissor
    void glShadeModel(int) -> glShadeModel
    void glStencilFunc(int,int,int) -> glStencilFunc
    void glStencilMask(int) -> glStencilMask
    void glStencilOp(int,int,int) -> glStencilOp
    void glTexCoordPointer(int,int,int,java.nio.Buffer) -> glTexCoordPointer
    void glTexEnvf(int,int,float) -> glTexEnvf
    void glTexEnvfv(int,int,float[],int) -> glTexEnvfv
    void glTexEnvfv(int,int,java.nio.FloatBuffer) -> glTexEnvfv
    void glTexEnvx(int,int,int) -> glTexEnvx
    void glTexEnvxv(int,int,int[],int) -> glTexEnvxv
    void glTexEnvxv(int,int,java.nio.IntBuffer) -> glTexEnvxv
    void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexImage2D
    void glTexParameterf(int,int,float) -> glTexParameterf
    void glTexParameterx(int,int,int) -> glTexParameterx
    void glTexParameteriv(int,int,int[],int) -> glTexParameteriv
    void glTexParameteriv(int,int,java.nio.IntBuffer) -> glTexParameteriv
    void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexSubImage2D
    void glTranslatef(float,float,float) -> glTranslatef
    void glTranslatex(int,int,int) -> glTranslatex
    void glVertexPointer(int,int,int,java.nio.Buffer) -> glVertexPointer
    void glViewport(int,int,int,int) -> glViewport
    void glClipPlanef(int,float[],int) -> glClipPlanef
    void glClipPlanef(int,java.nio.FloatBuffer) -> glClipPlanef
    void glClipPlanex(int,int[],int) -> glClipPlanex
    void glClipPlanex(int,java.nio.IntBuffer) -> glClipPlanex
    void glDrawTexfOES(float,float,float,float,float) -> glDrawTexfOES
    void glDrawTexfvOES(float[],int) -> glDrawTexfvOES
    void glDrawTexfvOES(java.nio.FloatBuffer) -> glDrawTexfvOES
    void glDrawTexiOES(int,int,int,int,int) -> glDrawTexiOES
    void glDrawTexivOES(int[],int) -> glDrawTexivOES
    void glDrawTexivOES(java.nio.IntBuffer) -> glDrawTexivOES
    void glDrawTexsOES(short,short,short,short,short) -> glDrawTexsOES
    void glDrawTexsvOES(short[],int) -> glDrawTexsvOES
    void glDrawTexsvOES(java.nio.ShortBuffer) -> glDrawTexsvOES
    void glDrawTexxOES(int,int,int,int,int) -> glDrawTexxOES
    void glDrawTexxvOES(int[],int) -> glDrawTexxvOES
    void glDrawTexxvOES(java.nio.IntBuffer) -> glDrawTexxvOES
    int glQueryMatrixxOES(int[],int,int[],int) -> glQueryMatrixxOES
    int glQueryMatrixxOES(java.nio.IntBuffer,java.nio.IntBuffer) -> glQueryMatrixxOES
com.badlogic.gdx.backends.android.surfaceview.GLException -> com.badlogic.gdx.backends.android.surfaceview.GLException:
    int mError -> mError
    java.lang.String getErrorString(int) -> getErrorString
    int getError() -> getError
com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper -> com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper:
    int FORMAT_INT -> FORMAT_INT
    int FORMAT_FLOAT -> FORMAT_FLOAT
    int FORMAT_FIXED -> FORMAT_FIXED
    java.io.Writer mLog -> mLog
    boolean mLogArgumentNames -> mLogArgumentNames
    int mArgCount -> mArgCount
    com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper$PointerInfo mColorPointer -> mColorPointer
    com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper$PointerInfo mNormalPointer -> mNormalPointer
    com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper$PointerInfo mTexCoordPointer -> mTexCoordPointer
    com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper$PointerInfo mVertexPointer -> mVertexPointer
    boolean mColorArrayEnabled -> mColorArrayEnabled
    boolean mNormalArrayEnabled -> mNormalArrayEnabled
    boolean mTextureCoordArrayEnabled -> mTextureCoordArrayEnabled
    boolean mVertexArrayEnabled -> mVertexArrayEnabled
    java.lang.StringBuilder mStringBuilder -> mStringBuilder
    void checkError() -> checkError
    void logLine(java.lang.String) -> logLine
    void log(java.lang.String) -> log
    void begin(java.lang.String) -> begin
    void arg(java.lang.String,java.lang.String) -> arg
    void end() -> end
    void flush() -> flush
    void arg(java.lang.String,boolean) -> arg
    void arg(java.lang.String,int) -> arg
    void arg(java.lang.String,float) -> arg
    void returns(java.lang.String) -> returns
    void returns(int) -> returns
    void arg(java.lang.String,int,int[],int) -> arg
    void arg(java.lang.String,int,short[],int) -> arg
    void arg(java.lang.String,int,float[],int) -> arg
    void formattedAppend(java.lang.StringBuilder,int,int) -> formattedAppend
    java.lang.String toString(int,int,int[],int) -> toString
    java.lang.String toString(int,short[],int) -> toString
    java.lang.String toString(int,float[],int) -> toString
    java.lang.String toString(int,java.nio.FloatBuffer) -> toString
    java.lang.String toString(int,int,java.nio.IntBuffer) -> toString
    java.lang.String toString(int,java.nio.ShortBuffer) -> toString
    void arg(java.lang.String,int,java.nio.FloatBuffer) -> arg
    void arg(java.lang.String,int,java.nio.IntBuffer) -> arg
    void arg(java.lang.String,int,java.nio.ShortBuffer) -> arg
    void argPointer(int,int,int,java.nio.Buffer) -> argPointer
    java.lang.String getHex(int) -> getHex
    java.lang.String getErrorString(int) -> getErrorString
    java.lang.String getClearBufferMask(int) -> getClearBufferMask
    java.lang.String getFactor(int) -> getFactor
    java.lang.String getShadeModel(int) -> getShadeModel
    java.lang.String getTextureTarget(int) -> getTextureTarget
    java.lang.String getTextureEnvTarget(int) -> getTextureEnvTarget
    java.lang.String getTextureEnvPName(int) -> getTextureEnvPName
    int getTextureEnvParamCount(int) -> getTextureEnvParamCount
    java.lang.String getTextureEnvParamName(float) -> getTextureEnvParamName
    java.lang.String getMatrixMode(int) -> getMatrixMode
    java.lang.String getClientState(int) -> getClientState
    java.lang.String getCap(int) -> getCap
    java.lang.String getTexturePName(int) -> getTexturePName
    java.lang.String getTextureParamName(float) -> getTextureParamName
    java.lang.String getFogPName(int) -> getFogPName
    int getFogParamCount(int) -> getFogParamCount
    java.lang.String getBeginMode(int) -> getBeginMode
    java.lang.String getIndexType(int) -> getIndexType
    java.lang.String getIntegerStateName(int) -> getIntegerStateName
    int getIntegerStateSize(int) -> getIntegerStateSize
    int getIntegerStateFormat(int) -> getIntegerStateFormat
    java.lang.String getHintTarget(int) -> getHintTarget
    java.lang.String getHintMode(int) -> getHintMode
    java.lang.String getFaceName(int) -> getFaceName
    java.lang.String getMaterialPName(int) -> getMaterialPName
    int getMaterialParamCount(int) -> getMaterialParamCount
    java.lang.String getLightName(int) -> getLightName
    java.lang.String getLightPName(int) -> getLightPName
    int getLightParamCount(int) -> getLightParamCount
    java.lang.String getLightModelPName(int) -> getLightModelPName
    int getLightModelParamCount(int) -> getLightModelParamCount
    java.lang.String getPointerTypeName(int) -> getPointerTypeName
    java.nio.ByteBuffer toByteBuffer(int,java.nio.Buffer) -> toByteBuffer
    char[] toCharIndices(int,int,java.nio.Buffer) -> toCharIndices
    void doArrayElement(java.lang.StringBuilder,boolean,java.lang.String,com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper$PointerInfo,int) -> doArrayElement
    void doElement(java.lang.StringBuilder,int,int) -> doElement
    void bindArrays() -> bindArrays
    void unbindArrays() -> unbindArrays
    void startLogIndices() -> startLogIndices
    void endLogIndices() -> endLogIndices
    void glActiveTexture(int) -> glActiveTexture
    void glAlphaFunc(int,float) -> glAlphaFunc
    void glAlphaFuncx(int,int) -> glAlphaFuncx
    void glBindTexture(int,int) -> glBindTexture
    void glBlendFunc(int,int) -> glBlendFunc
    void glClear(int) -> glClear
    void glClearColor(float,float,float,float) -> glClearColor
    void glClearColorx(int,int,int,int) -> glClearColorx
    void glClearDepthf(float) -> glClearDepthf
    void glClearDepthx(int) -> glClearDepthx
    void glClearStencil(int) -> glClearStencil
    void glClientActiveTexture(int) -> glClientActiveTexture
    void glColor4f(float,float,float,float) -> glColor4f
    void glColor4x(int,int,int,int) -> glColor4x
    void glColorMask(boolean,boolean,boolean,boolean) -> glColorMask
    void glColorPointer(int,int,int,java.nio.Buffer) -> glColorPointer
    void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexImage2D
    void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexSubImage2D
    void glCopyTexImage2D(int,int,int,int,int,int,int,int) -> glCopyTexImage2D
    void glCopyTexSubImage2D(int,int,int,int,int,int,int,int) -> glCopyTexSubImage2D
    void glCullFace(int) -> glCullFace
    void glDeleteTextures(int,int[],int) -> glDeleteTextures
    void glDeleteTextures(int,java.nio.IntBuffer) -> glDeleteTextures
    void glDepthFunc(int) -> glDepthFunc
    void glDepthMask(boolean) -> glDepthMask
    void glDepthRangef(float,float) -> glDepthRangef
    void glDepthRangex(int,int) -> glDepthRangex
    void glDisable(int) -> glDisable
    void glDisableClientState(int) -> glDisableClientState
    void glDrawArrays(int,int,int) -> glDrawArrays
    void glDrawElements(int,int,int,java.nio.Buffer) -> glDrawElements
    void glEnable(int) -> glEnable
    void glEnableClientState(int) -> glEnableClientState
    void glFinish() -> glFinish
    void glFlush() -> glFlush
    void glFogf(int,float) -> glFogf
    void glFogfv(int,float[],int) -> glFogfv
    void glFogfv(int,java.nio.FloatBuffer) -> glFogfv
    void glFogx(int,int) -> glFogx
    void glFogxv(int,int[],int) -> glFogxv
    void glFogxv(int,java.nio.IntBuffer) -> glFogxv
    void glFrontFace(int) -> glFrontFace
    void glFrustumf(float,float,float,float,float,float) -> glFrustumf
    void glFrustumx(int,int,int,int,int,int) -> glFrustumx
    void glGenTextures(int,int[],int) -> glGenTextures
    void glGenTextures(int,java.nio.IntBuffer) -> glGenTextures
    int glGetError() -> glGetError
    void glGetIntegerv(int,int[],int) -> glGetIntegerv
    void glGetIntegerv(int,java.nio.IntBuffer) -> glGetIntegerv
    java.lang.String glGetString(int) -> glGetString
    void glHint(int,int) -> glHint
    void glLightModelf(int,float) -> glLightModelf
    void glLightModelfv(int,float[],int) -> glLightModelfv
    void glLightModelfv(int,java.nio.FloatBuffer) -> glLightModelfv
    void glLightModelx(int,int) -> glLightModelx
    void glLightModelxv(int,int[],int) -> glLightModelxv
    void glLightModelxv(int,java.nio.IntBuffer) -> glLightModelxv
    void glLightf(int,int,float) -> glLightf
    void glLightfv(int,int,float[],int) -> glLightfv
    void glLightfv(int,int,java.nio.FloatBuffer) -> glLightfv
    void glLightx(int,int,int) -> glLightx
    void glLightxv(int,int,int[],int) -> glLightxv
    void glLightxv(int,int,java.nio.IntBuffer) -> glLightxv
    void glLineWidth(float) -> glLineWidth
    void glLineWidthx(int) -> glLineWidthx
    void glLoadIdentity() -> glLoadIdentity
    void glLoadMatrixf(float[],int) -> glLoadMatrixf
    void glLoadMatrixf(java.nio.FloatBuffer) -> glLoadMatrixf
    void glLoadMatrixx(int[],int) -> glLoadMatrixx
    void glLoadMatrixx(java.nio.IntBuffer) -> glLoadMatrixx
    void glLogicOp(int) -> glLogicOp
    void glMaterialf(int,int,float) -> glMaterialf
    void glMaterialfv(int,int,float[],int) -> glMaterialfv
    void glMaterialfv(int,int,java.nio.FloatBuffer) -> glMaterialfv
    void glMaterialx(int,int,int) -> glMaterialx
    void glMaterialxv(int,int,int[],int) -> glMaterialxv
    void glMaterialxv(int,int,java.nio.IntBuffer) -> glMaterialxv
    void glMatrixMode(int) -> glMatrixMode
    void glMultMatrixf(float[],int) -> glMultMatrixf
    void glMultMatrixf(java.nio.FloatBuffer) -> glMultMatrixf
    void glMultMatrixx(int[],int) -> glMultMatrixx
    void glMultMatrixx(java.nio.IntBuffer) -> glMultMatrixx
    void glMultiTexCoord4f(int,float,float,float,float) -> glMultiTexCoord4f
    void glMultiTexCoord4x(int,int,int,int,int) -> glMultiTexCoord4x
    void glNormal3f(float,float,float) -> glNormal3f
    void glNormal3x(int,int,int) -> glNormal3x
    void glNormalPointer(int,int,java.nio.Buffer) -> glNormalPointer
    void glOrthof(float,float,float,float,float,float) -> glOrthof
    void glOrthox(int,int,int,int,int,int) -> glOrthox
    void glPixelStorei(int,int) -> glPixelStorei
    void glPointSize(float) -> glPointSize
    void glPointSizex(int) -> glPointSizex
    void glPolygonOffset(float,float) -> glPolygonOffset
    void glPolygonOffsetx(int,int) -> glPolygonOffsetx
    void glPopMatrix() -> glPopMatrix
    void glPushMatrix() -> glPushMatrix
    void glReadPixels(int,int,int,int,int,int,java.nio.Buffer) -> glReadPixels
    void glRotatef(float,float,float,float) -> glRotatef
    void glRotatex(int,int,int,int) -> glRotatex
    void glSampleCoverage(float,boolean) -> glSampleCoverage
    void glSampleCoveragex(int,boolean) -> glSampleCoveragex
    void glScalef(float,float,float) -> glScalef
    void glScalex(int,int,int) -> glScalex
    void glScissor(int,int,int,int) -> glScissor
    void glShadeModel(int) -> glShadeModel
    void glStencilFunc(int,int,int) -> glStencilFunc
    void glStencilMask(int) -> glStencilMask
    void glStencilOp(int,int,int) -> glStencilOp
    void glTexCoordPointer(int,int,int,java.nio.Buffer) -> glTexCoordPointer
    void glTexEnvf(int,int,float) -> glTexEnvf
    void glTexEnvfv(int,int,float[],int) -> glTexEnvfv
    void glTexEnvfv(int,int,java.nio.FloatBuffer) -> glTexEnvfv
    void glTexEnvx(int,int,int) -> glTexEnvx
    void glTexEnvxv(int,int,int[],int) -> glTexEnvxv
    void glTexEnvxv(int,int,java.nio.IntBuffer) -> glTexEnvxv
    void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexImage2D
    void glTexParameterf(int,int,float) -> glTexParameterf
    void glTexParameterx(int,int,int) -> glTexParameterx
    void glTexParameteriv(int,int,int[],int) -> glTexParameteriv
    void glTexParameteriv(int,int,java.nio.IntBuffer) -> glTexParameteriv
    void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexSubImage2D
    void glTranslatef(float,float,float) -> glTranslatef
    void glTranslatex(int,int,int) -> glTranslatex
    void glVertexPointer(int,int,int,java.nio.Buffer) -> glVertexPointer
    void glViewport(int,int,int,int) -> glViewport
    void glClipPlanef(int,float[],int) -> glClipPlanef
    void glClipPlanef(int,java.nio.FloatBuffer) -> glClipPlanef
    void glClipPlanex(int,int[],int) -> glClipPlanex
    void glClipPlanex(int,java.nio.IntBuffer) -> glClipPlanex
    void glDrawTexfOES(float,float,float,float,float) -> glDrawTexfOES
    void glDrawTexfvOES(float[],int) -> glDrawTexfvOES
    void glDrawTexfvOES(java.nio.FloatBuffer) -> glDrawTexfvOES
    void glDrawTexiOES(int,int,int,int,int) -> glDrawTexiOES
    void glDrawTexivOES(int[],int) -> glDrawTexivOES
    void glDrawTexivOES(java.nio.IntBuffer) -> glDrawTexivOES
    void glDrawTexsOES(short,short,short,short,short) -> glDrawTexsOES
    void glDrawTexsvOES(short[],int) -> glDrawTexsvOES
    void glDrawTexsvOES(java.nio.ShortBuffer) -> glDrawTexsvOES
    void glDrawTexxOES(int,int,int,int,int) -> glDrawTexxOES
    void glDrawTexxvOES(int[],int) -> glDrawTexxvOES
    void glDrawTexxvOES(java.nio.IntBuffer) -> glDrawTexxvOES
    int glQueryMatrixxOES(int[],int,int[],int) -> glQueryMatrixxOES
    int glQueryMatrixxOES(java.nio.IntBuffer,java.nio.IntBuffer) -> glQueryMatrixxOES
    void glBindBuffer(int,int) -> glBindBuffer
    void glBufferData(int,int,java.nio.Buffer,int) -> glBufferData
    void glBufferSubData(int,int,int,java.nio.Buffer) -> glBufferSubData
    void glColor4ub(byte,byte,byte,byte) -> glColor4ub
    void glDeleteBuffers(int,int[],int) -> glDeleteBuffers
    void glDeleteBuffers(int,java.nio.IntBuffer) -> glDeleteBuffers
    void glGenBuffers(int,int[],int) -> glGenBuffers
    void glGenBuffers(int,java.nio.IntBuffer) -> glGenBuffers
    void glGetBooleanv(int,boolean[],int) -> glGetBooleanv
    void glGetBooleanv(int,java.nio.IntBuffer) -> glGetBooleanv
    void glGetBufferParameteriv(int,int,int[],int) -> glGetBufferParameteriv
    void glGetBufferParameteriv(int,int,java.nio.IntBuffer) -> glGetBufferParameteriv
    void glGetClipPlanef(int,float[],int) -> glGetClipPlanef
    void glGetClipPlanef(int,java.nio.FloatBuffer) -> glGetClipPlanef
    void glGetClipPlanex(int,int[],int) -> glGetClipPlanex
    void glGetClipPlanex(int,java.nio.IntBuffer) -> glGetClipPlanex
    void glGetFixedv(int,int[],int) -> glGetFixedv
    void glGetFixedv(int,java.nio.IntBuffer) -> glGetFixedv
    void glGetFloatv(int,float[],int) -> glGetFloatv
    void glGetFloatv(int,java.nio.FloatBuffer) -> glGetFloatv
    void glGetLightfv(int,int,float[],int) -> glGetLightfv
    void glGetLightfv(int,int,java.nio.FloatBuffer) -> glGetLightfv
    void glGetLightxv(int,int,int[],int) -> glGetLightxv
    void glGetLightxv(int,int,java.nio.IntBuffer) -> glGetLightxv
    void glGetMaterialfv(int,int,float[],int) -> glGetMaterialfv
    void glGetMaterialfv(int,int,java.nio.FloatBuffer) -> glGetMaterialfv
    void glGetMaterialxv(int,int,int[],int) -> glGetMaterialxv
    void glGetMaterialxv(int,int,java.nio.IntBuffer) -> glGetMaterialxv
    void glGetTexEnviv(int,int,int[],int) -> glGetTexEnviv
    void glGetTexEnviv(int,int,java.nio.IntBuffer) -> glGetTexEnviv
    void glGetTexEnvxv(int,int,int[],int) -> glGetTexEnvxv
    void glGetTexEnvxv(int,int,java.nio.IntBuffer) -> glGetTexEnvxv
    void glGetTexParameterfv(int,int,float[],int) -> glGetTexParameterfv
    void glGetTexParameterfv(int,int,java.nio.FloatBuffer) -> glGetTexParameterfv
    void glGetTexParameteriv(int,int,int[],int) -> glGetTexParameteriv
    void glGetTexParameteriv(int,int,java.nio.IntBuffer) -> glGetTexParameteriv
    void glGetTexParameterxv(int,int,int[],int) -> glGetTexParameterxv
    void glGetTexParameterxv(int,int,java.nio.IntBuffer) -> glGetTexParameterxv
    boolean glIsBuffer(int) -> glIsBuffer
    boolean glIsEnabled(int) -> glIsEnabled
    boolean glIsTexture(int) -> glIsTexture
    void glPointParameterf(int,float) -> glPointParameterf
    void glPointParameterfv(int,float[],int) -> glPointParameterfv
    void glPointParameterfv(int,java.nio.FloatBuffer) -> glPointParameterfv
    void glPointParameterx(int,int) -> glPointParameterx
    void glPointParameterxv(int,int[],int) -> glPointParameterxv
    void glPointParameterxv(int,java.nio.IntBuffer) -> glPointParameterxv
    void glPointSizePointerOES(int,int,java.nio.Buffer) -> glPointSizePointerOES
    void glTexEnvi(int,int,int) -> glTexEnvi
    void glTexEnviv(int,int,int[],int) -> glTexEnviv
    void glTexEnviv(int,int,java.nio.IntBuffer) -> glTexEnviv
    void glTexParameterfv(int,int,float[],int) -> glTexParameterfv
    void glTexParameterfv(int,int,java.nio.FloatBuffer) -> glTexParameterfv
    void glTexParameteri(int,int,int) -> glTexParameteri
    void glTexParameterxv(int,int,int[],int) -> glTexParameterxv
    void glTexParameterxv(int,int,java.nio.IntBuffer) -> glTexParameterxv
com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper$PointerInfo -> com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper$PointerInfo:
    int mSize -> mSize
    int mType -> mType
    int mStride -> mStride
    java.nio.Buffer mPointer -> mPointer
    java.nio.ByteBuffer mTempByteBuffer -> mTempByteBuffer
    com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper this$0 -> this$0
    int sizeof(int) -> sizeof
    int getStride() -> getStride
    void bindByteBuffer() -> bindByteBuffer
    void unbindByteBuffer() -> unbindByteBuffer
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20 -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy resolutionStrategy -> resolutionStrategy
    void onMeasure(int,int) -> onMeasure
    android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    void init(boolean,int,int) -> init
    void checkEglError(java.lang.String,javax.microedition.khronos.egl.EGL10) -> checkEglError
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$1 -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$1:
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20 this$0 -> this$0
    boolean deleteSurroundingText(int,int) -> deleteSurroundingText
    void sendDownUpKeyEventForBackwardCompatibility(int) -> sendDownUpKeyEventForBackwardCompatibility
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ConfigChooser:
    int EGL_OPENGL_ES2_BIT -> EGL_OPENGL_ES2_BIT
    int[] s_configAttribs2 -> s_configAttribs2
    int mRedSize -> mRedSize
    int mGreenSize -> mGreenSize
    int mBlueSize -> mBlueSize
    int mAlphaSize -> mAlphaSize
    int mDepthSize -> mDepthSize
    int mStencilSize -> mStencilSize
    int[] mValue -> mValue
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
    int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> findConfigAttrib
    void printConfigs(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> printConfigs
    void printConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> printConfig
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ContextFactory -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ContextFactory:
    int EGL_CONTEXT_CLIENT_VERSION -> EGL_CONTEXT_CLIENT_VERSION
    javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> createContext
    void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> destroyContext
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20LW -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20LW:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy resolutionStrategy -> resolutionStrategy
    void init(boolean,int,int) -> init
    void checkEglError(java.lang.String,javax.microedition.khronos.egl.EGL10) -> checkEglError
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20LW$ConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20LW$ConfigChooser:
    int EGL_OPENGL_ES2_BIT -> EGL_OPENGL_ES2_BIT
    int[] s_configAttribs2 -> s_configAttribs2
    int mRedSize -> mRedSize
    int mGreenSize -> mGreenSize
    int mBlueSize -> mBlueSize
    int mAlphaSize -> mAlphaSize
    int mDepthSize -> mDepthSize
    int mStencilSize -> mStencilSize
    int[] mValue -> mValue
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
    int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> findConfigAttrib
    void printConfigs(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> printConfigs
    void printConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> printConfig
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20LW$ContextFactory -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20LW$ContextFactory:
    int EGL_CONTEXT_CLIENT_VERSION -> EGL_CONTEXT_CLIENT_VERSION
    javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> createContext
    void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> destroyContext
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake:
    int RENDERMODE_WHEN_DIRTY -> RENDERMODE_WHEN_DIRTY
    int RENDERMODE_CONTINUOUSLY -> RENDERMODE_CONTINUOUSLY
    int DEBUG_CHECK_GL_ERROR -> DEBUG_CHECK_GL_ERROR
    int DEBUG_LOG_GL_CALLS -> DEBUG_LOG_GL_CALLS
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy resolutionStrategy -> resolutionStrategy
    java.lang.Object sEglLock -> sEglLock
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$GLThread mGLThread -> mGLThread
    android.opengl.GLSurfaceView$EGLConfigChooser mEGLConfigChooser -> mEGLConfigChooser
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$GLWrapper mGLWrapper -> mGLWrapper
    int mDebugFlags -> mDebugFlags
    int mRenderMode -> mRenderMode
    android.opengl.GLSurfaceView$Renderer mRenderer -> mRenderer
    int mSurfaceWidth -> mSurfaceWidth
    int mSurfaceHeight -> mSurfaceHeight
    boolean mHasSurface -> mHasSurface
    void onMeasure(int,int) -> onMeasure
    void init() -> init
    void setGLWrapper(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$GLWrapper) -> setGLWrapper
    void setDebugFlags(int) -> setDebugFlags
    int getDebugFlags() -> getDebugFlags
    void setRenderer(android.opengl.GLSurfaceView$Renderer) -> setRenderer
    void setEGLConfigChooser(android.opengl.GLSurfaceView$EGLConfigChooser) -> setEGLConfigChooser
    void setEGLConfigChooser(boolean) -> setEGLConfigChooser
    void setEGLConfigChooser(int,int,int,int,int,int) -> setEGLConfigChooser
    void setRenderMode(int) -> setRenderMode
    int getRenderMode() -> getRenderMode
    void requestRender() -> requestRender
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void onPause() -> onPause
    void onResume() -> onResume
    void queueEvent(java.lang.Runnable) -> queueEvent
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$BaseConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$BaseConfigChooser:
    int[] mConfigSpec -> mConfigSpec
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$ComponentSizeChooser -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$ComponentSizeChooser:
    int[] mValue -> mValue
    int mRedSize -> mRedSize
    int mGreenSize -> mGreenSize
    int mBlueSize -> mBlueSize
    int mAlphaSize -> mAlphaSize
    int mDepthSize -> mDepthSize
    int mStencilSize -> mStencilSize
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
    int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> findConfigAttrib
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$EglHelper -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$EglHelper:
    javax.microedition.khronos.egl.EGL10 mEgl -> mEgl
    javax.microedition.khronos.egl.EGLDisplay mEglDisplay -> mEglDisplay
    javax.microedition.khronos.egl.EGLSurface mEglSurface -> mEglSurface
    javax.microedition.khronos.egl.EGLConfig mEglConfig -> mEglConfig
    javax.microedition.khronos.egl.EGLContext mEglContext -> mEglContext
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake this$0 -> this$0
    void start() -> start
    javax.microedition.khronos.opengles.GL createSurface(android.view.SurfaceHolder) -> createSurface
    boolean swap() -> swap
    void finish() -> finish
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$GLThread -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$GLThread:
    boolean mDone -> mDone
    boolean mPaused -> mPaused
    boolean mHasSurface -> mHasSurface
    int mWidth -> mWidth
    int mHeight -> mHeight
    int mRenderMode -> mRenderMode
    boolean mRequestRender -> mRequestRender
    android.opengl.GLSurfaceView$Renderer mRenderer -> mRenderer
    java.util.ArrayList mEventQueue -> mEventQueue
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$EglHelper mEglHelper -> mEglHelper
    boolean mSizeChanged -> mSizeChanged
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake this$0 -> this$0
    void run() -> run
    void guardedRun() -> guardedRun
    boolean needToWait() -> needToWait
    void setRenderMode(int) -> setRenderMode
    int getRenderMode() -> getRenderMode
    void requestRender() -> requestRender
    void surfaceCreated() -> surfaceCreated
    void surfaceDestroyed() -> surfaceDestroyed
    void onPause() -> onPause
    void onResume() -> onResume
    void onWindowResize(int,int) -> onWindowResize
    void requestExitAndWait() -> requestExitAndWait
    void queueEvent(java.lang.Runnable) -> queueEvent
    java.lang.Runnable getEvent() -> getEvent
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$GLWrapper -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$GLWrapper:
    javax.microedition.khronos.opengles.GL wrap(javax.microedition.khronos.opengles.GL) -> wrap
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$LogWriter -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$LogWriter:
    java.lang.StringBuilder mBuilder -> mBuilder
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> flushBuilder
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$SimpleEGLConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewCupcake$SimpleEGLConfigChooser:
com.badlogic.gdx.backends.android.surfaceview.GLWrapperBase -> com.badlogic.gdx.backends.android.surfaceview.GLWrapperBase:
    javax.microedition.khronos.opengles.GL10 mgl -> mgl
    javax.microedition.khronos.opengles.GL10Ext mgl10Ext -> mgl10Ext
    javax.microedition.khronos.opengles.GL11 mgl11 -> mgl11
    javax.microedition.khronos.opengles.GL11Ext mgl11Ext -> mgl11Ext
    javax.microedition.khronos.opengles.GL11ExtensionPack mgl11ExtensionPack -> mgl11ExtensionPack
    void glGetPointerv(int,java.nio.Buffer[]) -> glGetPointerv
    void glColorPointer(int,int,int,int) -> glColorPointer
    void glNormalPointer(int,int,int) -> glNormalPointer
    void glTexCoordPointer(int,int,int,int) -> glTexCoordPointer
    void glVertexPointer(int,int,int,int) -> glVertexPointer
    void glDrawElements(int,int,int,int) -> glDrawElements
    void glBindBuffer(int,int) -> glBindBuffer
    void glBufferData(int,int,java.nio.Buffer,int) -> glBufferData
    void glBufferSubData(int,int,int,java.nio.Buffer) -> glBufferSubData
    void glColor4ub(byte,byte,byte,byte) -> glColor4ub
    void glDeleteBuffers(int,int[],int) -> glDeleteBuffers
    void glDeleteBuffers(int,java.nio.IntBuffer) -> glDeleteBuffers
    void glGenBuffers(int,int[],int) -> glGenBuffers
    void glGenBuffers(int,java.nio.IntBuffer) -> glGenBuffers
    void glGetBooleanv(int,boolean[],int) -> glGetBooleanv
    void glGetBooleanv(int,java.nio.IntBuffer) -> glGetBooleanv
    void glGetBufferParameteriv(int,int,int[],int) -> glGetBufferParameteriv
    void glGetBufferParameteriv(int,int,java.nio.IntBuffer) -> glGetBufferParameteriv
    void glGetClipPlanef(int,float[],int) -> glGetClipPlanef
    void glGetClipPlanef(int,java.nio.FloatBuffer) -> glGetClipPlanef
    void glGetClipPlanex(int,int[],int) -> glGetClipPlanex
    void glGetClipPlanex(int,java.nio.IntBuffer) -> glGetClipPlanex
    void glGetFixedv(int,int[],int) -> glGetFixedv
    void glGetFixedv(int,java.nio.IntBuffer) -> glGetFixedv
    void glGetFloatv(int,float[],int) -> glGetFloatv
    void glGetFloatv(int,java.nio.FloatBuffer) -> glGetFloatv
    void glGetLightfv(int,int,float[],int) -> glGetLightfv
    void glGetLightfv(int,int,java.nio.FloatBuffer) -> glGetLightfv
    void glGetLightxv(int,int,int[],int) -> glGetLightxv
    void glGetLightxv(int,int,java.nio.IntBuffer) -> glGetLightxv
    void glGetMaterialfv(int,int,float[],int) -> glGetMaterialfv
    void glGetMaterialfv(int,int,java.nio.FloatBuffer) -> glGetMaterialfv
    void glGetMaterialxv(int,int,int[],int) -> glGetMaterialxv
    void glGetMaterialxv(int,int,java.nio.IntBuffer) -> glGetMaterialxv
    void glGetTexEnviv(int,int,int[],int) -> glGetTexEnviv
    void glGetTexEnviv(int,int,java.nio.IntBuffer) -> glGetTexEnviv
    void glGetTexEnvxv(int,int,int[],int) -> glGetTexEnvxv
    void glGetTexEnvxv(int,int,java.nio.IntBuffer) -> glGetTexEnvxv
    void glGetTexParameterfv(int,int,float[],int) -> glGetTexParameterfv
    void glGetTexParameterfv(int,int,java.nio.FloatBuffer) -> glGetTexParameterfv
    void glGetTexParameteriv(int,int,int[],int) -> glGetTexParameteriv
    void glGetTexParameteriv(int,int,java.nio.IntBuffer) -> glGetTexParameteriv
    void glGetTexParameterxv(int,int,int[],int) -> glGetTexParameterxv
    void glGetTexParameterxv(int,int,java.nio.IntBuffer) -> glGetTexParameterxv
    boolean glIsBuffer(int) -> glIsBuffer
    boolean glIsEnabled(int) -> glIsEnabled
    boolean glIsTexture(int) -> glIsTexture
    void glPointParameterf(int,float) -> glPointParameterf
    void glPointParameterfv(int,float[],int) -> glPointParameterfv
    void glPointParameterfv(int,java.nio.FloatBuffer) -> glPointParameterfv
    void glPointParameterx(int,int) -> glPointParameterx
    void glPointParameterxv(int,int[],int) -> glPointParameterxv
    void glPointParameterxv(int,java.nio.IntBuffer) -> glPointParameterxv
    void glPointSizePointerOES(int,int,java.nio.Buffer) -> glPointSizePointerOES
    void glTexEnvi(int,int,int) -> glTexEnvi
    void glTexEnviv(int,int,int[],int) -> glTexEnviv
    void glTexEnviv(int,int,java.nio.IntBuffer) -> glTexEnviv
    void glTexParameterfv(int,int,float[],int) -> glTexParameterfv
    void glTexParameterfv(int,int,java.nio.FloatBuffer) -> glTexParameterfv
    void glTexParameteri(int,int,int) -> glTexParameteri
    void glTexParameterxv(int,int,int[],int) -> glTexParameterxv
    void glTexParameterxv(int,int,java.nio.IntBuffer) -> glTexParameterxv
    void glCurrentPaletteMatrixOES(int) -> glCurrentPaletteMatrixOES
    void glLoadPaletteFromModelViewMatrixOES() -> glLoadPaletteFromModelViewMatrixOES
    void glMatrixIndexPointerOES(int,int,int,java.nio.Buffer) -> glMatrixIndexPointerOES
    void glMatrixIndexPointerOES(int,int,int,int) -> glMatrixIndexPointerOES
    void glWeightPointerOES(int,int,int,java.nio.Buffer) -> glWeightPointerOES
    void glWeightPointerOES(int,int,int,int) -> glWeightPointerOES
    void glBindFramebufferOES(int,int) -> glBindFramebufferOES
    void glBindRenderbufferOES(int,int) -> glBindRenderbufferOES
    void glBlendEquation(int) -> glBlendEquation
    void glBlendEquationSeparate(int,int) -> glBlendEquationSeparate
    void glBlendFuncSeparate(int,int,int,int) -> glBlendFuncSeparate
    int glCheckFramebufferStatusOES(int) -> glCheckFramebufferStatusOES
    void glCompressedTexImage2D(int,int,int,int,int,int,int) -> glCompressedTexImage2D
    void glDeleteFramebuffersOES(int,int[],int) -> glDeleteFramebuffersOES
    void glDeleteFramebuffersOES(int,java.nio.IntBuffer) -> glDeleteFramebuffersOES
    void glDeleteRenderbuffersOES(int,int[],int) -> glDeleteRenderbuffersOES
    void glDeleteRenderbuffersOES(int,java.nio.IntBuffer) -> glDeleteRenderbuffersOES
    void glFramebufferRenderbufferOES(int,int,int,int) -> glFramebufferRenderbufferOES
    void glFramebufferTexture2DOES(int,int,int,int,int) -> glFramebufferTexture2DOES
    void glGenerateMipmapOES(int) -> glGenerateMipmapOES
    void glGenFramebuffersOES(int,int[],int) -> glGenFramebuffersOES
    void glGenFramebuffersOES(int,java.nio.IntBuffer) -> glGenFramebuffersOES
    void glGenRenderbuffersOES(int,int[],int) -> glGenRenderbuffersOES
    void glGenRenderbuffersOES(int,java.nio.IntBuffer) -> glGenRenderbuffersOES
    void glGetFramebufferAttachmentParameterivOES(int,int,int,int[],int) -> glGetFramebufferAttachmentParameterivOES
    void glGetFramebufferAttachmentParameterivOES(int,int,int,java.nio.IntBuffer) -> glGetFramebufferAttachmentParameterivOES
    void glGetRenderbufferParameterivOES(int,int,int[],int) -> glGetRenderbufferParameterivOES
    void glGetRenderbufferParameterivOES(int,int,java.nio.IntBuffer) -> glGetRenderbufferParameterivOES
    void glGetTexGenfv(int,int,float[],int) -> glGetTexGenfv
    void glGetTexGenfv(int,int,java.nio.FloatBuffer) -> glGetTexGenfv
    void glGetTexGeniv(int,int,int[],int) -> glGetTexGeniv
    void glGetTexGeniv(int,int,java.nio.IntBuffer) -> glGetTexGeniv
    void glGetTexGenxv(int,int,int[],int) -> glGetTexGenxv
    void glGetTexGenxv(int,int,java.nio.IntBuffer) -> glGetTexGenxv
    boolean glIsFramebufferOES(int) -> glIsFramebufferOES
    boolean glIsRenderbufferOES(int) -> glIsRenderbufferOES
    void glRenderbufferStorageOES(int,int,int,int) -> glRenderbufferStorageOES
    void glTexGenf(int,int,float) -> glTexGenf
    void glTexGenfv(int,int,float[],int) -> glTexGenfv
    void glTexGenfv(int,int,java.nio.FloatBuffer) -> glTexGenfv
    void glTexGeni(int,int,int) -> glTexGeni
    void glTexGeniv(int,int,int[],int) -> glTexGeniv
    void glTexGeniv(int,int,java.nio.IntBuffer) -> glTexGeniv
    void glTexGenx(int,int,int) -> glTexGenx
    void glTexGenxv(int,int,int[],int) -> glTexGenxv
    void glTexGenxv(int,int,java.nio.IntBuffer) -> glTexGenxv
com.badlogic.gdx.backends.android.surfaceview.GdxEglConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.GdxEglConfigChooser:
    int EGL_OPENGL_ES2_BIT -> EGL_OPENGL_ES2_BIT
    int EGL_COVERAGE_BUFFERS_NV -> EGL_COVERAGE_BUFFERS_NV
    int EGL_COVERAGE_SAMPLES_NV -> EGL_COVERAGE_SAMPLES_NV
    java.lang.String TAG -> TAG
    int mRedSize -> mRedSize
    int mGreenSize -> mGreenSize
    int mBlueSize -> mBlueSize
    int mAlphaSize -> mAlphaSize
    int mDepthSize -> mDepthSize
    int mStencilSize -> mStencilSize
    int mNumSamples -> mNumSamples
    boolean mUseGL20 -> mUseGL20
    int[] mConfigAttribs -> mConfigAttribs
    int[] mValue -> mValue
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
    int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> findConfigAttrib
    void printConfigs(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> printConfigs
    void printConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> printConfig
com.badlogic.gdx.backends.android.surfaceview.RatioResolutionStrategy -> com.badlogic.gdx.backends.android.surfaceview.RatioResolutionStrategy:
    float ratio -> ratio
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension calcMeasures(int,int) -> calcMeasures
com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy -> com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy:
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension calcMeasures(int,int) -> calcMeasures
com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension -> com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension:
    int width -> width
    int height -> height
com.badlogic.gdx.files.FileHandle -> com.badlogic.gdx.c.a:
    java.io.File file -> file
    com.badlogic.gdx.Files$FileType type -> type
    java.lang.String path() -> path
    java.lang.String name() -> name
    java.lang.String extension() -> extension
    java.lang.String nameWithoutExtension() -> nameWithoutExtension
    java.lang.String pathWithoutExtension() -> pathWithoutExtension
    com.badlogic.gdx.Files$FileType type() -> type
    java.io.File file() -> file
    java.io.InputStream read() -> read
    java.io.BufferedInputStream read(int) -> read
    java.io.Reader reader() -> reader
    java.io.Reader reader(java.lang.String) -> reader
    java.io.BufferedReader reader(int) -> reader
    java.io.BufferedReader reader(int,java.lang.String) -> reader
    java.lang.String readString() -> readString
    java.lang.String readString(java.lang.String) -> readString
    byte[] readBytes() -> readBytes
    int readBytes(byte[],int,int) -> readBytes
    java.io.OutputStream write(boolean) -> write
    void write(java.io.InputStream,boolean) -> write
    java.io.Writer writer(boolean) -> writer
    java.io.Writer writer(boolean,java.lang.String) -> writer
    void writeString(java.lang.String,boolean) -> writeString
    void writeString(java.lang.String,boolean,java.lang.String) -> writeString
    void writeBytes(byte[],boolean) -> writeBytes
    void writeBytes(byte[],int,int,boolean) -> writeBytes
    com.badlogic.gdx.files.FileHandle[] list() -> list
    com.badlogic.gdx.files.FileHandle[] list(java.lang.String) -> list
    boolean isDirectory() -> isDirectory
    com.badlogic.gdx.files.FileHandle child(java.lang.String) -> child
    com.badlogic.gdx.files.FileHandle sibling(java.lang.String) -> sibling
    com.badlogic.gdx.files.FileHandle parent() -> parent
    void mkdirs() -> mkdirs
    boolean exists() -> exists
    boolean delete() -> delete
    boolean deleteDirectory() -> deleteDirectory
    void emptyDirectory() -> emptyDirectory
    void emptyDirectory(boolean) -> emptyDirectory
    void copyTo(com.badlogic.gdx.files.FileHandle) -> copyTo
    void moveTo(com.badlogic.gdx.files.FileHandle) -> moveTo
    long length() -> length
    long lastModified() -> lastModified
    java.lang.String toString() -> toString
    com.badlogic.gdx.files.FileHandle tempFile(java.lang.String) -> tempFile
    com.badlogic.gdx.files.FileHandle tempDirectory(java.lang.String) -> tempDirectory
    void emptyDirectory(java.io.File,boolean) -> emptyDirectory
    boolean deleteDirectory(java.io.File) -> deleteDirectory
    void copyFile(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle) -> copyFile
    void copyDirectory(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle) -> copyDirectory
com.badlogic.gdx.files.FileHandle$1 -> com.badlogic.gdx.c.b:
    int[] $SwitchMap$com$badlogic$gdx$Files$FileType -> a
com.badlogic.gdx.graphics.Camera -> com.badlogic.gdx.graphics.a:
    com.badlogic.gdx.math.Vector3 position -> a
    com.badlogic.gdx.math.Vector3 direction -> b
    com.badlogic.gdx.math.Vector3 up -> c
    com.badlogic.gdx.math.Matrix4 projection -> d
    com.badlogic.gdx.math.Matrix4 view -> e
    com.badlogic.gdx.math.Matrix4 combined -> f
    com.badlogic.gdx.math.Matrix4 invProjectionView -> g
    float near -> h
    float far -> i
    float viewportWidth -> j
    float viewportHeight -> k
    com.badlogic.gdx.math.Frustum frustum -> l
    com.badlogic.gdx.math.Vector3 tmpVec -> n
    com.badlogic.gdx.math.collision.Ray ray -> m
    void apply(com.badlogic.gdx.graphics.GL10) -> a
    void lookAt(float,float,float) -> a
    void unproject$649c6b07(com.badlogic.gdx.math.Vector3,float,float) -> a
    com.badlogic.gdx.math.collision.Ray getPickRay(float,float) -> a
com.badlogic.gdx.graphics.Color -> com.badlogic.gdx.graphics.b:
    com.badlogic.gdx.graphics.Color CLEAR -> a
    com.badlogic.gdx.graphics.Color WHITE -> b
    com.badlogic.gdx.graphics.Color BLACK -> c
    com.badlogic.gdx.graphics.Color RED -> d
    com.badlogic.gdx.graphics.Color GREEN -> e
    com.badlogic.gdx.graphics.Color BLUE -> f
    com.badlogic.gdx.graphics.Color LIGHT_GRAY -> g
    com.badlogic.gdx.graphics.Color GRAY -> h
    com.badlogic.gdx.graphics.Color DARK_GRAY -> i
    com.badlogic.gdx.graphics.Color PINK -> j
    com.badlogic.gdx.graphics.Color ORANGE -> k
    com.badlogic.gdx.graphics.Color YELLOW -> l
    com.badlogic.gdx.graphics.Color MAGENTA -> m
    com.badlogic.gdx.graphics.Color CYAN -> n
    com.badlogic.gdx.graphics.Color tmp -> o
    float r -> p
    float g -> q
    float b -> r
    float a -> s
    com.badlogic.gdx.graphics.Color set(com.badlogic.gdx.graphics.Color) -> a
    com.badlogic.gdx.graphics.Color clamp() -> c
    com.badlogic.gdx.graphics.Color set(float,float,float,float) -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    float toFloatBits() -> a
    int toIntBits() -> d
    java.lang.String toString() -> toString
    com.badlogic.gdx.graphics.Color valueOf(java.lang.String) -> a
    int rgba8888$40983718() -> b
com.badlogic.gdx.graphics.FPSLogger -> com.badlogic.gdx.graphics.c:
    long startTime -> a
com.badlogic.gdx.graphics.GL10 -> com.badlogic.gdx.graphics.d:
    void glClientActiveTexture(int) -> glClientActiveTexture
    void glColor4f(float,float,float,float) -> glColor4f
    void glColorPointer(int,int,int,java.nio.Buffer) -> glColorPointer
    void glDisableClientState(int) -> glDisableClientState
    void glEnableClientState(int) -> glEnableClientState
    void glLightModelfv(int,float[],int) -> glLightModelfv
    void glLightf(int,int,float) -> glLightf
    void glLightfv(int,int,float[],int) -> glLightfv
    void glLoadIdentity() -> glLoadIdentity
    void glLoadMatrixf(float[],int) -> glLoadMatrixf
    void glMaterialfv(int,int,float[],int) -> glMaterialfv
    void glMatrixMode(int) -> glMatrixMode
    void glNormalPointer(int,int,java.nio.Buffer) -> glNormalPointer
    void glPointSize(float) -> glPointSize
    void glPopMatrix() -> glPopMatrix
    void glPushMatrix() -> glPushMatrix
    void glRotatef(float,float,float,float) -> glRotatef
    void glTexCoordPointer(int,int,int,java.nio.Buffer) -> glTexCoordPointer
    void glVertexPointer(int,int,int,java.nio.Buffer) -> glVertexPointer
com.badlogic.gdx.graphics.GL11 -> com.badlogic.gdx.graphics.e:
    void glBindBuffer(int,int) -> glBindBuffer
    void glBufferData(int,int,java.nio.Buffer,int) -> glBufferData
    void glBufferSubData(int,int,int,java.nio.Buffer) -> glBufferSubData
    void glDeleteBuffers(int,java.nio.IntBuffer) -> glDeleteBuffers
    void glGenBuffers(int,java.nio.IntBuffer) -> glGenBuffers
    void glVertexPointer(int,int,int,int) -> glVertexPointer
    void glColorPointer(int,int,int,int) -> glColorPointer
    void glNormalPointer(int,int,int) -> glNormalPointer
    void glTexCoordPointer(int,int,int,int) -> glTexCoordPointer
    void glDrawElements(int,int,int,int) -> glDrawElements
com.badlogic.gdx.graphics.GL20 -> com.badlogic.gdx.graphics.f:
    void glAttachShader(int,int) -> glAttachShader
    void glBindBuffer(int,int) -> glBindBuffer
    void glBindFramebuffer(int,int) -> glBindFramebuffer
    void glBindRenderbuffer(int,int) -> glBindRenderbuffer
    void glBufferData(int,int,java.nio.Buffer,int) -> glBufferData
    void glBufferSubData(int,int,int,java.nio.Buffer) -> glBufferSubData
    int glCheckFramebufferStatus(int) -> glCheckFramebufferStatus
    void glCompileShader(int) -> glCompileShader
    int glCreateProgram() -> glCreateProgram
    int glCreateShader(int) -> glCreateShader
    void glDeleteBuffers(int,java.nio.IntBuffer) -> glDeleteBuffers
    void glDeleteFramebuffers(int,java.nio.IntBuffer) -> glDeleteFramebuffers
    void glDeleteProgram(int) -> glDeleteProgram
    void glDeleteRenderbuffers(int,java.nio.IntBuffer) -> glDeleteRenderbuffers
    void glDeleteShader(int) -> glDeleteShader
    void glDisableVertexAttribArray(int) -> glDisableVertexAttribArray
    void glDrawElements(int,int,int,int) -> glDrawElements
    void glEnableVertexAttribArray(int) -> glEnableVertexAttribArray
    void glFramebufferRenderbuffer(int,int,int,int) -> glFramebufferRenderbuffer
    void glFramebufferTexture2D(int,int,int,int,int) -> glFramebufferTexture2D
    void glGenBuffers(int,java.nio.IntBuffer) -> glGenBuffers
    void glGenerateMipmap(int) -> glGenerateMipmap
    void glGenFramebuffers(int,java.nio.IntBuffer) -> glGenFramebuffers
    void glGenRenderbuffers(int,java.nio.IntBuffer) -> glGenRenderbuffers
    java.lang.String glGetActiveAttrib(int,int,java.nio.IntBuffer,java.nio.Buffer) -> glGetActiveAttrib
    java.lang.String glGetActiveUniform(int,int,java.nio.IntBuffer,java.nio.Buffer) -> glGetActiveUniform
    int glGetAttribLocation(int,java.lang.String) -> glGetAttribLocation
    void glGetProgramiv(int,int,java.nio.IntBuffer) -> glGetProgramiv
    java.lang.String glGetProgramInfoLog(int) -> glGetProgramInfoLog
    void glGetShaderiv(int,int,java.nio.IntBuffer) -> glGetShaderiv
    java.lang.String glGetShaderInfoLog(int) -> glGetShaderInfoLog
    int glGetUniformLocation(int,java.lang.String) -> glGetUniformLocation
    void glLinkProgram(int) -> glLinkProgram
    void glRenderbufferStorage(int,int,int,int) -> glRenderbufferStorage
    void glShaderSource(int,java.lang.String) -> glShaderSource
    void glUniform1f(int,float) -> glUniform1f
    void glUniform1i(int,int) -> glUniform1i
    void glUniform3f(int,float,float,float) -> glUniform3f
    void glUniform3fv(int,int,java.nio.FloatBuffer) -> glUniform3fv
    void glUniform4f(int,float,float,float,float) -> glUniform4f
    void glUniformMatrix3fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix3fv
    void glUniformMatrix4fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix4fv
    void glUseProgram(int) -> glUseProgram
    void glVertexAttribPointer(int,int,int,boolean,int,java.nio.Buffer) -> glVertexAttribPointer
    void glVertexAttribPointer(int,int,int,boolean,int,int) -> glVertexAttribPointer
com.badlogic.gdx.graphics.GLCommon -> com.badlogic.gdx.graphics.g:
    void glActiveTexture(int) -> glActiveTexture
    void glBindTexture(int,int) -> glBindTexture
    void glBlendFunc(int,int) -> glBlendFunc
    void glClear(int) -> glClear
    void glClearColor(float,float,float,float) -> glClearColor
    void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexImage2D
    void glCullFace(int) -> glCullFace
    void glDeleteTextures(int,java.nio.IntBuffer) -> glDeleteTextures
    void glDepthFunc(int) -> glDepthFunc
    void glDepthMask(boolean) -> glDepthMask
    void glDisable(int) -> glDisable
    void glDrawArrays(int,int,int) -> glDrawArrays
    void glDrawElements(int,int,int,java.nio.Buffer) -> glDrawElements
    void glEnable(int) -> glEnable
    void glGenTextures(int,java.nio.IntBuffer) -> glGenTextures
    void glGetIntegerv(int,java.nio.IntBuffer) -> glGetIntegerv
    java.lang.String glGetString(int) -> glGetString
    void glPixelStorei(int,int) -> glPixelStorei
    void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexImage2D
    void glTexParameterf(int,int,float) -> glTexParameterf
    void glViewport(int,int,int,int) -> glViewport
com.badlogic.gdx.graphics.Mesh -> com.badlogic.gdx.graphics.h:
    java.util.Map meshes -> a
    boolean forceVBO -> b
    com.badlogic.gdx.graphics.glutils.VertexData vertices -> c
    com.badlogic.gdx.graphics.glutils.IndexData indices -> d
    boolean autoBind -> e
    boolean isVertexArray -> f
    com.badlogic.gdx.math.Vector3 tmpV -> g
    com.badlogic.gdx.graphics.Mesh setVertices$30629f50(float[],int) -> a
    com.badlogic.gdx.graphics.Mesh setIndices(short[]) -> a
    com.badlogic.gdx.graphics.Mesh setIndices$17987c23(short[],int) -> a
    void setAutoBind$1385ff() -> a
    void bind() -> b
    void unbind() -> c
    void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> a
    void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> b
    void render(int,int,int) -> a
    void render(com.badlogic.gdx.graphics.glutils.ShaderProgram,int,int,int) -> a
    void dispose() -> dispose
    com.badlogic.gdx.graphics.VertexAttributes getVertexAttributes() -> d
    java.nio.FloatBuffer getVerticesBuffer() -> e
    com.badlogic.gdx.math.collision.BoundingBox extendBoundingBox(com.badlogic.gdx.math.collision.BoundingBox,int,int,com.badlogic.gdx.math.Matrix4) -> a
    java.nio.ShortBuffer getIndicesBuffer() -> f
    void addManagedMesh(com.badlogic.gdx.Application,com.badlogic.gdx.graphics.Mesh) -> a
    void invalidateAllMeshes(com.badlogic.gdx.Application) -> a
    void clearAllMeshes(com.badlogic.gdx.Application) -> b
    java.lang.String getManagedStatus() -> g
com.badlogic.gdx.graphics.Mesh$VertexDataType -> com.badlogic.gdx.graphics.i:
    com.badlogic.gdx.graphics.Mesh$VertexDataType VertexArray -> a
    com.badlogic.gdx.graphics.Mesh$VertexDataType VertexBufferObject -> b
    com.badlogic.gdx.graphics.Mesh$VertexDataType VertexBufferObjectSubData -> c
    com.badlogic.gdx.graphics.Mesh$VertexDataType[] $VALUES -> d
    com.badlogic.gdx.graphics.Mesh$VertexDataType[] values() -> values
    com.badlogic.gdx.graphics.Mesh$VertexDataType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.OrthographicCamera -> com.badlogic.gdx.graphics.j:
    float zoom -> n
    com.badlogic.gdx.math.Vector3 tmp -> o
    void update() -> a
    void setToOrtho$4956fa3f(float,float) -> b
    void translate(float,float) -> c
com.badlogic.gdx.graphics.PerspectiveCamera -> com.badlogic.gdx.graphics.k:
    float fieldOfView -> n
    com.badlogic.gdx.math.Vector3 tmp -> o
    void update() -> a
com.badlogic.gdx.graphics.Pixmap -> com.badlogic.gdx.graphics.l:
    com.badlogic.gdx.graphics.Pixmap$Blending blending -> c
    com.badlogic.gdx.graphics.g2d.Gdx2DPixmap pixmap -> a
    int color -> b
    boolean disposed -> d
    void setBlending(com.badlogic.gdx.graphics.Pixmap$Blending) -> a
    void drawPixmap(com.badlogic.gdx.graphics.Pixmap,int,int) -> a
    void drawPixmap$23690701(com.badlogic.gdx.graphics.Pixmap,int,int,int,int) -> a
    void drawPixmap(com.badlogic.gdx.graphics.Pixmap,int,int,int,int,int,int,int,int) -> a
    int getWidth() -> a
    int getHeight() -> b
    void dispose() -> dispose
    int getGLFormat() -> c
    int getGLInternalFormat() -> d
    int getGLType() -> e
    java.nio.ByteBuffer getPixels() -> f
    com.badlogic.gdx.graphics.Pixmap$Format getFormat() -> g
    com.badlogic.gdx.graphics.Pixmap$Blending getBlending() -> h
com.badlogic.gdx.graphics.Pixmap$Blending -> com.badlogic.gdx.graphics.m:
    com.badlogic.gdx.graphics.Pixmap$Blending None -> a
    com.badlogic.gdx.graphics.Pixmap$Blending SourceOver -> b
    com.badlogic.gdx.graphics.Pixmap$Blending[] $VALUES -> c
    com.badlogic.gdx.graphics.Pixmap$Blending[] values() -> values
    com.badlogic.gdx.graphics.Pixmap$Blending valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.Pixmap$Format -> com.badlogic.gdx.graphics.n:
    com.badlogic.gdx.graphics.Pixmap$Format Alpha -> a
    com.badlogic.gdx.graphics.Pixmap$Format Intensity -> b
    com.badlogic.gdx.graphics.Pixmap$Format LuminanceAlpha -> c
    com.badlogic.gdx.graphics.Pixmap$Format RGB565 -> d
    com.badlogic.gdx.graphics.Pixmap$Format RGBA4444 -> e
    com.badlogic.gdx.graphics.Pixmap$Format RGB888 -> f
    com.badlogic.gdx.graphics.Pixmap$Format RGBA8888 -> g
    com.badlogic.gdx.graphics.Pixmap$Format[] $VALUES -> h
    com.badlogic.gdx.graphics.Pixmap$Format[] values() -> values
    com.badlogic.gdx.graphics.Pixmap$Format valueOf(java.lang.String) -> valueOf
    int toGdx2DPixmapFormat(com.badlogic.gdx.graphics.Pixmap$Format) -> a
    com.badlogic.gdx.graphics.Pixmap$Format fromGdx2DPixmapFormat(int) -> a
com.badlogic.gdx.graphics.PixmapIO -> com.badlogic.gdx.graphics.o:
    com.badlogic.gdx.graphics.Pixmap readCIM(com.badlogic.gdx.files.FileHandle) -> a
com.badlogic.gdx.graphics.PixmapIO$CIM -> com.badlogic.gdx.graphics.p:
    byte[] writeBuffer -> a
    byte[] readBuffer -> b
    com.badlogic.gdx.graphics.Pixmap read(com.badlogic.gdx.files.FileHandle) -> a
com.badlogic.gdx.graphics.Texture -> com.badlogic.gdx.graphics.q:
    boolean enforcePotImages -> h
    com.badlogic.gdx.assets.AssetManager assetManager -> i
    java.util.Map managedTextures -> a
    java.nio.IntBuffer buffer -> j
    com.badlogic.gdx.graphics.Texture$TextureFilter minFilter -> b
    com.badlogic.gdx.graphics.Texture$TextureFilter magFilter -> c
    com.badlogic.gdx.graphics.Texture$TextureWrap uWrap -> d
    com.badlogic.gdx.graphics.Texture$TextureWrap vWrap -> e
    int glHandle -> f
    com.badlogic.gdx.graphics.TextureData data -> g
    void create(com.badlogic.gdx.graphics.TextureData) -> b
    int createGLHandle() -> g
    void load(com.badlogic.gdx.graphics.TextureData) -> a
    void reload() -> h
    void bind() -> a
    void bind(int) -> a
    int getWidth() -> b
    int getHeight() -> c
    com.badlogic.gdx.graphics.TextureData getTextureData() -> d
    int getTextureObjectHandle() -> e
    void setWrap(com.badlogic.gdx.graphics.Texture$TextureWrap,com.badlogic.gdx.graphics.Texture$TextureWrap) -> a
    void setFilter(com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureFilter) -> a
    void dispose() -> dispose
    void clearAllTextures(com.badlogic.gdx.Application) -> a
    void invalidateAllTextures(com.badlogic.gdx.Application) -> b
    java.lang.String getManagedStatus() -> f
com.badlogic.gdx.graphics.Texture$1 -> com.badlogic.gdx.graphics.r:
    int val$refCount -> a
    void finishedLoading$190c2c84(com.badlogic.gdx.assets.AssetManager,java.lang.String) -> a
com.badlogic.gdx.graphics.Texture$TextureFilter -> com.badlogic.gdx.graphics.s:
    com.badlogic.gdx.graphics.Texture$TextureFilter Nearest -> a
    com.badlogic.gdx.graphics.Texture$TextureFilter Linear -> b
    com.badlogic.gdx.graphics.Texture$TextureFilter MipMap -> c
    com.badlogic.gdx.graphics.Texture$TextureFilter MipMapNearestNearest -> d
    com.badlogic.gdx.graphics.Texture$TextureFilter MipMapLinearNearest -> e
    com.badlogic.gdx.graphics.Texture$TextureFilter MipMapNearestLinear -> f
    com.badlogic.gdx.graphics.Texture$TextureFilter MipMapLinearLinear -> g
    int glEnum -> h
    com.badlogic.gdx.graphics.Texture$TextureFilter[] $VALUES -> i
    com.badlogic.gdx.graphics.Texture$TextureFilter[] values() -> values
    com.badlogic.gdx.graphics.Texture$TextureFilter valueOf(java.lang.String) -> valueOf
    int getGLEnum() -> a
com.badlogic.gdx.graphics.Texture$TextureWrap -> com.badlogic.gdx.graphics.t:
    com.badlogic.gdx.graphics.Texture$TextureWrap MirroredRepeat -> a
    com.badlogic.gdx.graphics.Texture$TextureWrap ClampToEdge -> b
    com.badlogic.gdx.graphics.Texture$TextureWrap Repeat -> c
    int glEnum -> d
    com.badlogic.gdx.graphics.Texture$TextureWrap[] $VALUES -> e
    com.badlogic.gdx.graphics.Texture$TextureWrap[] values() -> values
    com.badlogic.gdx.graphics.Texture$TextureWrap valueOf(java.lang.String) -> valueOf
    int getGLEnum() -> a
com.badlogic.gdx.graphics.TextureData -> com.badlogic.gdx.graphics.u:
    com.badlogic.gdx.graphics.TextureData$TextureDataType getType() -> a
    boolean isPrepared() -> b
    void prepare() -> c
    com.badlogic.gdx.graphics.Pixmap consumePixmap() -> d
    boolean disposePixmap() -> e
    void consumeCompressedData() -> f
    int getWidth() -> g
    int getHeight() -> h
    com.badlogic.gdx.graphics.Pixmap$Format getFormat() -> i
    boolean useMipMaps() -> j
    boolean isManaged() -> k
com.badlogic.gdx.graphics.TextureData$TextureDataType -> com.badlogic.gdx.graphics.v:
    com.badlogic.gdx.graphics.TextureData$TextureDataType Pixmap -> a
    com.badlogic.gdx.graphics.TextureData$TextureDataType Compressed -> b
    com.badlogic.gdx.graphics.TextureData$TextureDataType Float -> c
    com.badlogic.gdx.graphics.TextureData$TextureDataType[] $VALUES -> d
    com.badlogic.gdx.graphics.TextureData$TextureDataType[] values() -> values
    com.badlogic.gdx.graphics.TextureData$TextureDataType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.VertexAttribute -> com.badlogic.gdx.graphics.w:
    int usage -> a
    int numComponents -> b
    int offset -> c
    java.lang.String alias -> d
    int unit -> e
    int usageIndex -> f
    boolean equals(java.lang.Object) -> equals
    boolean equals(com.badlogic.gdx.graphics.VertexAttribute) -> a
com.badlogic.gdx.graphics.VertexAttributes -> com.badlogic.gdx.graphics.x:
    com.badlogic.gdx.graphics.VertexAttribute[] attributes -> b
    int vertexSize -> a
    long mask -> c
    com.badlogic.gdx.graphics.VertexAttribute findByUsage(int) -> a
    int calculateOffsets() -> b
    void checkValidity() -> c
    int size() -> a
    com.badlogic.gdx.graphics.VertexAttribute get(int) -> b
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
com.badlogic.gdx.graphics.g2d.BitmapFont -> com.badlogic.gdx.graphics.g2d.a:
    char[] xChars -> a
    char[] capChars -> b
    com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData data -> c
    com.badlogic.gdx.graphics.g2d.TextureRegion region -> d
    com.badlogic.gdx.graphics.g2d.BitmapFontCache cache -> e
    boolean flipped -> f
    boolean integer -> g
    boolean ownsTexture -> h
    void load(com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData) -> a
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,java.lang.CharSequence,float,float) -> a
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getBounds(java.lang.CharSequence) -> a
    void setColor(com.badlogic.gdx.graphics.Color) -> a
    com.badlogic.gdx.graphics.g2d.TextureRegion getRegion() -> a
    float getLineHeight() -> b
    void dispose() -> dispose
    boolean usesIntegerPositions() -> c
    void setOwnsTexture$1385ff() -> d
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData -> com.badlogic.gdx.graphics.g2d.b:
    java.lang.String imagePath -> a
    com.badlogic.gdx.files.FileHandle fontFile -> b
    boolean flipped -> c
    float lineHeight -> d
    float capHeight -> e
    float ascent -> f
    float descent -> g
    float down -> h
    float scaleX -> i
    float scaleY -> j
    com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph[][] glyphs -> k
    float spaceWidth -> l
    float xHeight -> m
    void setGlyph(int,com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph) -> a
    com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph getFirstGlyph() -> a
    com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph getGlyph(char) -> a
com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph -> com.badlogic.gdx.graphics.g2d.c:
    int srcX -> a
    int srcY -> b
    int width -> c
    int height -> d
    float u -> e
    float v -> f
    float u2 -> g
    float v2 -> h
    int xoffset -> i
    int yoffset -> j
    int xadvance -> k
    byte[][] kerning -> l
    int getKerning(char) -> a
    void setKerning(int,int) -> a
com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds -> com.badlogic.gdx.graphics.g2d.d:
    float width -> a
    float height -> b
com.badlogic.gdx.graphics.g2d.BitmapFontCache -> com.badlogic.gdx.graphics.g2d.e:
    com.badlogic.gdx.graphics.g2d.BitmapFont font -> a
    float[] vertices -> b
    int idx -> c
    float x -> d
    float y -> e
    float color -> f
    com.badlogic.gdx.graphics.Color tempColor -> g
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds textBounds -> h
    boolean integer -> i
    void setColor(com.badlogic.gdx.graphics.Color) -> a
    void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch) -> a
    void clear() -> a
    void addGlyph(com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph,float,float,float,float) -> a
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds addText$38304fc0(java.lang.CharSequence,float,float,int) -> a
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getBounds() -> b
    void setUseIntegerPositions(boolean) -> a
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap -> com.badlogic.gdx.graphics.g2d.Gdx2DPixmap:
    long basePtr -> a
    int width -> b
    int height -> c
    int format -> d
    java.nio.ByteBuffer pixelPtr -> e
    long[] nativeData -> f
    void dispose() -> dispose
    void clear(int) -> a
    void drawPixmap$1d45ff80(com.badlogic.gdx.graphics.g2d.Gdx2DPixmap,int,int,int,int) -> a
    void drawPixmap(com.badlogic.gdx.graphics.g2d.Gdx2DPixmap,int,int,int,int,int,int,int,int) -> a
    java.nio.ByteBuffer getPixels() -> a
    int getHeight() -> b
    int getWidth() -> c
    int getFormat() -> d
    int getGLInternalFormat() -> e
    int getGLFormat() -> f
    int getGLType() -> g
    java.nio.ByteBuffer load(long[],byte[],int,int,int) -> load
    java.nio.ByteBuffer newPixmap(long[],int,int,int) -> newPixmap
    void free(long) -> free
    void clear(long,int) -> clear
    void drawPixmap(long,long,int,int,int,int,int,int,int,int) -> drawPixmap
    void setBlend(int) -> setBlend
    void setScale(int) -> setScale
    java.lang.String getFailureReason() -> getFailureReason
com.badlogic.gdx.graphics.g2d.PixmapPacker -> com.badlogic.gdx.graphics.g2d.f:
    int pageWidth -> a
    int pageHeight -> b
    com.badlogic.gdx.graphics.Pixmap$Format pageFormat -> c
    int padding -> d
    boolean duplicateBorder -> e
    com.badlogic.gdx.utils.Array pages -> f
    com.badlogic.gdx.graphics.g2d.PixmapPacker$Page currPage -> g
    boolean disposed -> h
    com.badlogic.gdx.math.Rectangle pack(java.lang.String,com.badlogic.gdx.graphics.Pixmap) -> a
    void newPage() -> a
    com.badlogic.gdx.graphics.g2d.PixmapPacker$Node insert(com.badlogic.gdx.graphics.g2d.PixmapPacker$Node,com.badlogic.gdx.math.Rectangle) -> a
    com.badlogic.gdx.math.Rectangle getRect(java.lang.String) -> a
    void dispose() -> dispose
    com.badlogic.gdx.graphics.g2d.TextureAtlas generateTextureAtlas$7b1f7798(com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureFilter) -> a
com.badlogic.gdx.graphics.g2d.PixmapPacker$1 -> com.badlogic.gdx.graphics.g2d.g:
    com.badlogic.gdx.graphics.g2d.PixmapPacker this$0 -> h
    void dispose() -> dispose
com.badlogic.gdx.graphics.g2d.PixmapPacker$ManagedPixmapTextureData -> com.badlogic.gdx.graphics.g2d.h:
    com.badlogic.gdx.graphics.g2d.PixmapPacker this$0 -> a
    boolean isManaged() -> k
com.badlogic.gdx.graphics.g2d.PixmapPacker$Node -> com.badlogic.gdx.graphics.g2d.i:
    com.badlogic.gdx.graphics.g2d.PixmapPacker$Node leftChild -> a
    com.badlogic.gdx.graphics.g2d.PixmapPacker$Node rightChild -> b
    com.badlogic.gdx.math.Rectangle rect -> c
    java.lang.String leaveName -> d
com.badlogic.gdx.graphics.g2d.PixmapPacker$Page -> com.badlogic.gdx.graphics.g2d.j:
    com.badlogic.gdx.graphics.g2d.PixmapPacker$Node root -> a
    com.badlogic.gdx.utils.OrderedMap rects -> b
    com.badlogic.gdx.graphics.Pixmap image -> c
    com.badlogic.gdx.utils.Array addedRects -> d
    com.badlogic.gdx.graphics.g2d.PixmapPacker this$0 -> e
com.badlogic.gdx.graphics.g2d.SpriteBatch -> com.badlogic.gdx.graphics.g2d.k:
    com.badlogic.gdx.graphics.Mesh mesh -> e
    com.badlogic.gdx.graphics.Mesh[] buffers -> f
    com.badlogic.gdx.graphics.Texture lastTexture -> g
    float invTexWidth -> h
    float invTexHeight -> i
    int idx -> j
    int currBufferIdx -> k
    float[] vertices -> l
    com.badlogic.gdx.math.Matrix4 transformMatrix -> m
    com.badlogic.gdx.math.Matrix4 projectionMatrix -> n
    com.badlogic.gdx.math.Matrix4 combinedMatrix -> o
    boolean drawing -> p
    boolean blendingDisabled -> q
    int blendSrcFunc -> r
    int blendDstFunc -> s
    com.badlogic.gdx.graphics.glutils.ShaderProgram shader -> t
    boolean ownsShader -> u
    float color -> a
    com.badlogic.gdx.graphics.Color tempColor -> v
    int renderCalls -> b
    int totalRenderCalls -> c
    int maxSpritesInBatch -> d
    com.badlogic.gdx.graphics.glutils.ShaderProgram customShader -> w
    void begin() -> a
    void end() -> b
    void draw(com.badlogic.gdx.graphics.Texture,float[],int,int) -> a
    void renderMesh() -> c
    void dispose() -> dispose
com.badlogic.gdx.graphics.g2d.TextureAtlas -> com.badlogic.gdx.graphics.g2d.l:
    java.lang.String[] tuple -> a
    java.util.HashSet textures -> c
    com.badlogic.gdx.utils.Array regions -> d
    java.util.Comparator indexComparator -> b
    com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion addRegion(java.lang.String,com.badlogic.gdx.graphics.g2d.TextureRegion) -> a
    com.badlogic.gdx.utils.Array getRegions() -> a
    void dispose() -> dispose
com.badlogic.gdx.graphics.g2d.TextureAtlas$1 -> com.badlogic.gdx.graphics.g2d.m:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion -> com.badlogic.gdx.graphics.g2d.n:
    int index -> a
    java.lang.String name -> b
    float offsetX -> c
    float offsetY -> d
    int packedWidth -> e
    int packedHeight -> f
    int originalWidth -> g
    int originalHeight -> h
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData -> com.badlogic.gdx.graphics.g2d.o:
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Region -> com.badlogic.gdx.graphics.g2d.p:
    int index -> a
com.badlogic.gdx.graphics.g2d.TextureRegion -> com.badlogic.gdx.graphics.g2d.q:
    com.badlogic.gdx.graphics.Texture texture -> i
    float u -> j
    float v -> k
    float u2 -> l
    float v2 -> m
    int regionWidth -> n
    int regionHeight -> o
    void setRegion(int,int,int,int) -> a
    com.badlogic.gdx.graphics.Texture getTexture() -> a
com.badlogic.gdx.graphics.g2d.freetype.FreeType -> com.badlogic.gdx.graphics.g2d.freetype.FreeType:
    int FT_PIXEL_MODE_NONE -> a
    int FT_PIXEL_MODE_MONO -> b
    int FT_PIXEL_MODE_GRAY -> c
    int FT_PIXEL_MODE_GRAY2 -> d
    int FT_PIXEL_MODE_GRAY4 -> e
    int FT_PIXEL_MODE_LCD -> f
    int FT_PIXEL_MODE_LCD_V -> g
    int FT_ENCODING_NONE -> h
    int FT_ENCODING_MS_SYMBOL -> i
    int FT_ENCODING_UNICODE -> j
    int FT_ENCODING_SJIS -> k
    int FT_ENCODING_GB2312 -> l
    int FT_ENCODING_BIG5 -> m
    int FT_ENCODING_WANSUNG -> n
    int FT_ENCODING_JOHAB -> o
    int FT_ENCODING_ADOBE_STANDARD -> p
    int FT_ENCODING_ADOBE_EXPERT -> q
    int FT_ENCODING_ADOBE_CUSTOM -> r
    int FT_ENCODING_ADOBE_LATIN_1 -> s
    int FT_ENCODING_OLD_LATIN_2 -> t
    int FT_ENCODING_APPLE_ROMAN -> u
    int FT_FACE_FLAG_SCALABLE -> v
    int FT_FACE_FLAG_FIXED_SIZES -> w
    int FT_FACE_FLAG_FIXED_WIDTH -> x
    int FT_FACE_FLAG_SFNT -> y
    int FT_FACE_FLAG_HORIZONTAL -> z
    int FT_FACE_FLAG_VERTICAL -> A
    int FT_FACE_FLAG_KERNING -> B
    int FT_FACE_FLAG_FAST_GLYPHS -> C
    int FT_FACE_FLAG_MULTIPLE_MASTERS -> D
    int FT_FACE_FLAG_GLYPH_NAMES -> E
    int FT_FACE_FLAG_EXTERNAL_STREAM -> F
    int FT_FACE_FLAG_HINTER -> G
    int FT_FACE_FLAG_CID_KEYED -> H
    int FT_FACE_FLAG_TRICKY -> I
    int FT_STYLE_FLAG_ITALIC -> J
    int FT_STYLE_FLAG_BOLD -> K
    int FT_LOAD_DEFAULT -> L
    int FT_LOAD_NO_SCALE -> M
    int FT_LOAD_NO_HINTING -> N
    int FT_LOAD_RENDER -> O
    int FT_LOAD_NO_BITMAP -> P
    int FT_LOAD_VERTICAL_LAYOUT -> Q
    int FT_LOAD_FORCE_AUTOHINT -> R
    int FT_LOAD_CROP_BITMAP -> S
    int FT_LOAD_PEDANTIC -> T
    int FT_LOAD_IGNORE_GLOBAL_ADVANCE_WIDTH -> U
    int FT_LOAD_NO_RECURSE -> V
    int FT_LOAD_IGNORE_TRANSFORM -> W
    int FT_LOAD_MONOCHROME -> X
    int FT_LOAD_LINEAR_DESIGN -> Y
    int FT_LOAD_NO_AUTOHINT -> Z
    int FT_RENDER_MODE_NORMAL -> aa
    int FT_RENDER_MODE_LIGHT -> ab
    int FT_RENDER_MODE_MONO -> ac
    int FT_RENDER_MODE_LCD -> ad
    int FT_RENDER_MODE_LCD_V -> ae
    int FT_RENDER_MODE_MAX -> af
    int FT_KERNING_DEFAULT -> ag
    int FT_KERNING_UNFITTED -> ah
    int FT_KERNING_UNSCALED -> ai
    int encode(char,char,char,char) -> a
    com.badlogic.gdx.graphics.g2d.freetype.FreeType$Library initFreeType() -> a
    long initFreeTypeJni() -> initFreeTypeJni
    void doneFreeType(com.badlogic.gdx.graphics.g2d.freetype.FreeType$Library) -> a
    void doneFreeType(long) -> doneFreeType
    com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face newFace$5556e409(com.badlogic.gdx.graphics.g2d.freetype.FreeType$Library,com.badlogic.gdx.files.FileHandle) -> a
    long newMemoryFace(long,java.nio.ByteBuffer,int,int) -> newMemoryFace
    void doneFace(com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face) -> a
    void doneFace(long) -> doneFace
    boolean setPixelSizes$5b494498(com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face,int) -> a
    boolean setPixelSizes(long,int,int) -> setPixelSizes
    boolean loadChar(com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face,int,int) -> a
    boolean loadChar(long,int,int) -> loadChar
    boolean renderGlyph(com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphSlot,int) -> a
    boolean renderGlyph(long,int) -> renderGlyph
    int getKerning$ddfc0e2(com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face,int,int) -> b
    int getKerning(long,int,int,int) -> getKerning
    int getCharIndex(com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face,int) -> b
    int getCharIndex(long,int) -> getCharIndex
    int toInt(int) -> a
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Bitmap -> com.badlogic.gdx.graphics.g2d.freetype.FreeType$Bitmap:
    int getRows(long) -> getRows
    int getWidth(long) -> getWidth
    com.badlogic.gdx.graphics.Pixmap getPixmap(com.badlogic.gdx.graphics.Pixmap$Format) -> a
    java.nio.ByteBuffer getBuffer(long) -> getBuffer
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face -> com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face:
    com.badlogic.gdx.graphics.g2d.freetype.FreeType$Library library -> a
    int getMaxAdvanceWidth() -> a
    int getMaxAdvanceWidth(long) -> getMaxAdvanceWidth
    com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphSlot getGlyph() -> b
    long getGlyph(long) -> getGlyph
    com.badlogic.gdx.graphics.g2d.freetype.FreeType$Size getSize() -> c
    long getSize(long) -> getSize
com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphMetrics -> com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphMetrics:
    int getHeight() -> a
    int getHeight(long) -> getHeight
    int getHoriAdvance() -> b
    int getHoriAdvance(long) -> getHoriAdvance
com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphSlot -> com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphSlot:
    com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphMetrics getMetrics() -> a
    long getMetrics(long) -> getMetrics
    com.badlogic.gdx.graphics.g2d.freetype.FreeType$Bitmap getBitmap() -> b
    long getBitmap(long) -> getBitmap
    int getBitmapLeft() -> c
    int getBitmapLeft(long) -> getBitmapLeft
    int getBitmapTop() -> d
    int getBitmapTop(long) -> getBitmapTop
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Library -> com.badlogic.gdx.graphics.g2d.freetype.a:
    com.badlogic.gdx.utils.LongMap fontData -> a
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Pointer -> com.badlogic.gdx.graphics.g2d.freetype.b:
    long address -> b
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Size -> com.badlogic.gdx.graphics.g2d.freetype.FreeType$Size:
    com.badlogic.gdx.graphics.g2d.freetype.FreeType$SizeMetrics getMetrics() -> a
    long getMetrics(long) -> getMetrics
com.badlogic.gdx.graphics.g2d.freetype.FreeType$SizeMetrics -> com.badlogic.gdx.graphics.g2d.freetype.FreeType$SizeMetrics:
    int getAscender() -> a
    int getAscender(long) -> getAscender
    int getDescender() -> b
    int getDescender(long) -> getDescender
    int getHeight() -> c
    int getHeight(long) -> getHeight
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator -> com.badlogic.gdx.graphics.g2d.freetype.c:
    com.badlogic.gdx.graphics.g2d.freetype.FreeType$Library library -> a
    com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face face -> b
    com.badlogic.gdx.graphics.g2d.BitmapFont generateFont(int) -> a
    void dispose() -> dispose
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeBitmapFontData -> com.badlogic.gdx.graphics.g2d.freetype.d:
    com.badlogic.gdx.graphics.g2d.TextureRegion region -> n
com.badlogic.gdx.graphics.g3d.Model -> com.badlogic.gdx.graphics.a.a:
    com.badlogic.gdx.utils.Array materials -> a
    com.badlogic.gdx.utils.Array nodes -> b
    com.badlogic.gdx.utils.Array animations -> c
    com.badlogic.gdx.utils.Array meshes -> d
    com.badlogic.gdx.utils.Array meshParts -> e
    com.badlogic.gdx.utils.Array disposables -> f
    com.badlogic.gdx.utils.ObjectMap nodePartBones -> g
    void loadAnimations(java.lang.Iterable) -> a
    void loadNodes(java.lang.Iterable) -> b
    com.badlogic.gdx.graphics.g3d.model.Node loadNode(com.badlogic.gdx.graphics.g3d.model.Node,com.badlogic.gdx.graphics.g3d.model.data.ModelNode) -> a
    void loadMeshes(java.lang.Iterable) -> c
    void loadMaterials(java.lang.Iterable,com.badlogic.gdx.graphics.g3d.utils.TextureProvider) -> a
    void manageDisposable(com.badlogic.gdx.utils.Disposable) -> a
    java.lang.Iterable getManagedDisposables() -> a
    void dispose() -> dispose
    void calculateTransforms() -> b
    com.badlogic.gdx.graphics.g3d.model.Node getNode(java.lang.String) -> a
com.badlogic.gdx.graphics.g3d.ModelBatch -> com.badlogic.gdx.graphics.a.b:
    com.badlogic.gdx.graphics.Camera camera -> a
    com.badlogic.gdx.utils.Pool renderablesPool -> b
    com.badlogic.gdx.utils.Array renderables -> c
    com.badlogic.gdx.utils.Array reuseableRenderables -> d
    com.badlogic.gdx.graphics.g3d.utils.RenderContext context -> e
    com.badlogic.gdx.graphics.g3d.utils.ShaderProvider shaderProvider -> f
    com.badlogic.gdx.graphics.g3d.utils.RenderableSorter sorter -> g
    void begin(com.badlogic.gdx.graphics.Camera) -> a
    void end() -> a
    void render(com.badlogic.gdx.graphics.g3d.RenderableProvider,com.badlogic.gdx.graphics.g3d.lights.Lights) -> a
    void dispose() -> dispose
com.badlogic.gdx.graphics.g3d.ModelBatch$1 -> com.badlogic.gdx.graphics.a.c:
    com.badlogic.gdx.graphics.g3d.ModelBatch this$0 -> a
    java.lang.Object obtain() -> obtain
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.graphics.g3d.ModelInstance -> com.badlogic.gdx.graphics.a.d:
    com.badlogic.gdx.utils.Array materials -> a
    com.badlogic.gdx.utils.Array nodes -> b
    com.badlogic.gdx.utils.Array animations -> c
    com.badlogic.gdx.graphics.g3d.Model model -> d
    com.badlogic.gdx.math.Matrix4 transform -> e
    java.lang.Object userData -> f
    com.badlogic.gdx.utils.ObjectMap nodePartBones -> g
    void copyNodes(com.badlogic.gdx.utils.Array) -> a
    com.badlogic.gdx.graphics.g3d.model.Node copyNode(com.badlogic.gdx.graphics.g3d.model.Node,com.badlogic.gdx.graphics.g3d.model.Node) -> a
    void copyAnimations(java.lang.Iterable) -> a
    void getRenderables(com.badlogic.gdx.utils.Array,com.badlogic.gdx.utils.Pool) -> a
    void getRenderables(com.badlogic.gdx.graphics.g3d.model.Node,com.badlogic.gdx.utils.Array,com.badlogic.gdx.utils.Pool) -> a
    void calculateTransforms() -> a
    com.badlogic.gdx.math.collision.BoundingBox calculateBoundingBox(com.badlogic.gdx.math.collision.BoundingBox) -> a
    com.badlogic.gdx.graphics.g3d.model.Node getNode(java.lang.String) -> a
com.badlogic.gdx.graphics.g3d.Renderable -> com.badlogic.gdx.graphics.a.e:
    com.badlogic.gdx.math.Matrix4 worldTransform -> a
    com.badlogic.gdx.graphics.Mesh mesh -> b
    int meshPartOffset -> c
    int meshPartSize -> d
    int primitiveType -> e
    com.badlogic.gdx.graphics.g3d.materials.Material material -> f
    com.badlogic.gdx.math.Matrix4[] bones -> g
    com.badlogic.gdx.graphics.g3d.lights.Lights lights -> h
    com.badlogic.gdx.graphics.g3d.Shader shader -> i
    java.lang.Object userData -> j
com.badlogic.gdx.graphics.g3d.RenderableProvider -> com.badlogic.gdx.graphics.a.f:
    void getRenderables(com.badlogic.gdx.utils.Array,com.badlogic.gdx.utils.Pool) -> a
com.badlogic.gdx.graphics.g3d.Shader -> com.badlogic.gdx.graphics.a.g:
    void init() -> a
    boolean canRender(com.badlogic.gdx.graphics.g3d.Renderable) -> a
    void begin(com.badlogic.gdx.graphics.Camera,com.badlogic.gdx.graphics.g3d.utils.RenderContext) -> a
    void render(com.badlogic.gdx.graphics.g3d.Renderable) -> b
    void end() -> b
com.badlogic.gdx.graphics.g3d.lights.AmbientCubemap -> com.badlogic.gdx.graphics.a.a.a:
    float[] data -> a
    com.badlogic.gdx.graphics.g3d.lights.AmbientCubemap add(float,float,float,float,float,float) -> a
com.badlogic.gdx.graphics.g3d.lights.BaseLight -> com.badlogic.gdx.graphics.a.a.b:
    com.badlogic.gdx.graphics.Color color -> a
com.badlogic.gdx.graphics.g3d.lights.DirectionalLight -> com.badlogic.gdx.graphics.a.a.c:
    com.badlogic.gdx.math.Vector3 direction -> b
    com.badlogic.gdx.graphics.g3d.lights.DirectionalLight set$26522a59(float,float,float,float,float) -> a
    boolean equals(java.lang.Object) -> equals
    boolean equals(com.badlogic.gdx.graphics.g3d.lights.DirectionalLight) -> a
com.badlogic.gdx.graphics.g3d.lights.Lights -> com.badlogic.gdx.graphics.a.a.d:
    com.badlogic.gdx.graphics.Color ambientLight -> a
    com.badlogic.gdx.graphics.Color fog -> b
    com.badlogic.gdx.utils.Array directionalLights -> c
    com.badlogic.gdx.utils.Array pointLights -> d
    com.badlogic.gdx.graphics.g3d.lights.Lights add(com.badlogic.gdx.graphics.g3d.lights.BaseLight) -> a
com.badlogic.gdx.graphics.g3d.lights.PointLight -> com.badlogic.gdx.graphics.a.a.e:
    com.badlogic.gdx.math.Vector3 position -> b
    float intensity -> c
    com.badlogic.gdx.graphics.g3d.lights.PointLight set(float,float,float,float,float,float,float) -> a
    boolean equals(java.lang.Object) -> equals
    boolean equals(com.badlogic.gdx.graphics.g3d.lights.PointLight) -> a
com.badlogic.gdx.graphics.g3d.loader.MtlLoader -> com.badlogic.gdx.graphics.a.b.a:
    java.util.ArrayList materials -> a
    void load(com.badlogic.gdx.files.FileHandle) -> a
    com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial getMaterial(java.lang.String) -> a
com.badlogic.gdx.graphics.g3d.loader.ObjLoader -> com.badlogic.gdx.graphics.a.b.b:
    com.badlogic.gdx.utils.FloatArray verts -> b
    com.badlogic.gdx.utils.FloatArray norms -> c
    com.badlogic.gdx.utils.FloatArray uvs -> d
    java.util.ArrayList groups -> e
    com.badlogic.gdx.graphics.g3d.model.data.ModelData loadModelData(com.badlogic.gdx.files.FileHandle,boolean) -> a
    com.badlogic.gdx.graphics.g3d.loader.ObjLoader$Group setActiveGroup(java.lang.String) -> a
    int getIndex(java.lang.String,int) -> a
    com.badlogic.gdx.graphics.g3d.model.data.ModelData loadModelData(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> a
com.badlogic.gdx.graphics.g3d.loader.ObjLoader$Group -> com.badlogic.gdx.graphics.a.b.c:
    java.lang.String name -> a
    java.lang.String materialName -> b
    java.util.ArrayList faces -> c
    int numFaces -> d
    boolean hasNorms -> e
    boolean hasUVs -> f
    com.badlogic.gdx.graphics.g3d.materials.Material mat -> g
    com.badlogic.gdx.graphics.g3d.loader.ObjLoader this$0 -> h
com.badlogic.gdx.graphics.g3d.loader.ObjLoader$ObjLoaderParameters -> com.badlogic.gdx.graphics.a.b.d:
    boolean flipV -> b
com.badlogic.gdx.graphics.g3d.materials.BlendingAttribute -> com.badlogic.gdx.graphics.a.c.a:
    long Type -> a
    int sourceFunction -> b
    int destFunction -> c
    float opacity -> d
    boolean is(long) -> a
    boolean equals(com.badlogic.gdx.graphics.g3d.materials.Material$Attribute) -> a
    com.badlogic.gdx.graphics.g3d.materials.Material$Attribute copy() -> a
com.badlogic.gdx.graphics.g3d.materials.ColorAttribute -> com.badlogic.gdx.graphics.a.c.b:
    long Diffuse -> a
    long Specular -> b
    long Ambient -> c
    long Emissive -> d
    long Mask -> e
    com.badlogic.gdx.graphics.Color color -> f
    boolean is(long) -> a
    com.badlogic.gdx.graphics.g3d.materials.ColorAttribute createDiffuse(com.badlogic.gdx.graphics.Color) -> a
    com.badlogic.gdx.graphics.g3d.materials.Material$Attribute copy() -> a
    boolean equals(com.badlogic.gdx.graphics.g3d.materials.Material$Attribute) -> a
com.badlogic.gdx.graphics.g3d.materials.FloatAttribute -> com.badlogic.gdx.graphics.a.c.c:
    long Shininess -> a
    long AlphaTest -> b
    float value -> c
    com.badlogic.gdx.graphics.g3d.materials.Material$Attribute copy() -> a
    boolean equals(com.badlogic.gdx.graphics.g3d.materials.Material$Attribute) -> a
com.badlogic.gdx.graphics.g3d.materials.IntAttribute -> com.badlogic.gdx.graphics.a.c.d:
    long CullFace -> a
    int value -> b
    com.badlogic.gdx.graphics.g3d.materials.Material$Attribute copy() -> a
    boolean equals(com.badlogic.gdx.graphics.g3d.materials.Material$Attribute) -> a
com.badlogic.gdx.graphics.g3d.materials.Material -> com.badlogic.gdx.graphics.a.c.e:
    com.badlogic.gdx.utils.Array types -> e
    int counter -> f
    java.lang.String id -> a
    long mask -> b
    com.badlogic.gdx.utils.Array attributes -> c
    boolean sorted -> d
    java.lang.String getAttributeAlias(long) -> a
    long register(java.lang.String) -> a
    long getMask() -> a
    boolean has(long) -> b
    void set(com.badlogic.gdx.graphics.g3d.materials.Material$Attribute) -> a
    com.badlogic.gdx.graphics.g3d.materials.Material copy() -> b
    void sort() -> c
    boolean equals(java.lang.Object) -> equals
    java.util.Iterator iterator() -> iterator
    int compare(java.lang.Object,java.lang.Object) -> compare
com.badlogic.gdx.graphics.g3d.materials.Material$Attribute -> com.badlogic.gdx.graphics.a.c.f:
    long type -> g
    long register(java.lang.String) -> a
    com.badlogic.gdx.graphics.g3d.materials.Material$Attribute copy() -> a
    boolean equals(com.badlogic.gdx.graphics.g3d.materials.Material$Attribute) -> a
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.badlogic.gdx.graphics.g3d.materials.TextureAttribute -> com.badlogic.gdx.graphics.a.c.g:
    long Diffuse -> a
    long Specular -> b
    long Bump -> c
    long Normal -> d
    long Mask -> e
    com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor textureDescription -> f
    boolean is(long) -> a
    com.badlogic.gdx.graphics.g3d.materials.Material$Attribute copy() -> a
    boolean equals(com.badlogic.gdx.graphics.g3d.materials.Material$Attribute) -> a
com.badlogic.gdx.graphics.g3d.model.Animation -> com.badlogic.gdx.graphics.a.d.a:
    java.lang.String id -> a
    float duration -> b
    com.badlogic.gdx.utils.Array nodeAnimations -> c
com.badlogic.gdx.graphics.g3d.model.MeshPart -> com.badlogic.gdx.graphics.a.d.b:
    java.lang.String id -> a
    int primitiveType -> b
    int indexOffset -> c
    int numVertices -> d
    com.badlogic.gdx.graphics.Mesh mesh -> e
com.badlogic.gdx.graphics.g3d.model.Node -> com.badlogic.gdx.graphics.a.d.c:
    java.lang.String id -> a
    com.badlogic.gdx.graphics.g3d.model.Node parent -> b
    com.badlogic.gdx.utils.Array children -> c
    boolean isAnimated -> d
    com.badlogic.gdx.math.Vector3 translation -> e
    com.badlogic.gdx.math.Quaternion rotation -> f
    com.badlogic.gdx.math.Vector3 scale -> g
    com.badlogic.gdx.math.Matrix4 localTransform -> h
    com.badlogic.gdx.math.Matrix4 globalTransform -> i
    com.badlogic.gdx.utils.Array parts -> j
    void calculateTransforms$1385ff() -> a
    void calculateBoneTransforms$1385ff() -> b
    com.badlogic.gdx.math.collision.BoundingBox extendBoundingBox(com.badlogic.gdx.math.collision.BoundingBox) -> a
    com.badlogic.gdx.graphics.g3d.model.Node getNode$6e5cac71(com.badlogic.gdx.utils.Array,java.lang.String,boolean) -> a
com.badlogic.gdx.graphics.g3d.model.NodeAnimation -> com.badlogic.gdx.graphics.a.d.d:
    com.badlogic.gdx.graphics.g3d.model.Node node -> a
    com.badlogic.gdx.utils.Array keyframes -> b
com.badlogic.gdx.graphics.g3d.model.NodeKeyframe -> com.badlogic.gdx.graphics.a.d.e:
    float keytime -> a
    com.badlogic.gdx.math.Vector3 translation -> b
    com.badlogic.gdx.math.Vector3 scale -> c
    com.badlogic.gdx.math.Quaternion rotation -> d
com.badlogic.gdx.graphics.g3d.model.NodePart -> com.badlogic.gdx.graphics.a.d.f:
    com.badlogic.gdx.graphics.g3d.model.MeshPart meshPart -> a
    com.badlogic.gdx.graphics.g3d.materials.Material material -> b
    com.badlogic.gdx.utils.ArrayMap invBoneBindTransforms -> c
    com.badlogic.gdx.math.Matrix4[] bones -> d
com.badlogic.gdx.graphics.g3d.model.data.ModelAnimation -> com.badlogic.gdx.graphics.a.d.a.a:
    java.lang.String id -> a
    com.badlogic.gdx.utils.Array nodeAnimations -> b
com.badlogic.gdx.graphics.g3d.model.data.ModelData -> com.badlogic.gdx.graphics.a.d.a.b:
    short[] version -> a
    com.badlogic.gdx.utils.Array meshes -> b
    com.badlogic.gdx.utils.Array materials -> c
    com.badlogic.gdx.utils.Array nodes -> d
    com.badlogic.gdx.utils.Array animations -> e
com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial -> com.badlogic.gdx.graphics.a.d.a.c:
    java.lang.String id -> a
    com.badlogic.gdx.graphics.Color ambient -> b
    com.badlogic.gdx.graphics.Color diffuse -> c
    com.badlogic.gdx.graphics.Color specular -> d
    com.badlogic.gdx.graphics.Color emissive -> e
    float shininess -> f
    float opacity -> g
    com.badlogic.gdx.utils.Array textures -> h
com.badlogic.gdx.graphics.g3d.model.data.ModelMesh -> com.badlogic.gdx.graphics.a.d.a.d:
    java.lang.String id -> a
    com.badlogic.gdx.graphics.VertexAttribute[] attributes -> b
    float[] vertices -> c
    com.badlogic.gdx.graphics.g3d.model.data.ModelMeshPart[] parts -> d
com.badlogic.gdx.graphics.g3d.model.data.ModelMeshPart -> com.badlogic.gdx.graphics.a.d.a.e:
    java.lang.String id -> a
    short[] indices -> b
    int primitiveType -> c
com.badlogic.gdx.graphics.g3d.model.data.ModelNode -> com.badlogic.gdx.graphics.a.d.a.f:
    java.lang.String id -> a
    int boneId -> b
    com.badlogic.gdx.math.Vector3 translation -> c
    com.badlogic.gdx.math.Quaternion rotation -> d
    com.badlogic.gdx.math.Vector3 scale -> e
    java.lang.String meshId -> f
    com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart[] parts -> g
    com.badlogic.gdx.graphics.g3d.model.data.ModelNode[] children -> h
com.badlogic.gdx.graphics.g3d.model.data.ModelNodeAnimation -> com.badlogic.gdx.graphics.a.d.a.g:
    java.lang.String nodeId -> a
    com.badlogic.gdx.utils.Array keyframes -> b
com.badlogic.gdx.graphics.g3d.model.data.ModelNodeKeyframe -> com.badlogic.gdx.graphics.a.d.a.h:
    float keytime -> a
    com.badlogic.gdx.math.Vector3 translation -> b
    com.badlogic.gdx.math.Vector3 scale -> c
    com.badlogic.gdx.math.Quaternion rotation -> d
com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart -> com.badlogic.gdx.graphics.a.d.a.i:
    java.lang.String materialId -> a
    java.lang.String meshPartId -> b
    com.badlogic.gdx.utils.ArrayMap bones -> c
com.badlogic.gdx.graphics.g3d.model.data.ModelTexture -> com.badlogic.gdx.graphics.a.d.a.j:
    java.lang.String fileName -> a
    int usage -> b
com.badlogic.gdx.graphics.g3d.shaders.BaseShader -> com.badlogic.gdx.graphics.a.e.a:
    com.badlogic.gdx.utils.Array inputs -> g
    com.badlogic.gdx.utils.Array vertexAttributes -> a
    com.badlogic.gdx.utils.Array globalUniforms -> b
    com.badlogic.gdx.utils.Array localUniforms -> c
    com.badlogic.gdx.graphics.glutils.ShaderProgram program -> d
    com.badlogic.gdx.graphics.g3d.utils.RenderContext context -> e
    com.badlogic.gdx.graphics.Camera camera -> f
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input register(com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input) -> a
    void init$6e7a19b4(com.badlogic.gdx.graphics.glutils.ShaderProgram,long,long) -> a
    void begin(com.badlogic.gdx.graphics.Camera,com.badlogic.gdx.graphics.g3d.utils.RenderContext) -> a
    void render(com.badlogic.gdx.graphics.g3d.Renderable) -> b
    void end() -> b
    void dispose() -> dispose
    boolean has(com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input) -> b
    boolean set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input,com.badlogic.gdx.math.Matrix4) -> a
    boolean set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input,com.badlogic.gdx.math.Vector3) -> a
    boolean set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input,com.badlogic.gdx.graphics.Color) -> a
    boolean set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input,float) -> a
com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input -> com.badlogic.gdx.graphics.a.e.b:
    int scope -> a
    java.lang.String name -> b
    long materialFlags -> c
    long vertexFlags -> d
    long userFlags -> e
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input$Setter setter -> f
    int location -> g
com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input$Setter -> com.badlogic.gdx.graphics.a.e.c:
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader -> com.badlogic.gdx.graphics.a.e.d:
    java.lang.String defaultVertexShader -> ad
    java.lang.String defaultFragmentShader -> ae
    long implementedFlags -> g
    boolean ignoreUnimplemented -> h
    int defaultCullFace -> i
    int defaultDepthFunc -> j
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input u_projTrans -> k
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input u_cameraPosition -> l
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input u_cameraDirection -> m
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input u_cameraUp -> n
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input u_worldTrans -> o
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input u_normalMatrix -> p
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input u_bones -> q
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input u_shininess -> r
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input u_opacity -> s
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input u_diffuseColor -> t
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input u_diffuseTexture -> u
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input u_specularColor -> v
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input u_specularTexture -> w
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input u_normalTexture -> x
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input u_alphaTest -> y
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input u_ambientLight -> z
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input u_ambientCubemap -> A
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input u_dirLights0color -> B
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input u_dirLights0direction -> C
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input u_dirLights1color -> D
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input u_pointLights0color -> E
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input u_pointLights0position -> F
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input u_pointLights0intensity -> G
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input u_pointLights1color -> H
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input u_fogColor -> I
    int dirLightsLoc -> J
    int dirLightsColorOffset -> K
    int dirLightsDirectionOffset -> L
    int dirLightsSize -> M
    int pointLightsLoc -> N
    int pointLightsColorOffset -> O
    int pointLightsPositionOffset -> P
    int pointLightsIntensityOffset -> Q
    int pointLightsSize -> R
    boolean lighting -> S
    boolean fog -> T
    com.badlogic.gdx.graphics.g3d.lights.AmbientCubemap ambientCubemap -> U
    com.badlogic.gdx.graphics.g3d.lights.DirectionalLight[] directionalLights -> V
    com.badlogic.gdx.graphics.g3d.lights.PointLight[] pointLights -> W
    float[] bones -> X
    long materialMask -> Y
    long vertexMask -> Z
    long[] blendAttributes -> aa
    com.badlogic.gdx.graphics.Mesh currentMesh -> af
    com.badlogic.gdx.math.Matrix3 normalMatrix -> ag
    com.badlogic.gdx.math.Matrix4 idtMatrix -> ah
    com.badlogic.gdx.graphics.g3d.materials.Material currentMaterial -> ab
    com.badlogic.gdx.graphics.g3d.materials.TextureAttribute currentTextureAttribute -> ac
    com.badlogic.gdx.math.Vector3 tmpV1 -> ai
    java.lang.String getDefaultVertexShader() -> c
    java.lang.String getDefaultFragmentShader() -> d
    void init() -> a
    long getAttributesMask(com.badlogic.gdx.graphics.VertexAttributes) -> a
    java.lang.String createPrefix$3801f30b$5b25102e(long,long,boolean,boolean,int) -> a
    boolean canRender(com.badlogic.gdx.graphics.g3d.Renderable) -> a
    boolean equals(java.lang.Object) -> equals
    void begin(com.badlogic.gdx.graphics.Camera,com.badlogic.gdx.graphics.g3d.utils.RenderContext) -> a
    void render(com.badlogic.gdx.graphics.g3d.Renderable) -> b
    void end() -> b
    void bindTextureAttribute(int,com.badlogic.gdx.graphics.g3d.materials.TextureAttribute) -> a
    void bindLights(com.badlogic.gdx.graphics.g3d.Renderable) -> c
    void dispose() -> dispose
com.badlogic.gdx.graphics.g3d.shaders.GLES10Shader -> com.badlogic.gdx.graphics.a.e.e:
    com.badlogic.gdx.graphics.Camera camera -> b
    com.badlogic.gdx.graphics.g3d.utils.RenderContext context -> c
    com.badlogic.gdx.math.Matrix4 currentTransform -> d
    com.badlogic.gdx.graphics.g3d.materials.Material currentMaterial -> e
    com.badlogic.gdx.graphics.Texture currentTexture0 -> f
    com.badlogic.gdx.graphics.Mesh currentMesh -> g
    int defaultCullFace -> a
    float[] lightVal -> h
    float[] zeroVal4 -> i
    float[] oneVal4 -> j
    void init() -> a
    boolean canRender(com.badlogic.gdx.graphics.g3d.Renderable) -> a
    boolean equals(java.lang.Object) -> equals
    void begin(com.badlogic.gdx.graphics.Camera,com.badlogic.gdx.graphics.g3d.utils.RenderContext) -> a
    float[] getValues(float[],float,float,float,float) -> a
    float[] getValues(float[],com.badlogic.gdx.graphics.Color) -> a
    void render(com.badlogic.gdx.graphics.g3d.Renderable) -> b
    void end() -> b
    void dispose() -> dispose
com.badlogic.gdx.graphics.g3d.utils.BaseShaderProvider -> com.badlogic.gdx.graphics.a.f.a:
    com.badlogic.gdx.utils.Array shaders -> a
    com.badlogic.gdx.graphics.g3d.Shader getShader(com.badlogic.gdx.graphics.g3d.Renderable) -> a
    com.badlogic.gdx.graphics.g3d.Shader createShader(com.badlogic.gdx.graphics.g3d.Renderable) -> b
    void dispose() -> a
com.badlogic.gdx.graphics.g3d.utils.DefaultRenderableSorter -> com.badlogic.gdx.graphics.a.f.b:
    com.badlogic.gdx.graphics.Camera camera -> a
    com.badlogic.gdx.math.Vector3 tmpV1 -> b
    com.badlogic.gdx.math.Vector3 tmpV2 -> c
    void sort(com.badlogic.gdx.graphics.Camera,com.badlogic.gdx.utils.Array) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.badlogic.gdx.graphics.g3d.utils.DefaultShaderProvider -> com.badlogic.gdx.graphics.a.f.c:
    java.lang.String vertexShader -> b
    java.lang.String fragmentShader -> c
    com.badlogic.gdx.graphics.g3d.Shader createShader(com.badlogic.gdx.graphics.g3d.Renderable) -> b
com.badlogic.gdx.graphics.g3d.utils.DefaultTextureBinder -> com.badlogic.gdx.graphics.a.f.d:
    int offset -> a
    int count -> b
    int reuseWeight -> c
    com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor[] textures -> d
    int[] weights -> e
    int method -> f
    boolean reused -> g
    int reuseCount -> h
    int bindCount -> i
    int currentTexture -> j
    int getMaxTextureUnits() -> c
    void begin() -> a
    void end() -> b
    int bind(com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor) -> a
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder -> com.badlogic.gdx.graphics.a.f.e:
    com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo vertTmp1 -> a
    com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo vertTmp2 -> b
    com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo vertTmp3 -> c
    com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo vertTmp4 -> d
    com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo vertTmp5 -> e
    com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo vertTmp6 -> f
    com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo vertTmp7 -> g
    com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo vertTmp8 -> h
    com.badlogic.gdx.math.Matrix4 matTmp1 -> i
    com.badlogic.gdx.math.Vector3 tempV1 -> j
    com.badlogic.gdx.math.Vector3 tempV2 -> k
    com.badlogic.gdx.math.Vector3 tempV3 -> l
    com.badlogic.gdx.math.Vector3 tempV4 -> m
    com.badlogic.gdx.math.Vector3 tempV5 -> n
    com.badlogic.gdx.math.Vector3 tempV6 -> o
    com.badlogic.gdx.math.Vector3 tempV7 -> p
    com.badlogic.gdx.math.Vector3 tempV8 -> q
    com.badlogic.gdx.graphics.VertexAttributes attributes -> r
    com.badlogic.gdx.utils.FloatArray vertices -> s
    com.badlogic.gdx.utils.ShortArray indices -> t
    int stride -> u
    short vindex -> v
    int istart -> w
    int posOffset -> x
    int posSize -> y
    int norOffset -> z
    int colOffset -> A
    int colSize -> B
    int cpOffset -> C
    int uvOffset -> D
    com.badlogic.gdx.graphics.g3d.model.MeshPart part -> E
    com.badlogic.gdx.utils.Array parts -> F
    com.badlogic.gdx.graphics.Color color -> G
    boolean colorSet -> H
    int primitiveType -> I
    float uMin -> J
    float uMax -> K
    float vMin -> L
    float vMax -> M
    float[] vertex -> N
    com.badlogic.gdx.utils.Pool vectorPool -> O
    com.badlogic.gdx.utils.Array vectorArray -> P
    com.badlogic.gdx.graphics.VertexAttributes createAttributes$1984990d() -> a
    void begin(com.badlogic.gdx.graphics.VertexAttributes) -> a
    void endpart() -> d
    com.badlogic.gdx.graphics.g3d.model.MeshPart part$7f432e5c(java.lang.String) -> a
    com.badlogic.gdx.graphics.Mesh end() -> b
    com.badlogic.gdx.graphics.VertexAttributes getAttributes() -> c
    com.badlogic.gdx.math.Vector3 tmp(float,float,float) -> b
    short vertex(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo) -> a
    void index(short,short,short,short,short,short) -> a
    void index(short,short,short,short,short,short,short,short) -> a
    void rect(short,short,short,short) -> a
    void rect(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> a
    void box(float,float,float) -> a
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder$1 -> com.badlogic.gdx.graphics.a.f.f:
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder -> com.badlogic.gdx.graphics.a.f.g:
    void box(float,float,float) -> a
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo -> com.badlogic.gdx.graphics.a.f.h:
    com.badlogic.gdx.math.Vector3 position -> a
    boolean hasPosition -> b
    com.badlogic.gdx.math.Vector3 normal -> c
    boolean hasNormal -> d
    com.badlogic.gdx.graphics.Color color -> e
    boolean hasColor -> f
    com.badlogic.gdx.math.Vector2 uv -> g
    boolean hasUV -> h
    void reset() -> a
    com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo set$5a37f0e1(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> a
    com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo setUV(float,float) -> a
com.badlogic.gdx.graphics.g3d.utils.ModelBuilder -> com.badlogic.gdx.graphics.a.f.i:
    com.badlogic.gdx.graphics.g3d.Model model -> a
    com.badlogic.gdx.graphics.g3d.model.Node node -> b
    com.badlogic.gdx.utils.Array builders -> c
    com.badlogic.gdx.graphics.g3d.Model end() -> a
    void endnode() -> b
    com.badlogic.gdx.graphics.g3d.Model createBox$406c1386(float,float,float,com.badlogic.gdx.graphics.g3d.materials.Material) -> a
    void rebuildReferences(com.badlogic.gdx.graphics.g3d.Model,com.badlogic.gdx.graphics.g3d.model.Node) -> a
com.badlogic.gdx.graphics.g3d.utils.RenderContext -> com.badlogic.gdx.graphics.a.f.j:
    com.badlogic.gdx.graphics.g3d.utils.TextureBinder textureBinder -> a
    boolean blending -> b
    int blendSFactor -> c
    int blendDFactor -> d
    boolean depthTest -> e
    int depthFunc -> f
    int cullFace -> g
    void begin() -> a
    void end() -> b
    void setDepthTest(boolean,int) -> a
    void setBlending(boolean,int,int) -> a
    void setCullFace(int) -> a
com.badlogic.gdx.graphics.g3d.utils.RenderableSorter -> com.badlogic.gdx.graphics.a.f.k:
    void sort(com.badlogic.gdx.graphics.Camera,com.badlogic.gdx.utils.Array) -> a
com.badlogic.gdx.graphics.g3d.utils.ShaderProvider -> com.badlogic.gdx.graphics.a.f.l:
    com.badlogic.gdx.graphics.g3d.Shader getShader(com.badlogic.gdx.graphics.g3d.Renderable) -> a
    void dispose() -> a
com.badlogic.gdx.graphics.g3d.utils.TextureBinder -> com.badlogic.gdx.graphics.a.f.m:
    void begin() -> a
    void end() -> b
    int bind(com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor) -> a
com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor -> com.badlogic.gdx.graphics.a.f.n:
    com.badlogic.gdx.graphics.Texture texture -> a
    int minFilter -> b
    int magFilter -> c
    int uWrap -> d
    int vWrap -> e
    boolean equals(java.lang.Object) -> equals
com.badlogic.gdx.graphics.g3d.utils.TextureProvider -> com.badlogic.gdx.graphics.a.f.o:
    com.badlogic.gdx.graphics.Texture load(java.lang.String) -> a
com.badlogic.gdx.graphics.g3d.utils.TextureProvider$AssetTextureProvider -> com.badlogic.gdx.graphics.a.f.p:
    com.badlogic.gdx.assets.AssetManager assetManager -> a
    com.badlogic.gdx.graphics.Texture load(java.lang.String) -> a
com.badlogic.gdx.graphics.g3d.utils.TextureProvider$FileTextureProvider -> com.badlogic.gdx.graphics.a.f.q:
    com.badlogic.gdx.graphics.Texture load(java.lang.String) -> a
com.badlogic.gdx.graphics.glutils.ETC1 -> com.badlogic.gdx.graphics.glutils.ETC1:
    int PKM_HEADER_SIZE -> a
    int ETC1_RGB8_OES -> b
    com.badlogic.gdx.graphics.Pixmap decodeImage(com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data,com.badlogic.gdx.graphics.Pixmap$Format) -> a
    int getWidthPKM(java.nio.ByteBuffer,int) -> getWidthPKM
    int getHeightPKM(java.nio.ByteBuffer,int) -> getHeightPKM
    boolean isValidPKM(java.nio.ByteBuffer,int) -> isValidPKM
    void decodeImage(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,int,int,int) -> decodeImage
com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data -> com.badlogic.gdx.graphics.glutils.a:
    int width -> a
    int height -> b
    java.nio.ByteBuffer compressedData -> c
    int dataOffset -> d
    boolean hasPKMHeader() -> a
    void dispose() -> dispose
    java.lang.String toString() -> toString
com.badlogic.gdx.graphics.glutils.ETC1TextureData -> com.badlogic.gdx.graphics.glutils.b:
    com.badlogic.gdx.files.FileHandle file -> a
    com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data data -> b
    boolean useMipMaps -> c
    int width -> d
    int height -> e
    boolean isPrepared -> f
    com.badlogic.gdx.graphics.TextureData$TextureDataType getType() -> a
    boolean isPrepared() -> b
    void prepare() -> c
    void consumeCompressedData() -> f
    com.badlogic.gdx.graphics.Pixmap consumePixmap() -> d
    boolean disposePixmap() -> e
    int getWidth() -> g
    int getHeight() -> h
    com.badlogic.gdx.graphics.Pixmap$Format getFormat() -> i
    boolean useMipMaps() -> j
    boolean isManaged() -> k
com.badlogic.gdx.graphics.glutils.FileTextureData -> com.badlogic.gdx.graphics.glutils.c:
    boolean copyToPOT -> a
    com.badlogic.gdx.files.FileHandle file -> b
    int width -> c
    int height -> d
    com.badlogic.gdx.graphics.Pixmap$Format format -> e
    com.badlogic.gdx.graphics.Pixmap pixmap -> f
    boolean useMipMaps -> g
    boolean isPrepared -> h
    boolean isPrepared() -> b
    void prepare() -> c
    com.badlogic.gdx.graphics.Pixmap ensurePot(com.badlogic.gdx.graphics.Pixmap) -> a
    com.badlogic.gdx.graphics.Pixmap consumePixmap() -> d
    boolean disposePixmap() -> e
    int getWidth() -> g
    int getHeight() -> h
    com.badlogic.gdx.graphics.Pixmap$Format getFormat() -> i
    boolean useMipMaps() -> j
    boolean isManaged() -> k
    com.badlogic.gdx.graphics.TextureData$TextureDataType getType() -> a
    void consumeCompressedData() -> f
com.badlogic.gdx.graphics.glutils.FrameBuffer -> com.badlogic.gdx.graphics.glutils.d:
    java.util.Map buffers -> f
    com.badlogic.gdx.graphics.Texture colorTexture -> a
    int defaultFramebufferHandle -> g
    boolean defaultFramebufferHandleInitialized -> h
    int framebufferHandle -> i
    int depthbufferHandle -> j
    int width -> b
    int height -> c
    boolean hasDepth -> d
    com.badlogic.gdx.graphics.Pixmap$Format format -> e
    void dispose() -> dispose
    void invalidateAllFrameBuffers(com.badlogic.gdx.Application) -> a
    void clearAllFrameBuffers(com.badlogic.gdx.Application) -> b
    java.lang.String getManagedStatus() -> a
com.badlogic.gdx.graphics.glutils.IndexArray -> com.badlogic.gdx.graphics.glutils.e:
    java.nio.IntBuffer tmpHandle -> a
    java.nio.ShortBuffer buffer -> b
    java.nio.ByteBuffer byteBuffer -> c
    int getNumIndices() -> a
    void setIndices$1c09d813(short[],int) -> a
    java.nio.ShortBuffer getBuffer() -> b
    void bind() -> c
    void unbind() -> d
    void invalidate() -> e
    void dispose() -> dispose
com.badlogic.gdx.graphics.glutils.IndexBufferObject -> com.badlogic.gdx.graphics.glutils.f:
    java.nio.IntBuffer tmpHandle -> a
    java.nio.ShortBuffer buffer -> b
    java.nio.ByteBuffer byteBuffer -> c
    int bufferHandle -> d
    boolean isDirect -> e
    boolean isDirty -> f
    boolean isBound -> g
    int usage -> h
    int createBufferObject() -> f
    int getNumIndices() -> a
    void setIndices$1c09d813(short[],int) -> a
    java.nio.ShortBuffer getBuffer() -> b
    void bind() -> c
    void unbind() -> d
    void invalidate() -> e
    void dispose() -> dispose
com.badlogic.gdx.graphics.glutils.IndexBufferObjectSubData -> com.badlogic.gdx.graphics.glutils.g:
    java.nio.IntBuffer tmpHandle -> a
    java.nio.ShortBuffer buffer -> b
    java.nio.ByteBuffer byteBuffer -> c
    int bufferHandle -> d
    boolean isDirect -> e
    boolean isDirty -> f
    boolean isBound -> g
    int usage -> h
    int createBufferObject() -> f
    int getNumIndices() -> a
    void setIndices$1c09d813(short[],int) -> a
    java.nio.ShortBuffer getBuffer() -> b
    void bind() -> c
    void unbind() -> d
    void invalidate() -> e
    void dispose() -> dispose
com.badlogic.gdx.graphics.glutils.IndexData -> com.badlogic.gdx.graphics.glutils.h:
    int getNumIndices() -> a
    void setIndices$1c09d813(short[],int) -> a
    java.nio.ShortBuffer getBuffer() -> b
    void bind() -> c
    void unbind() -> d
    void invalidate() -> e
    void dispose() -> dispose
com.badlogic.gdx.graphics.glutils.MipMapGenerator -> com.badlogic.gdx.graphics.glutils.i:
    boolean useHWMipMap -> a
    void generateMipMap(com.badlogic.gdx.graphics.Pixmap,int,int,boolean) -> a
    void generateMipMapCPU(com.badlogic.gdx.graphics.Pixmap,int,int,boolean) -> b
com.badlogic.gdx.graphics.glutils.PixmapTextureData -> com.badlogic.gdx.graphics.glutils.j:
    com.badlogic.gdx.graphics.Pixmap pixmap -> b
    com.badlogic.gdx.graphics.Pixmap$Format format -> c
    boolean useMipMaps -> d
    boolean disposePixmap -> e
    boolean disposePixmap() -> e
    com.badlogic.gdx.graphics.Pixmap consumePixmap() -> d
    int getWidth() -> g
    int getHeight() -> h
    com.badlogic.gdx.graphics.Pixmap$Format getFormat() -> i
    boolean useMipMaps() -> j
    boolean isManaged() -> k
    com.badlogic.gdx.graphics.TextureData$TextureDataType getType() -> a
    void consumeCompressedData() -> f
    boolean isPrepared() -> b
    void prepare() -> c
com.badlogic.gdx.graphics.glutils.ShaderProgram -> com.badlogic.gdx.graphics.glutils.k:
    boolean pedantic -> a
    com.badlogic.gdx.utils.ObjectMap shaders -> e
    java.lang.String log -> f
    boolean isCompiled -> g
    com.badlogic.gdx.utils.ObjectIntMap uniforms -> h
    com.badlogic.gdx.utils.ObjectIntMap uniformTypes -> i
    com.badlogic.gdx.utils.ObjectIntMap uniformSizes -> j
    java.lang.String[] uniformNames -> k
    com.badlogic.gdx.utils.ObjectIntMap attributes -> l
    com.badlogic.gdx.utils.ObjectIntMap attributeTypes -> m
    com.badlogic.gdx.utils.ObjectIntMap attributeSizes -> n
    java.lang.String[] attributeNames -> o
    int program -> p
    int vertexShaderHandle -> q
    int fragmentShaderHandle -> r
    java.nio.FloatBuffer matrix -> s
    java.lang.String vertexShaderSource -> t
    java.lang.String fragmentShaderSource -> u
    boolean invalidated -> v
    java.nio.ByteBuffer buffer -> w
    java.nio.FloatBuffer floatBuffer -> x
    java.nio.IntBuffer intBuffer -> y
    int refCount -> z
    java.nio.IntBuffer intbuf -> b
    java.nio.IntBuffer params -> c
    java.nio.IntBuffer type -> d
    void compileShaders(java.lang.String,java.lang.String) -> a
    int loadShader(int,java.lang.String) -> a
    java.lang.String getLog() -> a
    boolean isCompiled() -> b
    int fetchUniformLocation(java.lang.String) -> d
    int fetchUniformLocation(java.lang.String,boolean) -> a
    void setUniformi$505cff1c(java.lang.String) -> a
    void setUniformi(int,int) -> a
    void setUniformf(int,float) -> a
    void setUniformf(int,float,float,float) -> a
    void setUniformf(int,float,float,float,float) -> a
    void setUniform3fv$fe46367(int,float[],int) -> a
    void setUniformMatrix(java.lang.String,com.badlogic.gdx.math.Matrix4) -> a
    void setUniformMatrix(int,com.badlogic.gdx.math.Matrix4) -> a
    void setUniformMatrix(int,com.badlogic.gdx.math.Matrix3) -> a
    void setUniformMatrix4fv$fe46367(int,float[],int) -> b
    void setUniformf(int,com.badlogic.gdx.math.Vector3) -> a
    void setUniformf(int,com.badlogic.gdx.graphics.Color) -> a
    void setVertexAttribute(int,int,int,boolean,int,java.nio.Buffer) -> a
    void setVertexAttribute(int,int,int,boolean,int,int) -> a
    void begin() -> c
    void end() -> d
    void dispose() -> dispose
    void disableVertexAttribute(java.lang.String) -> b
    void enableVertexAttribute(int) -> a
    void checkManaged() -> f
    void invalidateAllShaderPrograms(com.badlogic.gdx.Application) -> a
    void clearAllShaderPrograms(com.badlogic.gdx.Application) -> b
    java.lang.String getManagedStatus() -> e
    void ensureBufferCapacity(int) -> b
    void fetchUniforms() -> g
    void fetchAttributes() -> h
    int getAttributeLocation(java.lang.String) -> c
com.badlogic.gdx.graphics.glutils.VertexArray -> com.badlogic.gdx.graphics.glutils.l:
    com.badlogic.gdx.graphics.VertexAttributes attributes -> a
    java.nio.FloatBuffer buffer -> b
    java.nio.ByteBuffer byteBuffer -> c
    boolean isBound -> d
    void dispose() -> dispose
    java.nio.FloatBuffer getBuffer() -> a
    void setVertices$1cc109a0(float[],int) -> a
    void bind() -> b
    void unbind() -> c
    void bind$67d23606(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> a
    void unbind$67d23606(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> b
    com.badlogic.gdx.graphics.VertexAttributes getAttributes() -> d
com.badlogic.gdx.graphics.glutils.VertexBufferObject -> com.badlogic.gdx.graphics.glutils.m:
    java.nio.IntBuffer tmpHandle -> a
    com.badlogic.gdx.graphics.VertexAttributes attributes -> b
    java.nio.FloatBuffer buffer -> c
    java.nio.ByteBuffer byteBuffer -> d
    int bufferHandle -> e
    boolean isStatic -> f
    int usage -> g
    boolean isDirty -> h
    boolean isBound -> i
    int createBufferObject() -> f
    com.badlogic.gdx.graphics.VertexAttributes getAttributes() -> d
    java.nio.FloatBuffer getBuffer() -> a
    void setVertices$1cc109a0(float[],int) -> a
    void bind() -> b
    void bind$67d23606(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> a
    void unbind() -> c
    void unbind$67d23606(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> b
    void invalidate() -> e
    void dispose() -> dispose
com.badlogic.gdx.graphics.glutils.VertexBufferObjectSubData -> com.badlogic.gdx.graphics.glutils.n:
    java.nio.IntBuffer tmpHandle -> a
    com.badlogic.gdx.graphics.VertexAttributes attributes -> b
    java.nio.FloatBuffer buffer -> c
    java.nio.ByteBuffer byteBuffer -> d
    int bufferHandle -> e
    boolean isDirect -> f
    boolean isStatic -> g
    int usage -> h
    boolean isDirty -> i
    boolean isBound -> j
    com.badlogic.gdx.graphics.VertexAttributes getAttributes() -> d
    java.nio.FloatBuffer getBuffer() -> a
    void setVertices$1cc109a0(float[],int) -> a
    void bind() -> b
    void bind$67d23606(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> a
    void unbind() -> c
    void unbind$67d23606(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> b
    void dispose() -> dispose
com.badlogic.gdx.graphics.glutils.VertexData -> com.badlogic.gdx.graphics.glutils.o:
    com.badlogic.gdx.graphics.VertexAttributes getAttributes() -> d
    void setVertices$1cc109a0(float[],int) -> a
    java.nio.FloatBuffer getBuffer() -> a
    void bind() -> b
    void unbind() -> c
    void bind$67d23606(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> a
    void unbind$67d23606(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> b
    void dispose() -> dispose
com.badlogic.gdx.math.Frustum -> com.badlogic.gdx.math.a:
    com.badlogic.gdx.math.Vector3[] clipSpacePlanePoints -> a
    float[] clipSpacePlanePointsArray -> b
    com.badlogic.gdx.math.Plane[] planes -> c
    com.badlogic.gdx.math.Vector3[] planePoints -> d
    float[] planePointsArray -> e
    void update(com.badlogic.gdx.math.Matrix4) -> a
com.badlogic.gdx.math.Intersector -> com.badlogic.gdx.math.b:
    com.badlogic.gdx.math.Vector3 v0 -> g
    com.badlogic.gdx.math.Vector3 v1 -> h
    com.badlogic.gdx.math.Vector3 v2 -> i
    com.badlogic.gdx.math.Plane p -> j
    com.badlogic.gdx.math.Vector3 i -> k
    com.badlogic.gdx.math.Vector3 dir -> l
    com.badlogic.gdx.math.Vector3 start -> m
    com.badlogic.gdx.math.Vector3 tmp -> a
    com.badlogic.gdx.math.Vector3 best -> b
    com.badlogic.gdx.math.Vector3 tmp1 -> c
    com.badlogic.gdx.math.Vector3 tmp2 -> d
    com.badlogic.gdx.math.Vector3 tmp3 -> e
    com.badlogic.gdx.math.Vector3 intersection -> f
    boolean intersectRayBounds$2797ea88(com.badlogic.gdx.math.collision.Ray,com.badlogic.gdx.math.collision.BoundingBox) -> a
com.badlogic.gdx.math.MathUtils -> com.badlogic.gdx.math.c:
    int ATAN2_DIM -> a
    float INV_ATAN2_DIM_MINUS_1 -> c
    java.util.Random random -> b
    int random$134621() -> a
    int nextPowerOfTwo(int) -> a
    boolean isPowerOfTwo(int) -> b
com.badlogic.gdx.math.Matrix3 -> com.badlogic.gdx.math.d:
    float[] val -> a
    float[] tmp -> b
    java.lang.String toString() -> toString
    com.badlogic.gdx.math.Matrix3 set(com.badlogic.gdx.math.Matrix4) -> a
    float[] getValues() -> a
com.badlogic.gdx.math.Matrix4 -> com.badlogic.gdx.math.Matrix4:
    float[] tmp -> a
    float[] val -> b
    com.badlogic.gdx.math.Quaternion quat -> c
    com.badlogic.gdx.math.Vector3 l_vez -> d
    com.badlogic.gdx.math.Vector3 l_vex -> e
    com.badlogic.gdx.math.Vector3 l_vey -> f
    com.badlogic.gdx.math.Vector3 tmpVec -> g
    com.badlogic.gdx.math.Matrix4 tmpMat -> h
    com.badlogic.gdx.math.Vector3 right -> i
    com.badlogic.gdx.math.Vector3 tmpForward -> j
    com.badlogic.gdx.math.Vector3 tmpUp -> k
    com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Matrix4) -> a
    com.badlogic.gdx.math.Matrix4 mul(com.badlogic.gdx.math.Matrix4) -> b
    com.badlogic.gdx.math.Matrix4 idt() -> a
    com.badlogic.gdx.math.Matrix4 inv() -> b
    com.badlogic.gdx.math.Matrix4 setToProjection(float,float,float,float) -> a
    com.badlogic.gdx.math.Matrix4 setToOrtho2D$7167aba2(float,float) -> a
    com.badlogic.gdx.math.Matrix4 setToOrtho(float,float,float,float,float,float) -> a
    com.badlogic.gdx.math.Matrix4 setToTranslation(float,float,float) -> a
    com.badlogic.gdx.math.Matrix4 setToRotation$7167aba2(float) -> a
    com.badlogic.gdx.math.Matrix4 setToScaling(float,float,float) -> b
    com.badlogic.gdx.math.Matrix4 setToLookAt(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> a
    java.lang.String toString() -> toString
    void getTranslation(com.badlogic.gdx.math.Vector3) -> a
    void mul(float[],float[]) -> mul
    void prj(float[],float[],int,int,int) -> prj
    boolean inv(float[]) -> inv
    com.badlogic.gdx.math.Matrix4 translate(com.badlogic.gdx.math.Vector3) -> b
    com.badlogic.gdx.math.Matrix4 translate(float,float,float) -> c
    com.badlogic.gdx.math.Matrix4 rotate$7167aba2(float,float,float) -> d
    com.badlogic.gdx.math.Matrix4 rotate(com.badlogic.gdx.math.Quaternion) -> a
    com.badlogic.gdx.math.Matrix4 scale(float,float,float) -> e
com.badlogic.gdx.math.Plane -> com.badlogic.gdx.math.e:
    com.badlogic.gdx.math.Vector3 normal -> a
    float d -> b
    void set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> a
    java.lang.String toString() -> toString
com.badlogic.gdx.math.Quaternion -> com.badlogic.gdx.math.f:
    com.badlogic.gdx.math.Quaternion tmp1 -> e
    com.badlogic.gdx.math.Quaternion tmp2 -> f
    float x -> a
    float y -> b
    float z -> c
    float w -> d
    com.badlogic.gdx.math.Quaternion set(float,float,float,float) -> a
    com.badlogic.gdx.math.Quaternion set(com.badlogic.gdx.math.Quaternion) -> a
    java.lang.String toString() -> toString
    void toMatrix(float[]) -> a
    com.badlogic.gdx.math.Quaternion idt() -> a
    com.badlogic.gdx.math.Quaternion setFromAxis$4e318ec7(float,float,float) -> a
    boolean equals(java.lang.Object) -> equals
com.badlogic.gdx.math.Rectangle -> com.badlogic.gdx.math.g:
    com.badlogic.gdx.math.Rectangle tmp -> a
    com.badlogic.gdx.math.Rectangle tmp2 -> b
    float x -> c
    float y -> d
    float width -> e
    float height -> f
    float getWidth() -> a
    float getHeight() -> b
    java.lang.String toString() -> toString
com.badlogic.gdx.math.Vector2 -> com.badlogic.gdx.math.h:
    com.badlogic.gdx.math.Vector2 X -> a
    com.badlogic.gdx.math.Vector2 Y -> b
    com.badlogic.gdx.math.Vector2 Zero -> c
    float x -> d
    float y -> e
    com.badlogic.gdx.math.Vector2 set(float,float) -> a
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.badlogic.gdx.math.Vector3 -> com.badlogic.gdx.math.i:
    float x -> a
    float y -> b
    float z -> c
    com.badlogic.gdx.math.Vector3 tmp -> d
    com.badlogic.gdx.math.Vector3 tmp2 -> e
    com.badlogic.gdx.math.Vector3 tmp3 -> f
    com.badlogic.gdx.math.Vector3 X -> g
    com.badlogic.gdx.math.Vector3 Y -> h
    com.badlogic.gdx.math.Vector3 Z -> i
    com.badlogic.gdx.math.Vector3 Zero -> j
    com.badlogic.gdx.math.Matrix4 tmpMat -> k
    com.badlogic.gdx.math.Vector3 set(float,float,float) -> a
    com.badlogic.gdx.math.Vector3 set(com.badlogic.gdx.math.Vector3) -> a
    com.badlogic.gdx.math.Vector3 cpy() -> a
    com.badlogic.gdx.math.Vector3 tmp() -> b
    com.badlogic.gdx.math.Vector3 tmp2() -> c
    com.badlogic.gdx.math.Vector3 add(com.badlogic.gdx.math.Vector3) -> b
    com.badlogic.gdx.math.Vector3 add(float,float,float) -> b
    com.badlogic.gdx.math.Vector3 sub(com.badlogic.gdx.math.Vector3) -> c
    com.badlogic.gdx.math.Vector3 scl(float) -> a
    float len(float,float,float) -> c
    float dst(com.badlogic.gdx.math.Vector3) -> d
    float dst$483d241b(float) -> b
    float dst2(com.badlogic.gdx.math.Vector3) -> e
    com.badlogic.gdx.math.Vector3 nor() -> d
    float dot(com.badlogic.gdx.math.Vector3) -> f
    com.badlogic.gdx.math.Vector3 crs(com.badlogic.gdx.math.Vector3) -> g
    com.badlogic.gdx.math.Vector3 mul(com.badlogic.gdx.math.Matrix4) -> a
    com.badlogic.gdx.math.Vector3 prj(com.badlogic.gdx.math.Matrix4) -> b
    com.badlogic.gdx.math.Vector3 rotate$13c7babf(float) -> c
    com.badlogic.gdx.math.Vector3 lerp$489ef89b(com.badlogic.gdx.math.Vector3) -> h
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.badlogic.gdx.math.WindowedMean -> com.badlogic.gdx.math.j:
    float[] values -> a
    int added_values -> b
    int last_value -> c
    float mean -> d
    boolean dirty -> e
    void clear() -> a
    void addValue(float) -> a
    float getMean() -> b
com.badlogic.gdx.math.collision.BoundingBox -> com.badlogic.gdx.math.a.a:
    com.badlogic.gdx.math.Vector3[] crn -> a
    com.badlogic.gdx.math.Vector3 min -> b
    com.badlogic.gdx.math.Vector3 max -> c
    com.badlogic.gdx.math.Vector3 cnt -> d
    com.badlogic.gdx.math.Vector3 dim -> e
    boolean crn_dirty -> f
    com.badlogic.gdx.math.Vector3 getMin() -> a
    com.badlogic.gdx.math.Vector3 getMax() -> b
    com.badlogic.gdx.math.collision.BoundingBox set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> a
    com.badlogic.gdx.math.collision.BoundingBox inf() -> c
    com.badlogic.gdx.math.collision.BoundingBox ext(com.badlogic.gdx.math.Vector3) -> a
    java.lang.String toString() -> toString
    float min(float,float) -> a
com.badlogic.gdx.math.collision.Ray -> com.badlogic.gdx.math.a.b:
    com.badlogic.gdx.math.Vector3 origin -> a
    com.badlogic.gdx.math.Vector3 direction -> b
    com.badlogic.gdx.math.Vector3 tmp -> c
    java.lang.String toString() -> toString
com.badlogic.gdx.net.HttpStatus -> com.badlogic.gdx.d.a:
    int statusCode -> a
com.badlogic.gdx.net.NetJavaImpl -> com.badlogic.gdx.d.b:
    java.util.concurrent.ExecutorService executorService -> a
    void sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener) -> a
com.badlogic.gdx.net.NetJavaImpl$1 -> com.badlogic.gdx.d.c:
    boolean val$doingOutPut -> a
    com.badlogic.gdx.Net$HttpRequest val$httpRequest -> b
    java.net.HttpURLConnection val$connection -> c
    com.badlogic.gdx.Net$HttpResponseListener val$httpResponseListener -> d
    com.badlogic.gdx.net.NetJavaImpl this$0 -> e
    void run() -> run
com.badlogic.gdx.net.NetJavaImpl$1$1 -> com.badlogic.gdx.d.d:
    com.badlogic.gdx.net.NetJavaImpl$HttpClientResponse val$clientResponse -> a
    com.badlogic.gdx.net.NetJavaImpl$1 this$1 -> b
    void run() -> run
com.badlogic.gdx.net.NetJavaImpl$1$2 -> com.badlogic.gdx.d.e:
    java.lang.Exception val$e -> a
    com.badlogic.gdx.net.NetJavaImpl$1 this$1 -> b
    void run() -> run
com.badlogic.gdx.net.NetJavaImpl$HttpClientResponse -> com.badlogic.gdx.d.f:
    java.net.HttpURLConnection connection -> a
    com.badlogic.gdx.net.HttpStatus status -> b
    java.io.InputStream inputStream -> c
com.badlogic.gdx.net.ServerSocket -> com.badlogic.gdx.d.g:
com.badlogic.gdx.net.ServerSocketHints -> com.badlogic.gdx.d.h:
    int backlog -> a
    int performancePrefConnectionTime -> b
    int performancePrefLatency -> c
    int performancePrefBandwidth -> d
    boolean reuseAddress -> e
    int acceptTimeout -> f
    int receiveBufferSize -> g
com.badlogic.gdx.net.Socket -> com.badlogic.gdx.d.i:
com.badlogic.gdx.net.SocketHints -> com.badlogic.gdx.d.j:
    int connectTimeout -> a
    int performancePrefConnectionTime -> b
    int performancePrefLatency -> c
    int performancePrefBandwidth -> d
    int trafficClass -> e
    boolean keepAlive -> f
    boolean tcpNoDelay -> g
    int sendBufferSize -> h
    int receiveBufferSize -> i
    boolean linger -> j
    int lingerDuration -> k
com.badlogic.gdx.utils.Array -> com.badlogic.gdx.utils.a:
    java.lang.Object[] items -> a
    int size -> b
    boolean ordered -> c
    com.badlogic.gdx.utils.Array$ArrayIterable iterable -> d
    void add(java.lang.Object) -> a
    void addAll(com.badlogic.gdx.utils.Array) -> a
    java.lang.Object get(int) -> a
    boolean contains$4cfd3ce7(java.lang.Object) -> b
    int indexOf$4cfd3cd6(java.lang.Object) -> c
    boolean removeValue(java.lang.Object,boolean) -> a
    java.lang.Object removeIndex(int) -> b
    java.lang.Object pop() -> a
    java.lang.Object first() -> b
    void clear() -> c
    java.lang.Object[] resize(int) -> c
    void sort(java.util.Comparator) -> a
    java.util.Iterator iterator() -> iterator
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.badlogic.gdx.utils.Array$ArrayIterable -> com.badlogic.gdx.utils.b:
    com.badlogic.gdx.utils.Array array -> a
    boolean allowRemove -> b
    com.badlogic.gdx.utils.Array$ArrayIterator iterator1 -> c
    com.badlogic.gdx.utils.Array$ArrayIterator iterator2 -> d
    java.util.Iterator iterator() -> iterator
com.badlogic.gdx.utils.Array$ArrayIterator -> com.badlogic.gdx.utils.c:
    com.badlogic.gdx.utils.Array array -> c
    boolean allowRemove -> d
    int index -> a
    boolean valid -> b
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.badlogic.gdx.utils.ArrayMap -> com.badlogic.gdx.utils.d:
    java.lang.Object[] keys -> a
    java.lang.Object[] values -> b
    int size -> c
    boolean ordered -> d
    com.badlogic.gdx.utils.ArrayMap$Entries entries1 -> e
    com.badlogic.gdx.utils.ArrayMap$Entries entries2 -> f
    void put(java.lang.Object,java.lang.Object) -> a
    void clear() -> a
    java.lang.String toString() -> toString
    com.badlogic.gdx.utils.ArrayMap$Entries entries() -> b
com.badlogic.gdx.utils.ArrayMap$Entries -> com.badlogic.gdx.utils.e:
    com.badlogic.gdx.utils.ArrayMap map -> d
    com.badlogic.gdx.utils.ObjectMap$Entry entry -> a
    int index -> b
    boolean valid -> c
    boolean hasNext() -> hasNext
    java.util.Iterator iterator() -> iterator
    void remove() -> remove
    java.lang.Object next() -> next
com.badlogic.gdx.utils.BufferUtils -> com.badlogic.gdx.utils.BufferUtils:
    com.badlogic.gdx.utils.Array unsafeBuffers -> a
    int allocatedUnsafe -> b
    void copy$154271e7(float[],java.nio.Buffer,int) -> a
    void copy$923abf1(byte[],java.nio.Buffer,int) -> a
    void copy(java.nio.Buffer,java.nio.Buffer,int) -> a
    int positionInBytes(java.nio.Buffer) -> a
    int bytesToElements(java.nio.Buffer,int) -> a
    java.nio.FloatBuffer newFloatBuffer$70db3ee3() -> a
    java.nio.ByteBuffer newByteBuffer(int) -> a
    java.nio.IntBuffer newIntBuffer(int) -> b
    void disposeUnsafeByteBuffer(java.nio.ByteBuffer) -> a
    java.nio.ByteBuffer newUnsafeByteBuffer(int) -> c
    void freeMemory(java.nio.ByteBuffer) -> freeMemory
    java.nio.ByteBuffer newDisposableByteBuffer(int) -> newDisposableByteBuffer
    void copyJni(float[],java.nio.Buffer,int,int) -> copyJni
    void copyJni(byte[],int,java.nio.Buffer,int,int) -> copyJni
    void copyJni(java.nio.Buffer,int,java.nio.Buffer,int,int) -> copyJni
com.badlogic.gdx.utils.Clipboard -> com.badlogic.gdx.utils.f:
com.badlogic.gdx.utils.Disposable -> com.badlogic.gdx.utils.g:
    void dispose() -> dispose
com.badlogic.gdx.utils.FloatArray -> com.badlogic.gdx.utils.h:
    float[] items -> a
    int size -> b
    boolean ordered -> c
    void add(float) -> a
    void addAll$1cc109a0(float[],int) -> a
    float get(int) -> a
    float[] resize(int) -> b
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.badlogic.gdx.utils.GdxNativesLoader -> com.badlogic.gdx.utils.i:
    boolean disableNativesLoading -> a
    boolean nativesLoaded -> b
    void load() -> a
com.badlogic.gdx.utils.GdxRuntimeException -> com.badlogic.gdx.utils.j:
com.badlogic.gdx.utils.IntArray -> com.badlogic.gdx.utils.k:
    int[] items -> a
    int size -> b
    boolean ordered -> c
    void add(int) -> a
    int pop() -> a
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.badlogic.gdx.utils.IntMap -> com.badlogic.gdx.utils.l:
    int size -> a
    int[] keyTable -> b
    java.lang.Object[] valueTable -> c
    int capacity -> d
    int stashSize -> e
    java.lang.Object zeroValue -> f
    boolean hasZeroValue -> g
    float loadFactor -> h
    int hashShift -> i
    int mask -> j
    int threshold -> k
    int stashCapacity -> l
    int pushIterations -> m
    java.lang.Object put(int,java.lang.Object) -> a
    void push(int,java.lang.Object,int,int,int,int,int,int) -> a
    java.lang.Object remove(int) -> a
    boolean containsKey(int) -> b
    void resize(int) -> c
    int hash2(int) -> d
    int hash3(int) -> e
    java.lang.String toString() -> toString
com.badlogic.gdx.utils.Logger -> com.badlogic.gdx.utils.m:
    java.lang.String tag -> a
    int level -> b
    void debug(java.lang.String) -> a
    void info(java.lang.String) -> b
    void error(java.lang.String,java.lang.Throwable) -> a
    int getLevel() -> a
com.badlogic.gdx.utils.LongMap -> com.badlogic.gdx.utils.n:
    int size -> a
    long[] keyTable -> b
    java.lang.Object[] valueTable -> c
    int capacity -> d
    int stashSize -> e
    java.lang.Object zeroValue -> f
    boolean hasZeroValue -> g
    float loadFactor -> h
    int hashShift -> i
    int mask -> j
    int threshold -> k
    int stashCapacity -> l
    int pushIterations -> m
    com.badlogic.gdx.utils.LongMap$Values values1 -> n
    com.badlogic.gdx.utils.LongMap$Values values2 -> o
    java.lang.Object put(long,java.lang.Object) -> a
    void push(long,java.lang.Object,int,long,int,long,int,long) -> a
    java.lang.Object get(long) -> a
    java.lang.Object remove(long) -> b
    void removeStashIndex(int) -> a
    void resize(int) -> b
    int hash2(long) -> c
    int hash3(long) -> d
    java.lang.String toString() -> toString
    com.badlogic.gdx.utils.LongMap$Values values() -> a
com.badlogic.gdx.utils.LongMap$MapIterator -> com.badlogic.gdx.utils.o:
    boolean hasNext -> a
    com.badlogic.gdx.utils.LongMap map -> b
    int nextIndex -> c
    int currentIndex -> d
    boolean valid -> e
    void reset() -> a
    void findNextIndex() -> b
    void remove() -> remove
com.badlogic.gdx.utils.LongMap$Values -> com.badlogic.gdx.utils.p:
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    java.util.Iterator iterator() -> iterator
    void remove() -> remove
    void reset() -> a
com.badlogic.gdx.utils.NumberUtils -> com.badlogic.gdx.utils.q:
    boolean intToFloatColorMask -> a
    int floatToIntBits(float) -> a
    float intToFloatColor(int) -> a
com.badlogic.gdx.utils.ObjectIntMap -> com.badlogic.gdx.utils.r:
    int size -> a
    java.lang.Object[] keyTable -> b
    int[] valueTable -> c
    int capacity -> d
    int stashSize -> e
    float loadFactor -> f
    int hashShift -> g
    int mask -> h
    int threshold -> i
    int stashCapacity -> j
    int pushIterations -> k
    void put(java.lang.Object,int) -> a
    void push(java.lang.Object,int,int,java.lang.Object,int,java.lang.Object,int,java.lang.Object) -> a
    int get(java.lang.Object,int) -> b
    void clear() -> a
    void resize(int) -> a
    int hash2(int) -> b
    int hash3(int) -> c
    java.lang.String toString() -> toString
com.badlogic.gdx.utils.ObjectMap -> com.badlogic.gdx.utils.s:
    int size -> a
    java.lang.Object[] keyTable -> b
    java.lang.Object[] valueTable -> c
    int capacity -> d
    int stashSize -> e
    float loadFactor -> f
    int hashShift -> g
    int mask -> h
    int threshold -> i
    int stashCapacity -> j
    int pushIterations -> k
    com.badlogic.gdx.utils.ObjectMap$Entries entries1 -> l
    com.badlogic.gdx.utils.ObjectMap$Entries entries2 -> m
    com.badlogic.gdx.utils.ObjectMap$Keys keys1 -> n
    com.badlogic.gdx.utils.ObjectMap$Keys keys2 -> o
    java.lang.Object put(java.lang.Object,java.lang.Object) -> a
    java.lang.Object put_internal(java.lang.Object,java.lang.Object) -> b
    void push(java.lang.Object,java.lang.Object,int,java.lang.Object,int,java.lang.Object,int,java.lang.Object) -> a
    java.lang.Object get(java.lang.Object) -> a
    java.lang.Object remove(java.lang.Object) -> b
    void removeStashIndex(int) -> a
    void clear() -> a
    boolean containsKey(java.lang.Object) -> c
    void resize(int) -> b
    int hash2(int) -> c
    int hash3(int) -> d
    java.lang.String toString() -> toString
    com.badlogic.gdx.utils.ObjectMap$Entries entries() -> b
    com.badlogic.gdx.utils.ObjectMap$Keys keys() -> c
com.badlogic.gdx.utils.ObjectMap$Entries -> com.badlogic.gdx.utils.t:
    com.badlogic.gdx.utils.ObjectMap$Entry entry -> a
    com.badlogic.gdx.utils.ObjectMap$Entry next() -> a
    boolean hasNext() -> hasNext
    java.util.Iterator iterator() -> iterator
    void remove() -> remove
    void reset() -> b
    java.lang.Object next() -> next
com.badlogic.gdx.utils.ObjectMap$Entry -> com.badlogic.gdx.utils.u:
    java.lang.Object key -> a
    java.lang.Object value -> b
    java.lang.String toString() -> toString
com.badlogic.gdx.utils.ObjectMap$Keys -> com.badlogic.gdx.utils.v:
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    java.util.Iterator iterator() -> iterator
    com.badlogic.gdx.utils.Array toArray() -> a
    void remove() -> remove
    void reset() -> b
com.badlogic.gdx.utils.ObjectMap$MapIterator -> com.badlogic.gdx.utils.w:
    boolean hasNext -> b
    com.badlogic.gdx.utils.ObjectMap map -> c
    int nextIndex -> d
    int currentIndex -> e
    boolean valid -> f
    void reset() -> b
    void advance() -> c
    void remove() -> remove
com.badlogic.gdx.utils.OrderedMap -> com.badlogic.gdx.utils.x:
    com.badlogic.gdx.utils.Array keys -> f
    java.lang.Object put(java.lang.Object,java.lang.Object) -> a
    java.lang.Object remove(java.lang.Object) -> b
    void clear() -> a
    com.badlogic.gdx.utils.ObjectMap$Entries entries() -> b
    com.badlogic.gdx.utils.ObjectMap$Keys keys() -> c
    java.lang.String toString() -> toString
com.badlogic.gdx.utils.OrderedMap$1 -> com.badlogic.gdx.utils.y:
    com.badlogic.gdx.utils.OrderedMap this$0 -> g
    void advance() -> c
    com.badlogic.gdx.utils.ObjectMap$Entry next() -> a
    void remove() -> remove
    java.lang.Object next() -> next
com.badlogic.gdx.utils.OrderedMap$2 -> com.badlogic.gdx.utils.z:
    com.badlogic.gdx.utils.OrderedMap this$0 -> a
    void advance() -> c
    java.lang.Object next() -> next
    void remove() -> remove
com.badlogic.gdx.utils.Pool -> com.badlogic.gdx.utils.aa:
    int max -> max
    int peak -> peak
    com.badlogic.gdx.utils.Array freeObjects -> freeObjects
    java.lang.Object newObject() -> newObject
    java.lang.Object obtain() -> obtain
    void free(java.lang.Object) -> free
    void freeAll(com.badlogic.gdx.utils.Array) -> freeAll
    void clear() -> clear
    int getFree() -> getFree
com.badlogic.gdx.utils.Pool$Poolable -> com.badlogic.gdx.utils.ab:
    void reset() -> a
com.badlogic.gdx.utils.SharedLibraryLoader -> com.badlogic.gdx.utils.ac:
    boolean isWindows -> a
    boolean isLinux -> b
    boolean isMac -> c
    boolean isIos -> d
    boolean isAndroid -> e
    boolean is64Bit -> f
    java.util.HashSet loadedLibraries -> g
    java.lang.String nativesJar -> h
    java.lang.String crc(java.io.InputStream) -> a
    void load(java.lang.String) -> a
    java.io.InputStream readFile(java.lang.String) -> b
    java.io.File extractFile$7a2fde5c(java.lang.String) -> c
com.badlogic.gdx.utils.ShortArray -> com.badlogic.gdx.utils.ad:
    short[] items -> a
    int size -> b
    boolean ordered -> c
    void add(short) -> a
    short[] ensureCapacity(int) -> a
    short[] resize(int) -> b
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.badlogic.gdx.utils.Sort -> com.badlogic.gdx.utils.ae:
    com.badlogic.gdx.utils.Sort instance -> a
    com.badlogic.gdx.utils.TimSort timSort -> b
    void sort$6fa18035(java.lang.Object[],java.util.Comparator,int) -> a
    com.badlogic.gdx.utils.Sort instance() -> a
com.badlogic.gdx.utils.StreamUtils -> com.badlogic.gdx.utils.af:
    void copyStream$1ade3353(java.io.InputStream,java.io.OutputStream) -> a
com.badlogic.gdx.utils.StringBuilder -> com.badlogic.gdx.utils.ag:
    char[] chars -> a
    int length -> b
    char[] digits -> c
    void enlargeBuffer(int) -> b
    void appendNull() -> a
    void append0(char) -> b
    void append0(java.lang.String) -> b
    char charAt(int) -> charAt
    int length() -> length
    java.lang.String toString() -> toString
    java.lang.CharSequence subSequence(int,int) -> subSequence
    com.badlogic.gdx.utils.StringBuilder append(char) -> a
    com.badlogic.gdx.utils.StringBuilder append(int) -> a
    com.badlogic.gdx.utils.StringBuilder append(long) -> a
    com.badlogic.gdx.utils.StringBuilder append(float) -> a
    com.badlogic.gdx.utils.StringBuilder append(java.lang.Object) -> a
    com.badlogic.gdx.utils.StringBuilder append(java.lang.String) -> a
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Appendable append(char) -> append
    java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    java.lang.Appendable append(java.lang.CharSequence) -> append
com.badlogic.gdx.utils.TimSort -> com.badlogic.gdx.utils.ah:
    java.lang.Object[] a -> a
    java.util.Comparator c -> b
    int minGallop -> c
    java.lang.Object[] tmp -> d
    int tmpCount -> e
    int stackSize -> f
    int[] runBase -> g
    int[] runLen -> h
    void doSort(java.lang.Object[],java.util.Comparator,int,int) -> a
    void binarySort(java.lang.Object[],int,int,int,java.util.Comparator) -> a
    int countRunAndMakeAscending(java.lang.Object[],int,int,java.util.Comparator) -> a
    int minRunLength(int) -> a
    void mergeCollapse() -> a
    void mergeForceCollapse() -> b
    void mergeAt(int) -> b
    int gallopLeft(java.lang.Object,java.lang.Object[],int,int,int,java.util.Comparator) -> a
    int gallopRight(java.lang.Object,java.lang.Object[],int,int,int,java.util.Comparator) -> b
    void mergeHi(int,int,int,int) -> a
    java.lang.Object[] ensureCapacity(int) -> c
com.badlogic.gdx.utils.async.AsyncExecutor -> com.badlogic.gdx.utils.a.a:
    java.util.concurrent.ExecutorService executor -> a
    com.badlogic.gdx.utils.async.AsyncResult submit(com.badlogic.gdx.utils.async.AsyncTask) -> a
    void dispose() -> dispose
com.badlogic.gdx.utils.async.AsyncExecutor$2 -> com.badlogic.gdx.utils.a.b:
    com.badlogic.gdx.utils.async.AsyncTask val$task -> a
    com.badlogic.gdx.utils.async.AsyncExecutor this$0 -> b
    java.lang.Object call() -> call
com.badlogic.gdx.utils.async.AsyncResult -> com.badlogic.gdx.utils.a.c:
    java.util.concurrent.Future future -> a
    boolean isDone() -> a
    java.lang.Object get() -> b
com.badlogic.gdx.utils.async.AsyncTask -> com.badlogic.gdx.utils.a.d:
    java.lang.Object call() -> b
com.chickenbellyfinn.ubertube.AndroidPlatformLayer -> com.chickenbellyfinn.ubertube.a:
    android.content.Context context -> a
    int getPrefInt(java.lang.String) -> a
    void putPrefInt(java.lang.String,int) -> a
com.chickenbellyfinn.ubertube.Block -> com.chickenbellyfinn.ubertube.b:
    com.badlogic.gdx.graphics.Color[] COLORS -> l
    float startingAngle -> g
    float x -> h
    float y -> i
    float z -> j
    java.util.HashMap blockModels -> m
    com.badlogic.gdx.graphics.Color color -> k
    com.badlogic.gdx.graphics.g3d.Model getModel(int,float,float,float) -> a
com.chickenbellyfinn.ubertube.BlockRing -> com.chickenbellyfinn.ubertube.c:
    java.lang.String TAG -> b
    java.util.ArrayList _blocks -> c
    float dAngle -> d
    float rot -> e
    float Z -> a
    int n -> f
    void update(float,float,float) -> a
    com.chickenbellyfinn.ubertube.Block getBounce(float) -> a
    void render(com.badlogic.gdx.graphics.g3d.ModelBatch,com.badlogic.gdx.graphics.g3d.lights.Lights) -> a
com.chickenbellyfinn.ubertube.GameScreen -> com.chickenbellyfinn.ubertube.d:
    java.lang.String TAG -> b
    float FOV -> c
    float STARTING_DISTANCE -> d
    float DEADIMATION_TIME -> e
    float SPEED -> f
    float ANGLE_ACCEL -> g
    float ANGLE_FRICTION -> h
    float MAX_ANGLE_SPEED -> i
    float MIN_ANGLE_SPEED -> j
    float BOOST_ACCEL -> k
    float BASE_MULTIPLIER_PER_SECOND -> l
    float MAX_ENERGY -> m
    float MIN_ENERGY -> n
    float ENERGY_PER_POINT -> o
    float ENERGYBLOCK_WIDTH -> p
    float ENERGYBLOCK_SIDE -> q
    float ENERGYBLOCK_Y -> r
    float ENERGYBLOCK_Z -> s
    com.chickenbellyfinn.ubertube.UberTubeGame _game -> t
    int W -> u
    int H -> v
    com.badlogic.gdx.graphics.g3d.ModelBatch _modelBatch -> w
    com.badlogic.gdx.graphics.g2d.SpriteBatch _spriteBatch -> x
    com.badlogic.gdx.graphics.g3d.ModelInstance _gameOver -> y
    com.badlogic.gdx.graphics.g3d.ModelInstance energyBlock -> z
    com.chickenbellyfinn.ubertube.Tube _tube -> A
    com.chickenbellyfinn.ubertube.Starfield _starField -> B
    com.badlogic.gdx.graphics.OrthographicCamera _camera2 -> C
    com.badlogic.gdx.graphics.PerspectiveCamera _camera3 -> D
    com.badlogic.gdx.graphics.g3d.lights.Lights _lights -> E
    com.badlogic.gdx.graphics.g3d.lights.DirectionalLight _dLight -> F
    com.badlogic.gdx.graphics.g3d.lights.Lights _titleLights -> G
    com.badlogic.gdx.graphics.g3d.lights.PointLight _titlePointLight -> H
    com.badlogic.gdx.graphics.g3d.lights.DirectionalLight _titleDLight -> I
    com.badlogic.gdx.graphics.FPSLogger _fps -> J
    float _y -> K
    float _z -> L
    float _angleVelo -> M
    float _angle -> N
    float _speedBoostMultiplier -> O
    boolean _boostable -> P
    float _elapsed -> Q
    float _scoreMultiplier -> R
    float _score -> S
    com.badlogic.gdx.graphics.Color _lastBounceColor -> T
    float _baseMultiplier -> U
    float _deathTime -> V
    float _deathEnergy -> W
    java.lang.String _scoreString -> X
    boolean _deadComplete -> Y
    boolean _isDead -> Z
    float _cameraRotX -> aa
    float _dRotX -> ab
    float _energy -> ac
    float lastDY -> a
    void render(float) -> a
    void setEnergyColor(com.badlogic.gdx.graphics.Color) -> a
    void resume() -> a
    boolean touchUp$3b4dfe47(int,int) -> a
com.chickenbellyfinn.ubertube.MainActivity -> com.chickenbellyfinn.ubertube.MainActivity:
    void onCreate(android.os.Bundle) -> onCreate
com.chickenbellyfinn.ubertube.MainMenuScreen -> com.chickenbellyfinn.ubertube.e:
    java.lang.String TAG -> a
    float FOV -> b
    float STARTING_DISTANCE -> c
    float DISTANCE -> d
    float MENU_X -> e
    float MENU_Z -> f
    float PLAY_Y -> g
    float SCORE_Y -> h
    float SPEED -> i
    float ACCEL -> j
    com.chickenbellyfinn.ubertube.UberTubeGame _game -> k
    int W -> l
    int H -> m
    com.badlogic.gdx.graphics.OrthographicCamera _camera2 -> n
    com.badlogic.gdx.graphics.PerspectiveCamera _camera3 -> o
    float zoomSpeed -> p
    com.badlogic.gdx.graphics.g3d.lights.Lights _menuLights -> q
    com.badlogic.gdx.graphics.g3d.lights.PointLight _menuPointLight -> r
    com.badlogic.gdx.graphics.g3d.lights.Lights _lights -> s
    com.badlogic.gdx.graphics.g3d.lights.DirectionalLight _menuDLight -> t
    com.badlogic.gdx.graphics.g3d.lights.PointLight _pLight -> u
    com.badlogic.gdx.graphics.g3d.ModelInstance _title -> v
    com.badlogic.gdx.graphics.g3d.ModelInstance _play -> w
    com.badlogic.gdx.math.collision.BoundingBox _playBox -> x
    com.badlogic.gdx.graphics.g3d.ModelInstance _scores -> y
    com.badlogic.gdx.math.collision.BoundingBox _scoreBox -> z
    com.badlogic.gdx.graphics.g3d.ModelInstance _selection -> A
    com.chickenbellyfinn.ubertube.Starfield _stars -> B
    com.badlogic.gdx.graphics.g3d.ModelBatch _modelBatch -> C
    com.chickenbellyfinn.ubertube.Tube _tube -> D
    float z -> E
    float elapsed -> F
    float endStartTime -> G
    com.badlogic.gdx.graphics.g2d.SpriteBatch _spriteBatch -> H
    java.lang.String highscore -> I
    void render(float) -> a
    void resume() -> a
    boolean touchUp$3b4dfe47(int,int) -> a
com.chickenbellyfinn.ubertube.PlatformLayer -> com.chickenbellyfinn.ubertube.f:
    int getPrefInt(java.lang.String) -> a
    void putPrefInt(java.lang.String,int) -> a
com.chickenbellyfinn.ubertube.Resources -> com.chickenbellyfinn.ubertube.g:
    java.lang.String TAG -> g
    com.badlogic.gdx.graphics.g3d.Model titleTextModel -> a
    com.badlogic.gdx.graphics.g3d.Model playTextModel -> b
    com.badlogic.gdx.graphics.g3d.Model scoresTextModel -> c
    com.badlogic.gdx.graphics.g3d.Model gameoverTextModel -> d
    com.badlogic.gdx.graphics.g2d.BitmapFont font -> e
    float fontMargin -> f
    void load() -> a
com.chickenbellyfinn.ubertube.Starfield -> com.chickenbellyfinn.ubertube.h:
    java.lang.String TAG -> a
    java.nio.FloatBuffer vertexBuffer -> b
    int _count -> c
    float[] _stars -> d
    float _angle -> e
    void update$483d242b(float,float) -> a
    void render(com.badlogic.gdx.graphics.Camera) -> a
com.chickenbellyfinn.ubertube.Tube -> com.chickenbellyfinn.ubertube.i:
    java.lang.String TAG -> b
    int MIN_BLOCKS -> c
    int MAX_BLOCKS -> d
    float HOLES -> e
    float RING_DISTANCE -> f
    java.util.ArrayList _rings -> g
    float z -> h
    float length -> a
    int ringCount -> i
    void update(float,float,float,boolean) -> a
    com.chickenbellyfinn.ubertube.Block bounce$462c1a03(float,float) -> a
    void render(com.badlogic.gdx.graphics.g3d.ModelBatch,com.badlogic.gdx.graphics.g3d.lights.Lights) -> a
com.chickenbellyfinn.ubertube.UberTubeGame -> com.chickenbellyfinn.ubertube.j:
    java.lang.String TAG -> a
    com.chickenbellyfinn.ubertube.PlatformLayer _platform -> b
    void create() -> a
    void dispose() -> f
    void render() -> c
    int getHighscore() -> h
    java.lang.String submitScore(int) -> a
    void resize$255f295() -> b
    void pause() -> d
    void resume() -> e
