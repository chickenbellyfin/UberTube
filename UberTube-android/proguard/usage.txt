com.badlogic.gdx.Application:
    public static final int LOG_NONE
    public static final int LOG_DEBUG
    public static final int LOG_INFO
    public static final int LOG_ERROR
    public abstract com.badlogic.gdx.ApplicationListener getApplicationListener()
    public abstract com.badlogic.gdx.Audio getAudio()
    public abstract com.badlogic.gdx.Input getInput()
    public abstract com.badlogic.gdx.Files getFiles()
    public abstract com.badlogic.gdx.Net getNet()
    public abstract void log(java.lang.String,java.lang.String,java.lang.Exception)
    public abstract void error(java.lang.String,java.lang.String)
    public abstract void debug(java.lang.String,java.lang.String,java.lang.Throwable)
    public abstract void setLogLevel(int)
    public abstract int getVersion()
    public abstract long getJavaHeap()
    public abstract long getNativeHeap()
    public abstract com.badlogic.gdx.Preferences getPreferences(java.lang.String)
    public abstract com.badlogic.gdx.utils.Clipboard getClipboard()
    public abstract void exit()
    public abstract void addLifecycleListener(com.badlogic.gdx.LifecycleListener)
    public abstract void removeLifecycleListener(com.badlogic.gdx.LifecycleListener)
com.badlogic.gdx.ApplicationAdapter
com.badlogic.gdx.Audio:
    public abstract com.badlogic.gdx.audio.AudioDevice newAudioDevice(int,boolean)
    public abstract com.badlogic.gdx.audio.AudioRecorder newAudioRecorder(int,boolean)
    public abstract com.badlogic.gdx.audio.Sound newSound(com.badlogic.gdx.files.FileHandle)
    public abstract com.badlogic.gdx.audio.Music newMusic(com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.Files:
    public abstract com.badlogic.gdx.files.FileHandle external(java.lang.String)
    public abstract com.badlogic.gdx.files.FileHandle absolute(java.lang.String)
    public abstract com.badlogic.gdx.files.FileHandle local(java.lang.String)
    public abstract boolean isExternalStorageAvailable()
    public abstract java.lang.String getLocalStoragePath()
    public abstract boolean isLocalStorageAvailable()
com.badlogic.gdx.Gdx:
    34:34:public Gdx()
com.badlogic.gdx.Graphics:
    public abstract boolean isGL11Available()
    public abstract com.badlogic.gdx.graphics.GLCommon getGLCommon()
    public abstract float getRawDeltaTime()
    public abstract int getFramesPerSecond()
    public abstract com.badlogic.gdx.Graphics$GraphicsType getType()
    public abstract float getPpiX()
    public abstract float getPpiY()
    public abstract float getPpcX()
    public abstract float getPpcY()
    public abstract float getDensity()
    public abstract boolean supportsDisplayModeChange()
    public abstract com.badlogic.gdx.Graphics$DisplayMode[] getDisplayModes()
    public abstract boolean setDisplayMode(com.badlogic.gdx.Graphics$DisplayMode)
    public abstract boolean setDisplayMode(int,int,boolean)
    public abstract void setTitle(java.lang.String)
    public abstract void setVSync(boolean)
    public abstract com.badlogic.gdx.Graphics$BufferFormat getBufferFormat()
    public abstract void setContinuousRendering(boolean)
    public abstract boolean isContinuousRendering()
    public abstract boolean isFullscreen()
com.badlogic.gdx.Input:
    public abstract float getAccelerometerZ()
    public abstract int getX(int)
    public abstract int getDeltaX()
    public abstract int getDeltaX(int)
    public abstract int getY(int)
    public abstract int getDeltaY()
    public abstract int getDeltaY(int)
    public abstract boolean justTouched()
    public abstract boolean isTouched(int)
    public abstract boolean isButtonPressed(int)
    public abstract boolean isKeyPressed(int)
    public abstract void getTextInput(com.badlogic.gdx.Input$TextInputListener,java.lang.String,java.lang.String)
    public abstract void getPlaceholderTextInput(com.badlogic.gdx.Input$TextInputListener,java.lang.String,java.lang.String)
    public abstract void setOnscreenKeyboardVisible(boolean)
    public abstract void vibrate(int)
    public abstract void vibrate(long[],int)
    public abstract void cancelVibrate()
    public abstract float getAzimuth()
    public abstract float getPitch()
    public abstract float getRoll()
    public abstract void getRotationMatrix(float[])
    public abstract long getCurrentEventTime()
    public abstract void setCatchBackKey(boolean)
    public abstract void setCatchMenuKey(boolean)
    public abstract com.badlogic.gdx.InputProcessor getInputProcessor()
    public abstract int getRotation()
    public abstract com.badlogic.gdx.Input$Orientation getNativeOrientation()
    public abstract void setCursorCatched(boolean)
    public abstract boolean isCursorCatched()
    public abstract void setCursorPosition(int,int)
com.badlogic.gdx.Input$Buttons
com.badlogic.gdx.Input$Keys
com.badlogic.gdx.InputAdapter
com.badlogic.gdx.InputMultiplexer
com.badlogic.gdx.InputProcessor:
    public abstract boolean mouseMoved(int,int)
    public abstract boolean scrolled(int)
com.badlogic.gdx.InputProcessorQueue
com.badlogic.gdx.Net:
    public abstract void sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener)
    public abstract com.badlogic.gdx.net.ServerSocket newServerSocket(com.badlogic.gdx.Net$Protocol,int,com.badlogic.gdx.net.ServerSocketHints)
    public abstract com.badlogic.gdx.net.Socket newClientSocket(com.badlogic.gdx.Net$Protocol,java.lang.String,int,com.badlogic.gdx.net.SocketHints)
    public abstract void openURI(java.lang.String)
com.badlogic.gdx.Net$HttpMethods
com.badlogic.gdx.Net$HttpRequest:
    private long contentLength
    148:151:public Net$HttpRequest(java.lang.String)
    156:157:public void setUrl(java.lang.String)
    164:165:public void setHeader(java.lang.String,java.lang.String)
    172:173:public void setContent(java.lang.String)
    178:180:public void setContent(java.io.InputStream,long)
    186:187:public void setTimeOut(int)
    217:217:public long getContentLength()
com.badlogic.gdx.Net$HttpResponse:
    public abstract byte[] getResult()
    public abstract java.lang.String getResultAsString()
    public abstract java.io.InputStream getResultAsStream()
    public abstract com.badlogic.gdx.net.HttpStatus getStatus()
    public abstract java.lang.String getHeader(java.lang.String)
    public abstract java.util.Map getHeaders()
com.badlogic.gdx.Preferences:
    public abstract void putBoolean(java.lang.String,boolean)
    public abstract void putInteger(java.lang.String,int)
    public abstract void putLong(java.lang.String,long)
    public abstract void putFloat(java.lang.String,float)
    public abstract void putString(java.lang.String,java.lang.String)
    public abstract void put(java.util.Map)
    public abstract boolean getBoolean(java.lang.String)
    public abstract int getInteger(java.lang.String)
    public abstract long getLong(java.lang.String)
    public abstract float getFloat(java.lang.String)
    public abstract java.lang.String getString(java.lang.String)
    public abstract boolean getBoolean(java.lang.String,boolean)
    public abstract int getInteger(java.lang.String,int)
    public abstract long getLong(java.lang.String,long)
    public abstract float getFloat(java.lang.String,float)
    public abstract java.lang.String getString(java.lang.String,java.lang.String)
    public abstract java.util.Map get()
    public abstract boolean contains(java.lang.String)
    public abstract void clear()
    public abstract void remove(java.lang.String)
    public abstract void flush()
com.badlogic.gdx.Version
com.badlogic.gdx.assets.AssetManager:
    80:81:public AssetManager()
    84:96:public AssetManager(com.badlogic.gdx.assets.loaders.FileHandleResolver)
    101:108:public synchronized java.lang.Object get(java.lang.String)
    189:195:public synchronized boolean containsAsset(java.lang.Object)
    221:225:public synchronized boolean isLoaded(java.lang.String,java.lang.Class)
    232:232:public com.badlogic.gdx.assets.loaders.AssetLoader getLoader(java.lang.Class)
    259:260:public synchronized void load(java.lang.String,java.lang.Class)
    310:311:public synchronized void load(com.badlogic.gdx.assets.AssetDescriptor)
    316:326:private void disposeDependencies(java.lang.String)
    352:357:public synchronized boolean update(int)
    516:517:public synchronized void setLoader(java.lang.Class,com.badlogic.gdx.assets.loaders.AssetLoader)
    525:531:public synchronized void setLoader(java.lang.Class,java.lang.String,com.badlogic.gdx.assets.loaders.AssetLoader)
    535:535:public synchronized int getLoadedAssets()
    540:540:public synchronized int getQueuedAssets()
    545:546:public synchronized float getProgress()
    552:553:public synchronized void setErrorListener(com.badlogic.gdx.assets.AssetErrorListener)
    606:606:public com.badlogic.gdx.utils.Logger getLogger()
    627:651:public synchronized java.lang.String getDiagnostics()
    656:656:public synchronized com.badlogic.gdx.utils.Array getAssetNames()
    661:661:public synchronized com.badlogic.gdx.utils.Array getDependencies(java.lang.String)
    666:666:public synchronized java.lang.Class getAssetType(java.lang.String)
com.badlogic.gdx.assets.RefCountedContainer:
    49:50:public void setObject(java.lang.Object)
com.badlogic.gdx.assets.loaders.BitmapFontLoader
com.badlogic.gdx.assets.loaders.BitmapFontLoader$BitmapFontParameter
com.badlogic.gdx.assets.loaders.ModelLoader:
    31:31:public com.badlogic.gdx.graphics.g3d.model.data.ModelData loadModelData(com.badlogic.gdx.files.FileHandle)
    42:42:public com.badlogic.gdx.graphics.g3d.Model loadModel(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters)
    47:47:public com.badlogic.gdx.graphics.g3d.Model loadModel(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.utils.TextureProvider)
com.badlogic.gdx.assets.loaders.MusicLoader
com.badlogic.gdx.assets.loaders.MusicLoader$MusicParameter
com.badlogic.gdx.assets.loaders.PixmapLoader
com.badlogic.gdx.assets.loaders.PixmapLoader$PixmapParameter
com.badlogic.gdx.assets.loaders.SkinLoader
com.badlogic.gdx.assets.loaders.SkinLoader$SkinParameter
com.badlogic.gdx.assets.loaders.SoundLoader
com.badlogic.gdx.assets.loaders.SoundLoader$SoundParameter
com.badlogic.gdx.assets.loaders.SynchronousAssetLoader:
    24:25:public SynchronousAssetLoader(com.badlogic.gdx.assets.loaders.FileHandleResolver)
com.badlogic.gdx.assets.loaders.TextureAtlasLoader
com.badlogic.gdx.assets.loaders.TextureAtlasLoader$TextureAtlasParameter
com.badlogic.gdx.assets.loaders.TextureLoader:
    50:51:public TextureLoader(com.badlogic.gdx.assets.loaders.FileHandleResolver)
com.badlogic.gdx.assets.loaders.TextureLoader$TextureLoaderInfo:
    42:42:public TextureLoader$TextureLoaderInfo()
com.badlogic.gdx.assets.loaders.resolvers.ExternalFileHandleResolver
com.badlogic.gdx.assets.loaders.resolvers.InternalFileHandleResolver
com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver
com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver$Resolution
com.badlogic.gdx.audio.AudioDevice:
    public abstract boolean isMono()
    public abstract void writeSamples(short[],int,int)
    public abstract void writeSamples(float[],int,int)
    public abstract int getLatency()
    public abstract void dispose()
    public abstract void setVolume(float)
com.badlogic.gdx.audio.AudioRecorder:
    public abstract void read(short[],int,int)
    public abstract void dispose()
com.badlogic.gdx.audio.Music:
    public abstract void play()
    public abstract void pause()
    public abstract void stop()
    public abstract boolean isPlaying()
    public abstract void setLooping(boolean)
    public abstract boolean isLooping()
    public abstract void setVolume(float)
    public abstract float getVolume()
    public abstract void setPan(float,float)
    public abstract float getPosition()
    public abstract void dispose()
    public abstract void setOnCompletionListener(com.badlogic.gdx.audio.Music$OnCompletionListener)
com.badlogic.gdx.audio.Sound:
    public abstract long play()
    public abstract long play(float)
    public abstract long play(float,float,float)
    public abstract long loop()
    public abstract long loop(float)
    public abstract long loop(float,float,float)
    public abstract void stop()
    public abstract void pause()
    public abstract void resume()
    public abstract void dispose()
    public abstract void stop(long)
    public abstract void pause(long)
    public abstract void resume(long)
    public abstract void setLooping(long,boolean)
    public abstract void setPitch(long,float)
    public abstract void setVolume(long,float)
    public abstract void setPan(long,float,float)
    public abstract void setPriority(long,int)
com.badlogic.gdx.files.FileHandleStream
com.badlogic.gdx.files.package-info
com.badlogic.gdx.graphics.Camera:
    public abstract void update()
    public abstract void update(boolean)
    96:98:public void lookAt(com.badlogic.gdx.math.Vector3)
    125:127:public void rotate(com.badlogic.gdx.math.Vector3,float)
    134:136:public void rotate(com.badlogic.gdx.math.Matrix4)
    143:145:public void rotate(com.badlogic.gdx.math.Quaternion)
    154:160:public void rotateAround(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float)
    166:168:public void transform(com.badlogic.gdx.math.Matrix4)
    181:182:public void translate(com.badlogic.gdx.math.Vector3)
    215:216:public void unproject(com.badlogic.gdx.math.Vector3)
    224:225:public void project(com.badlogic.gdx.math.Vector3)
    240:244:public void project(com.badlogic.gdx.math.Vector3,float,float,float,float)
com.badlogic.gdx.graphics.Color:
    51:53:public Color(int)
    92:96:public com.badlogic.gdx.graphics.Color mul(com.badlogic.gdx.graphics.Color)
    104:108:public com.badlogic.gdx.graphics.Color mul(float)
    116:120:public com.badlogic.gdx.graphics.Color add(com.badlogic.gdx.graphics.Color)
    128:132:public com.badlogic.gdx.graphics.Color sub(com.badlogic.gdx.graphics.Color)
    167:168:public com.badlogic.gdx.graphics.Color set(int)
    173:177:public com.badlogic.gdx.graphics.Color add(float,float,float,float)
    182:186:public com.badlogic.gdx.graphics.Color sub(float,float,float,float)
    191:195:public com.badlogic.gdx.graphics.Color mul(float,float,float,float)
    204:208:public com.badlogic.gdx.graphics.Color lerp(com.badlogic.gdx.graphics.Color,float)
    220:224:public com.badlogic.gdx.graphics.Color lerp(float,float,float,float,float)
    287:289:public static float toFloatBits(int,int,int,int)
    296:297:public static float toFloatBits(float,float,float,float)
    308:308:public static int toIntBits(int,int,int,int)
    312:312:public static int alpha(float)
    316:316:public static int luminanceAlpha(float,float)
    320:320:public static int rgb565(float,float,float)
    324:324:public static int rgba4444(float,float,float,float)
    328:328:public static int rgb888(float,float,float)
    336:336:public static int rgb565(com.badlogic.gdx.graphics.Color)
    340:340:public static int rgba4444(com.badlogic.gdx.graphics.Color)
    344:344:public static int rgb888(com.badlogic.gdx.graphics.Color)
    348:348:public static int rgba8888(com.badlogic.gdx.graphics.Color)
    357:360:public static void rgb565ToColor(com.badlogic.gdx.graphics.Color,int)
    368:372:public static void rgba4444ToColor(com.badlogic.gdx.graphics.Color,int)
    380:383:public static void rgb888ToColor(com.badlogic.gdx.graphics.Color,int)
    391:395:public static void rgba8888ToColor(com.badlogic.gdx.graphics.Color,int)
    401:401:public com.badlogic.gdx.graphics.Color tmp()
    406:406:public com.badlogic.gdx.graphics.Color cpy()
com.badlogic.gdx.graphics.FPSLogger:
    34:38:public void log()
com.badlogic.gdx.graphics.GL10:
    public static final int GL_OES_VERSION_1_0
    public static final int GL_OES_read_format
    public static final int GL_OES_compressed_paletted_texture
    public static final int GL_DEPTH_BUFFER_BIT
    public static final int GL_STENCIL_BUFFER_BIT
    public static final int GL_COLOR_BUFFER_BIT
    public static final int GL_FALSE
    public static final int GL_TRUE
    public static final int GL_POINTS
    public static final int GL_LINES
    public static final int GL_LINE_LOOP
    public static final int GL_LINE_STRIP
    public static final int GL_TRIANGLES
    public static final int GL_TRIANGLE_STRIP
    public static final int GL_TRIANGLE_FAN
    public static final int GL_NEVER
    public static final int GL_LESS
    public static final int GL_EQUAL
    public static final int GL_LEQUAL
    public static final int GL_GREATER
    public static final int GL_NOTEQUAL
    public static final int GL_GEQUAL
    public static final int GL_ALWAYS
    public static final int GL_ZERO
    public static final int GL_ONE
    public static final int GL_SRC_COLOR
    public static final int GL_ONE_MINUS_SRC_COLOR
    public static final int GL_SRC_ALPHA
    public static final int GL_ONE_MINUS_SRC_ALPHA
    public static final int GL_DST_ALPHA
    public static final int GL_ONE_MINUS_DST_ALPHA
    public static final int GL_DST_COLOR
    public static final int GL_ONE_MINUS_DST_COLOR
    public static final int GL_SRC_ALPHA_SATURATE
    public static final int GL_FRONT
    public static final int GL_BACK
    public static final int GL_FRONT_AND_BACK
    public static final int GL_FOG
    public static final int GL_LIGHTING
    public static final int GL_TEXTURE_2D
    public static final int GL_CULL_FACE
    public static final int GL_ALPHA_TEST
    public static final int GL_BLEND
    public static final int GL_COLOR_LOGIC_OP
    public static final int GL_DITHER
    public static final int GL_STENCIL_TEST
    public static final int GL_DEPTH_TEST
    public static final int GL_POINT_SMOOTH
    public static final int GL_LINE_SMOOTH
    public static final int GL_SCISSOR_TEST
    public static final int GL_COLOR_MATERIAL
    public static final int GL_NORMALIZE
    public static final int GL_RESCALE_NORMAL
    public static final int GL_POLYGON_OFFSET_FILL
    public static final int GL_VERTEX_ARRAY
    public static final int GL_NORMAL_ARRAY
    public static final int GL_COLOR_ARRAY
    public static final int GL_TEXTURE_COORD_ARRAY
    public static final int GL_MULTISAMPLE
    public static final int GL_SAMPLE_ALPHA_TO_COVERAGE
    public static final int GL_SAMPLE_ALPHA_TO_ONE
    public static final int GL_SAMPLE_COVERAGE
    public static final int GL_NO_ERROR
    public static final int GL_INVALID_ENUM
    public static final int GL_INVALID_VALUE
    public static final int GL_INVALID_OPERATION
    public static final int GL_STACK_OVERFLOW
    public static final int GL_STACK_UNDERFLOW
    public static final int GL_OUT_OF_MEMORY
    public static final int GL_EXP
    public static final int GL_EXP2
    public static final int GL_FOG_DENSITY
    public static final int GL_FOG_START
    public static final int GL_FOG_END
    public static final int GL_FOG_MODE
    public static final int GL_FOG_COLOR
    public static final int GL_CW
    public static final int GL_CCW
    public static final int GL_SMOOTH_POINT_SIZE_RANGE
    public static final int GL_SMOOTH_LINE_WIDTH_RANGE
    public static final int GL_ALIASED_POINT_SIZE_RANGE
    public static final int GL_ALIASED_LINE_WIDTH_RANGE
    public static final int GL_IMPLEMENTATION_COLOR_READ_TYPE_OES
    public static final int GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES
    public static final int GL_MAX_LIGHTS
    public static final int GL_MAX_TEXTURE_SIZE
    public static final int GL_MAX_MODELVIEW_STACK_DEPTH
    public static final int GL_MAX_PROJECTION_STACK_DEPTH
    public static final int GL_MAX_TEXTURE_STACK_DEPTH
    public static final int GL_MAX_VIEWPORT_DIMS
    public static final int GL_MAX_ELEMENTS_VERTICES
    public static final int GL_MAX_ELEMENTS_INDICES
    public static final int GL_MAX_TEXTURE_UNITS
    public static final int GL_NUM_COMPRESSED_TEXTURE_FORMATS
    public static final int GL_COMPRESSED_TEXTURE_FORMATS
    public static final int GL_SUBPIXEL_BITS
    public static final int GL_RED_BITS
    public static final int GL_GREEN_BITS
    public static final int GL_BLUE_BITS
    public static final int GL_ALPHA_BITS
    public static final int GL_DEPTH_BITS
    public static final int GL_STENCIL_BITS
    public static final int GL_DONT_CARE
    public static final int GL_FASTEST
    public static final int GL_NICEST
    public static final int GL_PERSPECTIVE_CORRECTION_HINT
    public static final int GL_POINT_SMOOTH_HINT
    public static final int GL_LINE_SMOOTH_HINT
    public static final int GL_POLYGON_SMOOTH_HINT
    public static final int GL_FOG_HINT
    public static final int GL_LIGHT_MODEL_AMBIENT
    public static final int GL_LIGHT_MODEL_TWO_SIDE
    public static final int GL_AMBIENT
    public static final int GL_DIFFUSE
    public static final int GL_SPECULAR
    public static final int GL_POSITION
    public static final int GL_SPOT_DIRECTION
    public static final int GL_SPOT_EXPONENT
    public static final int GL_SPOT_CUTOFF
    public static final int GL_CONSTANT_ATTENUATION
    public static final int GL_LINEAR_ATTENUATION
    public static final int GL_QUADRATIC_ATTENUATION
    public static final int GL_BYTE
    public static final int GL_UNSIGNED_BYTE
    public static final int GL_SHORT
    public static final int GL_UNSIGNED_SHORT
    public static final int GL_FLOAT
    public static final int GL_CLEAR
    public static final int GL_AND
    public static final int GL_AND_REVERSE
    public static final int GL_COPY
    public static final int GL_AND_INVERTED
    public static final int GL_NOOP
    public static final int GL_XOR
    public static final int GL_OR
    public static final int GL_NOR
    public static final int GL_EQUIV
    public static final int GL_INVERT
    public static final int GL_OR_REVERSE
    public static final int GL_COPY_INVERTED
    public static final int GL_OR_INVERTED
    public static final int GL_NAND
    public static final int GL_SET
    public static final int GL_EMISSION
    public static final int GL_SHININESS
    public static final int GL_AMBIENT_AND_DIFFUSE
    public static final int GL_MODELVIEW
    public static final int GL_PROJECTION
    public static final int GL_TEXTURE
    public static final int GL_ALPHA
    public static final int GL_RGB
    public static final int GL_RGBA
    public static final int GL_LUMINANCE
    public static final int GL_LUMINANCE_ALPHA
    public static final int GL_UNPACK_ALIGNMENT
    public static final int GL_PACK_ALIGNMENT
    public static final int GL_UNSIGNED_SHORT_4_4_4_4
    public static final int GL_UNSIGNED_SHORT_5_5_5_1
    public static final int GL_UNSIGNED_SHORT_5_6_5
    public static final int GL_FLAT
    public static final int GL_SMOOTH
    public static final int GL_KEEP
    public static final int GL_REPLACE
    public static final int GL_INCR
    public static final int GL_DECR
    public static final int GL_VENDOR
    public static final int GL_RENDERER
    public static final int GL_VERSION
    public static final int GL_EXTENSIONS
    public static final int GL_MODULATE
    public static final int GL_DECAL
    public static final int GL_ADD
    public static final int GL_TEXTURE_ENV_MODE
    public static final int GL_TEXTURE_ENV_COLOR
    public static final int GL_TEXTURE_ENV
    public static final int GL_NEAREST
    public static final int GL_LINEAR
    public static final int GL_NEAREST_MIPMAP_NEAREST
    public static final int GL_LINEAR_MIPMAP_NEAREST
    public static final int GL_NEAREST_MIPMAP_LINEAR
    public static final int GL_LINEAR_MIPMAP_LINEAR
    public static final int GL_TEXTURE_MAG_FILTER
    public static final int GL_TEXTURE_MIN_FILTER
    public static final int GL_TEXTURE_WRAP_S
    public static final int GL_TEXTURE_WRAP_T
    public static final int GL_TEXTURE0
    public static final int GL_TEXTURE1
    public static final int GL_TEXTURE2
    public static final int GL_TEXTURE3
    public static final int GL_TEXTURE4
    public static final int GL_TEXTURE5
    public static final int GL_TEXTURE6
    public static final int GL_TEXTURE7
    public static final int GL_TEXTURE8
    public static final int GL_TEXTURE9
    public static final int GL_TEXTURE10
    public static final int GL_TEXTURE11
    public static final int GL_TEXTURE12
    public static final int GL_TEXTURE13
    public static final int GL_TEXTURE14
    public static final int GL_TEXTURE15
    public static final int GL_TEXTURE16
    public static final int GL_TEXTURE17
    public static final int GL_TEXTURE18
    public static final int GL_TEXTURE19
    public static final int GL_TEXTURE20
    public static final int GL_TEXTURE21
    public static final int GL_TEXTURE22
    public static final int GL_TEXTURE23
    public static final int GL_TEXTURE24
    public static final int GL_TEXTURE25
    public static final int GL_TEXTURE26
    public static final int GL_TEXTURE27
    public static final int GL_TEXTURE28
    public static final int GL_TEXTURE29
    public static final int GL_TEXTURE30
    public static final int GL_TEXTURE31
    public static final int GL_REPEAT
    public static final int GL_CLAMP_TO_EDGE
    public static final int GL_PALETTE4_RGB8_OES
    public static final int GL_PALETTE4_RGBA8_OES
    public static final int GL_PALETTE4_R5_G6_B5_OES
    public static final int GL_PALETTE4_RGBA4_OES
    public static final int GL_PALETTE4_RGB5_A1_OES
    public static final int GL_PALETTE8_RGB8_OES
    public static final int GL_PALETTE8_RGBA8_OES
    public static final int GL_PALETTE8_R5_G6_B5_OES
    public static final int GL_PALETTE8_RGBA4_OES
    public static final int GL_PALETTE8_RGB5_A1_OES
    public static final int GL_LIGHT0
    public static final int GL_LIGHT1
    public static final int GL_LIGHT2
    public static final int GL_LIGHT3
    public static final int GL_LIGHT4
    public static final int GL_LIGHT5
    public static final int GL_LIGHT6
    public static final int GL_LIGHT7
    public static final int GL_POINT
    public static final int GL_LINE
    public static final int GL_FILL
    public abstract void glAlphaFunc(int,float)
    public abstract void glDeleteTextures(int,int[],int)
    public abstract void glFogf(int,float)
    public abstract void glFogfv(int,float[],int)
    public abstract void glFogfv(int,java.nio.FloatBuffer)
    public abstract void glFrustumf(float,float,float,float,float,float)
    public abstract void glGenTextures(int,int[],int)
    public abstract void glGetIntegerv(int,int[],int)
    public abstract void glLightModelf(int,float)
    public abstract void glLightModelfv(int,java.nio.FloatBuffer)
    public abstract void glLightfv(int,int,java.nio.FloatBuffer)
    public abstract void glLoadMatrixf(java.nio.FloatBuffer)
    public abstract void glLogicOp(int)
    public abstract void glMaterialf(int,int,float)
    public abstract void glMaterialfv(int,int,java.nio.FloatBuffer)
    public abstract void glMultMatrixf(float[],int)
    public abstract void glMultMatrixf(java.nio.FloatBuffer)
    public abstract void glMultiTexCoord4f(int,float,float,float,float)
    public abstract void glNormal3f(float,float,float)
    public abstract void glOrthof(float,float,float,float,float,float)
    public abstract void glSampleCoverage(float,boolean)
    public abstract void glScalef(float,float,float)
    public abstract void glShadeModel(int)
    public abstract void glTexEnvf(int,int,float)
    public abstract void glTexEnvfv(int,int,float[],int)
    public abstract void glTexEnvfv(int,int,java.nio.FloatBuffer)
    public abstract void glTranslatef(float,float,float)
    public abstract void glPolygonMode(int,int)
com.badlogic.gdx.graphics.GL11:
    public static final int GL_OES_VERSION_1_0
    public static final int GL_MAX_ELEMENTS_VERTICES
    public static final int GL_MAX_ELEMENTS_INDICES
    public static final int GL_POLYGON_SMOOTH_HINT
    public static final int GL_VERSION_ES_CM_1_0
    public static final int GL_VERSION_ES_CL_1_0
    public static final int GL_VERSION_ES_CM_1_1
    public static final int GL_VERSION_ES_CL_1_1
    public static final int GL_CLIP_PLANE0
    public static final int GL_CLIP_PLANE1
    public static final int GL_CLIP_PLANE2
    public static final int GL_CLIP_PLANE3
    public static final int GL_CLIP_PLANE4
    public static final int GL_CLIP_PLANE5
    public static final int GL_CURRENT_COLOR
    public static final int GL_CURRENT_NORMAL
    public static final int GL_CURRENT_TEXTURE_COORDS
    public static final int GL_POINT_SIZE
    public static final int GL_POINT_SIZE_MIN
    public static final int GL_POINT_SIZE_MAX
    public static final int GL_POINT_FADE_THRESHOLD_SIZE
    public static final int GL_POINT_DISTANCE_ATTENUATION
    public static final int GL_LINE_WIDTH
    public static final int GL_CULL_FACE_MODE
    public static final int GL_FRONT_FACE
    public static final int GL_SHADE_MODEL
    public static final int GL_DEPTH_RANGE
    public static final int GL_DEPTH_WRITEMASK
    public static final int GL_DEPTH_CLEAR_VALUE
    public static final int GL_DEPTH_FUNC
    public static final int GL_STENCIL_CLEAR_VALUE
    public static final int GL_STENCIL_FUNC
    public static final int GL_STENCIL_VALUE_MASK
    public static final int GL_STENCIL_FAIL
    public static final int GL_STENCIL_PASS_DEPTH_FAIL
    public static final int GL_STENCIL_PASS_DEPTH_PASS
    public static final int GL_STENCIL_REF
    public static final int GL_STENCIL_WRITEMASK
    public static final int GL_MATRIX_MODE
    public static final int GL_VIEWPORT
    public static final int GL_MODELVIEW_STACK_DEPTH
    public static final int GL_PROJECTION_STACK_DEPTH
    public static final int GL_TEXTURE_STACK_DEPTH
    public static final int GL_MODELVIEW_MATRIX
    public static final int GL_PROJECTION_MATRIX
    public static final int GL_TEXTURE_MATRIX
    public static final int GL_ALPHA_TEST_FUNC
    public static final int GL_ALPHA_TEST_REF
    public static final int GL_BLEND_DST
    public static final int GL_BLEND_SRC
    public static final int GL_LOGIC_OP_MODE
    public static final int GL_SCISSOR_BOX
    public static final int GL_COLOR_CLEAR_VALUE
    public static final int GL_COLOR_WRITEMASK
    public static final int GL_MAX_CLIP_PLANES
    public static final int GL_POLYGON_OFFSET_UNITS
    public static final int GL_POLYGON_OFFSET_FACTOR
    public static final int GL_TEXTURE_BINDING_2D
    public static final int GL_VERTEX_ARRAY_SIZE
    public static final int GL_VERTEX_ARRAY_TYPE
    public static final int GL_VERTEX_ARRAY_STRIDE
    public static final int GL_NORMAL_ARRAY_TYPE
    public static final int GL_NORMAL_ARRAY_STRIDE
    public static final int GL_COLOR_ARRAY_SIZE
    public static final int GL_COLOR_ARRAY_TYPE
    public static final int GL_COLOR_ARRAY_STRIDE
    public static final int GL_TEXTURE_COORD_ARRAY_SIZE
    public static final int GL_TEXTURE_COORD_ARRAY_TYPE
    public static final int GL_TEXTURE_COORD_ARRAY_STRIDE
    public static final int GL_VERTEX_ARRAY_POINTER
    public static final int GL_NORMAL_ARRAY_POINTER
    public static final int GL_COLOR_ARRAY_POINTER
    public static final int GL_TEXTURE_COORD_ARRAY_POINTER
    public static final int GL_SAMPLE_BUFFERS
    public static final int GL_SAMPLES
    public static final int GL_SAMPLE_COVERAGE_VALUE
    public static final int GL_SAMPLE_COVERAGE_INVERT
    public static final int GL_GENERATE_MIPMAP_HINT
    public static final int GL_GENERATE_MIPMAP
    public static final int GL_ACTIVE_TEXTURE
    public static final int GL_CLIENT_ACTIVE_TEXTURE
    public static final int GL_ARRAY_BUFFER
    public static final int GL_ELEMENT_ARRAY_BUFFER
    public static final int GL_ARRAY_BUFFER_BINDING
    public static final int GL_ELEMENT_ARRAY_BUFFER_BINDING
    public static final int GL_VERTEX_ARRAY_BUFFER_BINDING
    public static final int GL_NORMAL_ARRAY_BUFFER_BINDING
    public static final int GL_COLOR_ARRAY_BUFFER_BINDING
    public static final int GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING
    public static final int GL_STATIC_DRAW
    public static final int GL_DYNAMIC_DRAW
    public static final int GL_BUFFER_SIZE
    public static final int GL_BUFFER_USAGE
    public static final int GL_SUBTRACT
    public static final int GL_COMBINE
    public static final int GL_COMBINE_RGB
    public static final int GL_COMBINE_ALPHA
    public static final int GL_RGB_SCALE
    public static final int GL_ADD_SIGNED
    public static final int GL_INTERPOLATE
    public static final int GL_CONSTANT
    public static final int GL_PRIMARY_COLOR
    public static final int GL_PREVIOUS
    public static final int GL_OPERAND0_RGB
    public static final int GL_OPERAND1_RGB
    public static final int GL_OPERAND2_RGB
    public static final int GL_OPERAND0_ALPHA
    public static final int GL_OPERAND1_ALPHA
    public static final int GL_OPERAND2_ALPHA
    public static final int GL_ALPHA_SCALE
    public static final int GL_SRC0_RGB
    public static final int GL_SRC1_RGB
    public static final int GL_SRC2_RGB
    public static final int GL_SRC0_ALPHA
    public static final int GL_SRC1_ALPHA
    public static final int GL_SRC2_ALPHA
    public static final int GL_DOT3_RGB
    public static final int GL_DOT3_RGBA
    public static final int GL_POINT_SIZE_ARRAY_OES
    public static final int GL_POINT_SIZE_ARRAY_TYPE_OES
    public static final int GL_POINT_SIZE_ARRAY_STRIDE_OES
    public static final int GL_POINT_SIZE_ARRAY_POINTER_OES
    public static final int GL_POINT_SIZE_ARRAY_BUFFER_BINDING_OES
    public static final int GL_POINT_SPRITE_OES
    public static final int GL_COORD_REPLACE_OES
    public static final int GL_OES_point_size_array
    public static final int GL_OES_point_sprite
    public abstract void glClipPlanef(int,float[],int)
    public abstract void glClipPlanef(int,java.nio.FloatBuffer)
    public abstract void glGetClipPlanef(int,float[],int)
    public abstract void glGetClipPlanef(int,java.nio.FloatBuffer)
    public abstract void glGetFloatv(int,float[],int)
    public abstract void glGetFloatv(int,java.nio.FloatBuffer)
    public abstract void glGetLightfv(int,int,float[],int)
    public abstract void glGetLightfv(int,int,java.nio.FloatBuffer)
    public abstract void glGetMaterialfv(int,int,float[],int)
    public abstract void glGetMaterialfv(int,int,java.nio.FloatBuffer)
    public abstract void glGetTexParameterfv(int,int,float[],int)
    public abstract void glGetTexParameterfv(int,int,java.nio.FloatBuffer)
    public abstract void glPointParameterf(int,float)
    public abstract void glPointParameterfv(int,float[],int)
    public abstract void glPointParameterfv(int,java.nio.FloatBuffer)
    public abstract void glTexParameterfv(int,int,float[],int)
    public abstract void glTexParameterfv(int,int,java.nio.FloatBuffer)
    public abstract void glColor4ub(byte,byte,byte,byte)
    public abstract void glDeleteBuffers(int,int[],int)
    public abstract void glGetBooleanv(int,boolean[],int)
    public abstract void glGetBooleanv(int,java.nio.IntBuffer)
    public abstract void glGetBufferParameteriv(int,int,int[],int)
    public abstract void glGetBufferParameteriv(int,int,java.nio.IntBuffer)
    public abstract void glGenBuffers(int,int[],int)
    public abstract void glGetPointerv(int,java.nio.Buffer[])
    public abstract void glGetTexEnviv(int,int,int[],int)
    public abstract void glGetTexEnviv(int,int,java.nio.IntBuffer)
    public abstract void glGetTexParameteriv(int,int,int[],int)
    public abstract void glGetTexParameteriv(int,int,java.nio.IntBuffer)
    public abstract boolean glIsBuffer(int)
    public abstract boolean glIsEnabled(int)
    public abstract boolean glIsTexture(int)
    public abstract void glTexEnvi(int,int,int)
    public abstract void glTexEnviv(int,int,int[],int)
    public abstract void glTexEnviv(int,int,java.nio.IntBuffer)
    public abstract void glTexParameteri(int,int,int)
    public abstract void glTexParameteriv(int,int,int[],int)
    public abstract void glTexParameteriv(int,int,java.nio.IntBuffer)
    public abstract void glPointSizePointerOES(int,int,java.nio.Buffer)
com.badlogic.gdx.graphics.GL20:
    public static final int GL_ES_VERSION_2_0
    public static final int GL_DEPTH_BUFFER_BIT
    public static final int GL_STENCIL_BUFFER_BIT
    public static final int GL_COLOR_BUFFER_BIT
    public static final int GL_FALSE
    public static final int GL_TRUE
    public static final int GL_POINTS
    public static final int GL_LINES
    public static final int GL_LINE_LOOP
    public static final int GL_LINE_STRIP
    public static final int GL_TRIANGLES
    public static final int GL_TRIANGLE_STRIP
    public static final int GL_TRIANGLE_FAN
    public static final int GL_ZERO
    public static final int GL_ONE
    public static final int GL_SRC_COLOR
    public static final int GL_ONE_MINUS_SRC_COLOR
    public static final int GL_SRC_ALPHA
    public static final int GL_ONE_MINUS_SRC_ALPHA
    public static final int GL_DST_ALPHA
    public static final int GL_ONE_MINUS_DST_ALPHA
    public static final int GL_DST_COLOR
    public static final int GL_ONE_MINUS_DST_COLOR
    public static final int GL_SRC_ALPHA_SATURATE
    public static final int GL_FUNC_ADD
    public static final int GL_BLEND_EQUATION
    public static final int GL_BLEND_EQUATION_RGB
    public static final int GL_BLEND_EQUATION_ALPHA
    public static final int GL_FUNC_SUBTRACT
    public static final int GL_FUNC_REVERSE_SUBTRACT
    public static final int GL_BLEND_DST_RGB
    public static final int GL_BLEND_SRC_RGB
    public static final int GL_BLEND_DST_ALPHA
    public static final int GL_BLEND_SRC_ALPHA
    public static final int GL_CONSTANT_COLOR
    public static final int GL_ONE_MINUS_CONSTANT_COLOR
    public static final int GL_CONSTANT_ALPHA
    public static final int GL_ONE_MINUS_CONSTANT_ALPHA
    public static final int GL_BLEND_COLOR
    public static final int GL_ARRAY_BUFFER
    public static final int GL_ELEMENT_ARRAY_BUFFER
    public static final int GL_ARRAY_BUFFER_BINDING
    public static final int GL_ELEMENT_ARRAY_BUFFER_BINDING
    public static final int GL_STREAM_DRAW
    public static final int GL_STATIC_DRAW
    public static final int GL_DYNAMIC_DRAW
    public static final int GL_BUFFER_SIZE
    public static final int GL_BUFFER_USAGE
    public static final int GL_CURRENT_VERTEX_ATTRIB
    public static final int GL_FRONT
    public static final int GL_BACK
    public static final int GL_FRONT_AND_BACK
    public static final int GL_TEXTURE_2D
    public static final int GL_CULL_FACE
    public static final int GL_BLEND
    public static final int GL_DITHER
    public static final int GL_STENCIL_TEST
    public static final int GL_DEPTH_TEST
    public static final int GL_SCISSOR_TEST
    public static final int GL_POLYGON_OFFSET_FILL
    public static final int GL_SAMPLE_ALPHA_TO_COVERAGE
    public static final int GL_SAMPLE_COVERAGE
    public static final int GL_NO_ERROR
    public static final int GL_INVALID_ENUM
    public static final int GL_INVALID_VALUE
    public static final int GL_INVALID_OPERATION
    public static final int GL_OUT_OF_MEMORY
    public static final int GL_CW
    public static final int GL_CCW
    public static final int GL_LINE_WIDTH
    public static final int GL_ALIASED_POINT_SIZE_RANGE
    public static final int GL_ALIASED_LINE_WIDTH_RANGE
    public static final int GL_CULL_FACE_MODE
    public static final int GL_FRONT_FACE
    public static final int GL_DEPTH_RANGE
    public static final int GL_DEPTH_WRITEMASK
    public static final int GL_DEPTH_CLEAR_VALUE
    public static final int GL_DEPTH_FUNC
    public static final int GL_STENCIL_CLEAR_VALUE
    public static final int GL_STENCIL_FUNC
    public static final int GL_STENCIL_FAIL
    public static final int GL_STENCIL_PASS_DEPTH_FAIL
    public static final int GL_STENCIL_PASS_DEPTH_PASS
    public static final int GL_STENCIL_REF
    public static final int GL_STENCIL_VALUE_MASK
    public static final int GL_STENCIL_WRITEMASK
    public static final int GL_STENCIL_BACK_FUNC
    public static final int GL_STENCIL_BACK_FAIL
    public static final int GL_STENCIL_BACK_PASS_DEPTH_FAIL
    public static final int GL_STENCIL_BACK_PASS_DEPTH_PASS
    public static final int GL_STENCIL_BACK_REF
    public static final int GL_STENCIL_BACK_VALUE_MASK
    public static final int GL_STENCIL_BACK_WRITEMASK
    public static final int GL_VIEWPORT
    public static final int GL_SCISSOR_BOX
    public static final int GL_COLOR_CLEAR_VALUE
    public static final int GL_COLOR_WRITEMASK
    public static final int GL_UNPACK_ALIGNMENT
    public static final int GL_PACK_ALIGNMENT
    public static final int GL_MAX_TEXTURE_SIZE
    public static final int GL_MAX_TEXTURE_UNITS
    public static final int GL_MAX_VIEWPORT_DIMS
    public static final int GL_SUBPIXEL_BITS
    public static final int GL_RED_BITS
    public static final int GL_GREEN_BITS
    public static final int GL_BLUE_BITS
    public static final int GL_ALPHA_BITS
    public static final int GL_DEPTH_BITS
    public static final int GL_STENCIL_BITS
    public static final int GL_POLYGON_OFFSET_UNITS
    public static final int GL_POLYGON_OFFSET_FACTOR
    public static final int GL_TEXTURE_BINDING_2D
    public static final int GL_SAMPLE_BUFFERS
    public static final int GL_SAMPLES
    public static final int GL_SAMPLE_COVERAGE_VALUE
    public static final int GL_SAMPLE_COVERAGE_INVERT
    public static final int GL_NUM_COMPRESSED_TEXTURE_FORMATS
    public static final int GL_COMPRESSED_TEXTURE_FORMATS
    public static final int GL_DONT_CARE
    public static final int GL_FASTEST
    public static final int GL_NICEST
    public static final int GL_GENERATE_MIPMAP_HINT
    public static final int GL_BYTE
    public static final int GL_UNSIGNED_BYTE
    public static final int GL_SHORT
    public static final int GL_UNSIGNED_SHORT
    public static final int GL_INT
    public static final int GL_UNSIGNED_INT
    public static final int GL_FLOAT
    public static final int GL_FIXED
    public static final int GL_DEPTH_COMPONENT
    public static final int GL_ALPHA
    public static final int GL_RGB
    public static final int GL_RGBA
    public static final int GL_LUMINANCE
    public static final int GL_LUMINANCE_ALPHA
    public static final int GL_UNSIGNED_SHORT_4_4_4_4
    public static final int GL_UNSIGNED_SHORT_5_5_5_1
    public static final int GL_UNSIGNED_SHORT_5_6_5
    public static final int GL_FRAGMENT_SHADER
    public static final int GL_VERTEX_SHADER
    public static final int GL_MAX_VERTEX_ATTRIBS
    public static final int GL_MAX_VERTEX_UNIFORM_VECTORS
    public static final int GL_MAX_VARYING_VECTORS
    public static final int GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS
    public static final int GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS
    public static final int GL_MAX_TEXTURE_IMAGE_UNITS
    public static final int GL_MAX_FRAGMENT_UNIFORM_VECTORS
    public static final int GL_SHADER_TYPE
    public static final int GL_DELETE_STATUS
    public static final int GL_LINK_STATUS
    public static final int GL_VALIDATE_STATUS
    public static final int GL_ATTACHED_SHADERS
    public static final int GL_ACTIVE_UNIFORMS
    public static final int GL_ACTIVE_UNIFORM_MAX_LENGTH
    public static final int GL_ACTIVE_ATTRIBUTES
    public static final int GL_ACTIVE_ATTRIBUTE_MAX_LENGTH
    public static final int GL_SHADING_LANGUAGE_VERSION
    public static final int GL_CURRENT_PROGRAM
    public static final int GL_NEVER
    public static final int GL_LESS
    public static final int GL_EQUAL
    public static final int GL_LEQUAL
    public static final int GL_GREATER
    public static final int GL_NOTEQUAL
    public static final int GL_GEQUAL
    public static final int GL_ALWAYS
    public static final int GL_KEEP
    public static final int GL_REPLACE
    public static final int GL_INCR
    public static final int GL_DECR
    public static final int GL_INVERT
    public static final int GL_INCR_WRAP
    public static final int GL_DECR_WRAP
    public static final int GL_VENDOR
    public static final int GL_RENDERER
    public static final int GL_VERSION
    public static final int GL_EXTENSIONS
    public static final int GL_NEAREST
    public static final int GL_LINEAR
    public static final int GL_NEAREST_MIPMAP_NEAREST
    public static final int GL_LINEAR_MIPMAP_NEAREST
    public static final int GL_NEAREST_MIPMAP_LINEAR
    public static final int GL_LINEAR_MIPMAP_LINEAR
    public static final int GL_TEXTURE_MAG_FILTER
    public static final int GL_TEXTURE_MIN_FILTER
    public static final int GL_TEXTURE_WRAP_S
    public static final int GL_TEXTURE_WRAP_T
    public static final int GL_TEXTURE
    public static final int GL_TEXTURE_CUBE_MAP
    public static final int GL_TEXTURE_BINDING_CUBE_MAP
    public static final int GL_TEXTURE_CUBE_MAP_POSITIVE_X
    public static final int GL_TEXTURE_CUBE_MAP_NEGATIVE_X
    public static final int GL_TEXTURE_CUBE_MAP_POSITIVE_Y
    public static final int GL_TEXTURE_CUBE_MAP_NEGATIVE_Y
    public static final int GL_TEXTURE_CUBE_MAP_POSITIVE_Z
    public static final int GL_TEXTURE_CUBE_MAP_NEGATIVE_Z
    public static final int GL_MAX_CUBE_MAP_TEXTURE_SIZE
    public static final int GL_TEXTURE0
    public static final int GL_TEXTURE1
    public static final int GL_TEXTURE2
    public static final int GL_TEXTURE3
    public static final int GL_TEXTURE4
    public static final int GL_TEXTURE5
    public static final int GL_TEXTURE6
    public static final int GL_TEXTURE7
    public static final int GL_TEXTURE8
    public static final int GL_TEXTURE9
    public static final int GL_TEXTURE10
    public static final int GL_TEXTURE11
    public static final int GL_TEXTURE12
    public static final int GL_TEXTURE13
    public static final int GL_TEXTURE14
    public static final int GL_TEXTURE15
    public static final int GL_TEXTURE16
    public static final int GL_TEXTURE17
    public static final int GL_TEXTURE18
    public static final int GL_TEXTURE19
    public static final int GL_TEXTURE20
    public static final int GL_TEXTURE21
    public static final int GL_TEXTURE22
    public static final int GL_TEXTURE23
    public static final int GL_TEXTURE24
    public static final int GL_TEXTURE25
    public static final int GL_TEXTURE26
    public static final int GL_TEXTURE27
    public static final int GL_TEXTURE28
    public static final int GL_TEXTURE29
    public static final int GL_TEXTURE30
    public static final int GL_TEXTURE31
    public static final int GL_ACTIVE_TEXTURE
    public static final int GL_REPEAT
    public static final int GL_CLAMP_TO_EDGE
    public static final int GL_MIRRORED_REPEAT
    public static final int GL_FLOAT_VEC2
    public static final int GL_FLOAT_VEC3
    public static final int GL_FLOAT_VEC4
    public static final int GL_INT_VEC2
    public static final int GL_INT_VEC3
    public static final int GL_INT_VEC4
    public static final int GL_BOOL
    public static final int GL_BOOL_VEC2
    public static final int GL_BOOL_VEC3
    public static final int GL_BOOL_VEC4
    public static final int GL_FLOAT_MAT2
    public static final int GL_FLOAT_MAT3
    public static final int GL_FLOAT_MAT4
    public static final int GL_SAMPLER_2D
    public static final int GL_SAMPLER_CUBE
    public static final int GL_VERTEX_ATTRIB_ARRAY_ENABLED
    public static final int GL_VERTEX_ATTRIB_ARRAY_SIZE
    public static final int GL_VERTEX_ATTRIB_ARRAY_STRIDE
    public static final int GL_VERTEX_ATTRIB_ARRAY_TYPE
    public static final int GL_VERTEX_ATTRIB_ARRAY_NORMALIZED
    public static final int GL_VERTEX_ATTRIB_ARRAY_POINTER
    public static final int GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING
    public static final int GL_IMPLEMENTATION_COLOR_READ_TYPE
    public static final int GL_IMPLEMENTATION_COLOR_READ_FORMAT
    public static final int GL_COMPILE_STATUS
    public static final int GL_INFO_LOG_LENGTH
    public static final int GL_SHADER_SOURCE_LENGTH
    public static final int GL_SHADER_COMPILER
    public static final int GL_SHADER_BINARY_FORMATS
    public static final int GL_NUM_SHADER_BINARY_FORMATS
    public static final int GL_LOW_FLOAT
    public static final int GL_MEDIUM_FLOAT
    public static final int GL_HIGH_FLOAT
    public static final int GL_LOW_INT
    public static final int GL_MEDIUM_INT
    public static final int GL_HIGH_INT
    public static final int GL_FRAMEBUFFER
    public static final int GL_RENDERBUFFER
    public static final int GL_RGBA4
    public static final int GL_RGB5_A1
    public static final int GL_RGB565
    public static final int GL_DEPTH_COMPONENT16
    public static final int GL_STENCIL_INDEX
    public static final int GL_STENCIL_INDEX8
    public static final int GL_RENDERBUFFER_WIDTH
    public static final int GL_RENDERBUFFER_HEIGHT
    public static final int GL_RENDERBUFFER_INTERNAL_FORMAT
    public static final int GL_RENDERBUFFER_RED_SIZE
    public static final int GL_RENDERBUFFER_GREEN_SIZE
    public static final int GL_RENDERBUFFER_BLUE_SIZE
    public static final int GL_RENDERBUFFER_ALPHA_SIZE
    public static final int GL_RENDERBUFFER_DEPTH_SIZE
    public static final int GL_RENDERBUFFER_STENCIL_SIZE
    public static final int GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE
    public static final int GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME
    public static final int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL
    public static final int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE
    public static final int GL_COLOR_ATTACHMENT0
    public static final int GL_DEPTH_ATTACHMENT
    public static final int GL_STENCIL_ATTACHMENT
    public static final int GL_NONE
    public static final int GL_FRAMEBUFFER_COMPLETE
    public static final int GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT
    public static final int GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT
    public static final int GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS
    public static final int GL_FRAMEBUFFER_UNSUPPORTED
    public static final int GL_FRAMEBUFFER_BINDING
    public static final int GL_RENDERBUFFER_BINDING
    public static final int GL_MAX_RENDERBUFFER_SIZE
    public static final int GL_INVALID_FRAMEBUFFER_OPERATION
    public static final int GL_VERTEX_PROGRAM_POINT_SIZE
    public static final int GL_COVERAGE_BUFFER_BIT_NV
    public abstract void glBindAttribLocation(int,int,java.lang.String)
    public abstract void glBlendColor(float,float,float,float)
    public abstract void glBlendEquation(int)
    public abstract void glBlendEquationSeparate(int,int)
    public abstract void glBlendFuncSeparate(int,int,int,int)
    public abstract void glDetachShader(int,int)
    public abstract void glGetAttachedShaders(int,int,java.nio.Buffer,java.nio.IntBuffer)
    public abstract void glGetBooleanv(int,java.nio.Buffer)
    public abstract void glGetBufferParameteriv(int,int,java.nio.IntBuffer)
    public abstract void glGetFloatv(int,java.nio.FloatBuffer)
    public abstract void glGetFramebufferAttachmentParameteriv(int,int,int,java.nio.IntBuffer)
    public abstract void glGetRenderbufferParameteriv(int,int,java.nio.IntBuffer)
    public abstract void glGetShaderPrecisionFormat(int,int,java.nio.IntBuffer,java.nio.IntBuffer)
    public abstract void glGetTexParameterfv(int,int,java.nio.FloatBuffer)
    public abstract void glGetTexParameteriv(int,int,java.nio.IntBuffer)
    public abstract void glGetUniformfv(int,int,java.nio.FloatBuffer)
    public abstract void glGetUniformiv(int,int,java.nio.IntBuffer)
    public abstract void glGetVertexAttribfv(int,int,java.nio.FloatBuffer)
    public abstract void glGetVertexAttribiv(int,int,java.nio.IntBuffer)
    public abstract void glGetVertexAttribPointerv(int,int,java.nio.Buffer)
    public abstract boolean glIsBuffer(int)
    public abstract boolean glIsEnabled(int)
    public abstract boolean glIsFramebuffer(int)
    public abstract boolean glIsProgram(int)
    public abstract boolean glIsRenderbuffer(int)
    public abstract boolean glIsShader(int)
    public abstract boolean glIsTexture(int)
    public abstract void glReleaseShaderCompiler()
    public abstract void glSampleCoverage(float,boolean)
    public abstract void glShaderBinary(int,java.nio.IntBuffer,int,java.nio.Buffer,int)
    public abstract void glStencilFuncSeparate(int,int,int,int)
    public abstract void glStencilMaskSeparate(int,int)
    public abstract void glStencilOpSeparate(int,int,int,int)
    public abstract void glTexParameterfv(int,int,java.nio.FloatBuffer)
    public abstract void glTexParameteri(int,int,int)
    public abstract void glTexParameteriv(int,int,java.nio.IntBuffer)
    public abstract void glUniform1fv(int,int,java.nio.FloatBuffer)
    public abstract void glUniform1iv(int,int,java.nio.IntBuffer)
    public abstract void glUniform2f(int,float,float)
    public abstract void glUniform2fv(int,int,java.nio.FloatBuffer)
    public abstract void glUniform2i(int,int,int)
    public abstract void glUniform2iv(int,int,java.nio.IntBuffer)
    public abstract void glUniform3i(int,int,int,int)
    public abstract void glUniform3iv(int,int,java.nio.IntBuffer)
    public abstract void glUniform4fv(int,int,java.nio.FloatBuffer)
    public abstract void glUniform4i(int,int,int,int,int)
    public abstract void glUniform4iv(int,int,java.nio.IntBuffer)
    public abstract void glUniformMatrix2fv(int,int,boolean,java.nio.FloatBuffer)
    public abstract void glValidateProgram(int)
    public abstract void glVertexAttrib1f(int,float)
    public abstract void glVertexAttrib1fv(int,java.nio.FloatBuffer)
    public abstract void glVertexAttrib2f(int,float,float)
    public abstract void glVertexAttrib2fv(int,java.nio.FloatBuffer)
    public abstract void glVertexAttrib3f(int,float,float,float)
    public abstract void glVertexAttrib3fv(int,java.nio.FloatBuffer)
    public abstract void glVertexAttrib4f(int,float,float,float,float)
    public abstract void glVertexAttrib4fv(int,java.nio.FloatBuffer)
com.badlogic.gdx.graphics.GLCommon:
    public static final int GL_GENERATE_MIPMAP
    public static final int GL_TEXTURE_MAX_ANISOTROPY_EXT
    public static final int GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT
    public abstract void glClearDepthf(float)
    public abstract void glClearStencil(int)
    public abstract void glColorMask(boolean,boolean,boolean,boolean)
    public abstract void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)
    public abstract void glCopyTexImage2D(int,int,int,int,int,int,int,int)
    public abstract void glCopyTexSubImage2D(int,int,int,int,int,int,int,int)
    public abstract void glDepthRangef(float,float)
    public abstract void glFinish()
    public abstract void glFlush()
    public abstract void glFrontFace(int)
    public abstract int glGetError()
    public abstract void glHint(int,int)
    public abstract void glLineWidth(float)
    public abstract void glPolygonOffset(float,float)
    public abstract void glReadPixels(int,int,int,int,int,int,java.nio.Buffer)
    public abstract void glScissor(int,int,int,int)
    public abstract void glStencilFunc(int,int,int)
    public abstract void glStencilMask(int)
    public abstract void glStencilOp(int,int,int)
    public abstract void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)
com.badlogic.gdx.graphics.Mesh:
    94:106:public varargs Mesh(boolean,int,int,com.badlogic.gdx.graphics.VertexAttribute[])
    142:167:public Mesh(boolean,boolean,int,int,com.badlogic.gdx.graphics.VertexAttributes)
    204:228:public static com.badlogic.gdx.graphics.Mesh create(boolean,com.badlogic.gdx.graphics.Mesh,com.badlogic.gdx.math.Matrix4[])
    239:239:public static com.badlogic.gdx.graphics.Mesh create(boolean,com.badlogic.gdx.graphics.Mesh[])
    252:293:public static com.badlogic.gdx.graphics.Mesh create(boolean,com.badlogic.gdx.graphics.Mesh[],com.badlogic.gdx.math.Matrix4[])
    302:304:public com.badlogic.gdx.graphics.Mesh setVertices(float[])
    323:324:public void getVertices(float[])
    330:331:public void getVertices(int,float[])
    338:339:public void getVertices(int,int,float[])
    348:362:public void getVertices(int,int,float[],int)
    389:390:public void getIndices(short[])
    396:403:public void getIndices(short[],int)
    412:412:public int getNumVertices()
    417:417:public int getMaxVertices()
    422:422:public int getMaxIndices()
    427:427:public int getVertexSize()
    509:510:public void render(int)
    590:591:public void render(com.badlogic.gdx.graphics.glutils.ShaderProgram,int)
    708:710:public com.badlogic.gdx.math.collision.BoundingBox calculateBoundingBox()
    718:748:public void calculateBoundingBox(com.badlogic.gdx.math.collision.BoundingBox)
    756:756:public com.badlogic.gdx.math.collision.BoundingBox calculateBoundingBox(com.badlogic.gdx.math.collision.BoundingBox,int,int)
    765:765:public com.badlogic.gdx.math.collision.BoundingBox calculateBoundingBox(com.badlogic.gdx.math.collision.BoundingBox,int,int,com.badlogic.gdx.math.Matrix4)
    774:774:public com.badlogic.gdx.math.collision.BoundingBox extendBoundingBox(com.badlogic.gdx.math.collision.BoundingBox,int,int)
    876:911:public void scale(float,float,float)
    919:920:public void transform(com.badlogic.gdx.math.Matrix4)
    924:936:protected void transform(com.badlogic.gdx.math.Matrix4,int,int)
    949:983:public static void transform(com.badlogic.gdx.math.Matrix4,float[],int,int,int,int,int)
    991:992:public void transformUV(com.badlogic.gdx.math.Matrix3)
    996:1007:protected void transformUV(com.badlogic.gdx.math.Matrix3,int,int)
    1019:1031:public static void transformUV(com.badlogic.gdx.math.Matrix3,float[],int,int,int,int)
    1043:1126:public com.badlogic.gdx.graphics.Mesh copy(boolean,boolean,int[])
    1134:1134:public com.badlogic.gdx.graphics.Mesh copy(boolean)
com.badlogic.gdx.graphics.OrthographicCamera:
    53:59:public OrthographicCamera(float,float,float)
    62:82:public void findDirectionForIsoView(float,float,int)
    85:96:private float calculateAngle(float)
    100:104:private com.badlogic.gdx.math.Vector3 calculateDirection(float)
    133:134:public void setToOrtho(boolean)
    155:156:public void rotate(float)
    168:169:public void translate(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.graphics.Pixmap:
    106:107:public static void setFilter(com.badlogic.gdx.graphics.Pixmap$Filter)
    123:129:public Pixmap(byte[],int,int)
    146:148:public Pixmap(com.badlogic.gdx.graphics.g2d.Gdx2DPixmap)
    153:154:public void setColor(int)
    169:170:public void setColor(com.badlogic.gdx.graphics.Color)
    191:192:public void drawLine(int,int,int,int)
    202:203:public void drawRectangle(int,int,int,int)
    253:254:public void fillRectangle(int,int,int,int)
    262:263:public void drawCircle(int,int,int)
    271:272:public void fillCircle(int,int,int)
    283:284:public void fillTriangle(int,int,int,int,int,int)
    292:292:public int getPixel(int,int)
    317:318:public void drawPixel(int,int)
    326:327:public void drawPixel(int,int,int)
com.badlogic.gdx.graphics.Pixmap$Filter
com.badlogic.gdx.graphics.PixmapIO:
    35:152:public PixmapIO()
    41:42:public static void writeCIM(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap)
    55:59:public static void writePNG(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap)
com.badlogic.gdx.graphics.PixmapIO$CIM:
    private static final int BUFFER_SIZE
    62:62:private PixmapIO$CIM()
    68:107:public static void write(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap)
com.badlogic.gdx.graphics.PixmapIO$PNG
com.badlogic.gdx.graphics.Texture:
    118:119:public Texture(java.lang.String)
    138:139:public Texture(com.badlogic.gdx.graphics.Pixmap)
    142:143:public Texture(com.badlogic.gdx.graphics.Pixmap,boolean)
    146:147:public Texture(com.badlogic.gdx.graphics.Pixmap,com.badlogic.gdx.graphics.Pixmap$Format,boolean)
    261:266:public void draw(com.badlogic.gdx.graphics.Pixmap,int,int)
    300:300:public boolean isManaged()
    344:345:public static void setEnforcePotImages(boolean)
    424:425:public static void setAssetManager(com.badlogic.gdx.assets.AssetManager)
    440:440:public static int getNumManagedTextures()
com.badlogic.gdx.graphics.Texture$TextureFilter:
    86:86:public boolean isMipMap()
com.badlogic.gdx.graphics.VertexAttribute:
    68:68:public static com.badlogic.gdx.graphics.VertexAttribute Position()
    72:72:public static com.badlogic.gdx.graphics.VertexAttribute TexCoords(int)
    76:76:public static com.badlogic.gdx.graphics.VertexAttribute Normal()
    80:80:public static com.badlogic.gdx.graphics.VertexAttribute Color()
    84:84:public static com.badlogic.gdx.graphics.VertexAttribute ColorUnpacked()
    88:88:public static com.badlogic.gdx.graphics.VertexAttribute Tangent()
    92:92:public static com.badlogic.gdx.graphics.VertexAttribute Binormal()
    96:96:public static com.badlogic.gdx.graphics.VertexAttribute BoneWeight(int)
    114:114:public int getKey()
com.badlogic.gdx.graphics.VertexAttributes:
    65:67:public int getOffset(int)
    167:174:public long getMask()
com.badlogic.gdx.graphics.VertexAttributes$Usage
com.badlogic.gdx.graphics.g2d.Animation
com.badlogic.gdx.graphics.g2d.BitmapFont:
    private static final int LOG2_PAGE_SIZE
    private static final int PAGE_SIZE
    private static final int PAGES
    81:83:public BitmapFont(boolean)
    92:93:public BitmapFont(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.TextureRegion,boolean)
    99:100:public BitmapFont(com.badlogic.gdx.files.FileHandle,boolean)
    106:107:public BitmapFont(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle,boolean)
    222:225:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,java.lang.CharSequence,float,float,int,int)
    231:234:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds drawMultiLine(com.badlogic.gdx.graphics.g2d.SpriteBatch,java.lang.CharSequence,float,float)
    241:244:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds drawMultiLine(com.badlogic.gdx.graphics.g2d.SpriteBatch,java.lang.CharSequence,float,float,float,com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment)
    251:254:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds drawWrapped(com.badlogic.gdx.graphics.g2d.SpriteBatch,java.lang.CharSequence,float,float,float)
    262:265:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds drawWrapped(com.badlogic.gdx.graphics.g2d.SpriteBatch,java.lang.CharSequence,float,float,float,com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment)
    277:277:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getBounds(java.lang.CharSequence,com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds)
    318:318:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getMultiLineBounds(java.lang.CharSequence)
    324:337:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getMultiLineBounds(java.lang.CharSequence,com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds)
    343:343:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getWrappedBounds(java.lang.CharSequence,float)
    350:392:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getWrappedBounds(java.lang.CharSequence,float,com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds)
    400:438:public void computeGlyphAdvancesAndPositions(java.lang.CharSequence,com.badlogic.gdx.utils.FloatArray,com.badlogic.gdx.utils.FloatArray)
    444:475:public int computeVisibleGlyphs(java.lang.CharSequence,int,int,float)
    479:480:public void setColor(float)
    487:488:public void setColor(float,float,float,float)
    493:493:public com.badlogic.gdx.graphics.Color getColor()
    497:509:public void setScale(float,float)
    516:517:public void setScale(float)
    521:522:public void scale(float)
    525:525:public float getScaleX()
    529:529:public float getScaleY()
    543:543:public float getSpaceWidth()
    548:548:public float getXHeight()
    554:554:public float getCapHeight()
    559:559:public float getAscent()
    565:565:public float getDescent()
    570:570:public boolean isFlipped()
    581:594:public void setFixedWidthGlyphs(java.lang.CharSequence)
    598:598:public boolean containsCharacter(char)
    603:605:public void setUseIntegerPositions(boolean)
    613:613:public com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData getData()
    618:618:public boolean ownsTexture()
    654:657:static int indexOf(java.lang.CharSequence,char,int)
    661:668:static boolean isWhitespace(char)
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData:
    871:871:public java.lang.String getImagePath()
    875:875:public com.badlogic.gdx.files.FileHandle getFontFile()
com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment
com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds:
    679:681:public BitmapFont$TextBounds(com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds)
    684:686:public void set(com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds)
com.badlogic.gdx.graphics.g2d.BitmapFontCache:
    56:57:public void setPosition(float,float)
    63:75:public void translate(float,float)
    78:83:public void setColor(float)
    95:102:public void setColor(float,float,float,float)
    107:111:public void setColor(com.badlogic.gdx.graphics.Color,int,int)
    118:119:public void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,int,int)
    122:133:public void draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float)
    136:143:public com.badlogic.gdx.graphics.Color getColor()
    266:267:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setText(java.lang.CharSequence,float,float)
    273:274:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setText(java.lang.CharSequence,float,float,int,int)
    280:280:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds addText(java.lang.CharSequence,float,float)
    300:301:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setMultiLineText(java.lang.CharSequence,float,float)
    307:308:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setMultiLineText(java.lang.CharSequence,float,float,float,com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment)
    314:314:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds addMultiLineText(java.lang.CharSequence,float,float)
    324:352:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds addMultiLineText(java.lang.CharSequence,float,float,float,com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment)
    359:360:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setWrappedText(java.lang.CharSequence,float,float,float)
    367:368:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setWrappedText(java.lang.CharSequence,float,float,float,com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment)
    374:374:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds addWrappedText(java.lang.CharSequence,float,float,float)
    383:438:public com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds addWrappedText(java.lang.CharSequence,float,float,float,com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment)
    449:449:public float getX()
    454:454:public float getY()
    458:458:public com.badlogic.gdx.graphics.g2d.BitmapFont getFont()
    469:469:public boolean usesIntegerPositions()
    473:473:public float[] getVertices()
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap:
    public static final int GDX2D_FORMAT_ALPHA
    public static final int GDX2D_FORMAT_LUMINANCE_ALPHA
    public static final int GDX2D_FORMAT_RGB888
    public static final int GDX2D_FORMAT_RGBA8888
    public static final int GDX2D_FORMAT_RGB565
    public static final int GDX2D_FORMAT_RGBA4444
    public static final int GDX2D_SCALE_NEAREST
    public static final int GDX2D_SCALE_LINEAR
    public static final int GDX2D_BLEND_NONE
    public static final int GDX2D_BLEND_SRC_OVER
    65:82:public Gdx2DPixmap(java.io.InputStream,int)
    95:101:public Gdx2DPixmap(java.nio.ByteBuffer,long[])
    112:113:public void setPixel(int,int,int)
    116:116:public int getPixel(int,int)
    120:121:public void drawLine(int,int,int,int,int)
    124:125:public void drawRect(int,int,int,int,int)
    128:129:public void drawCircle(int,int,int,int)
    132:133:public void fillRect(int,int,int,int,int)
    136:137:public void fillCircle(int,int,int,int)
    140:141:public void fillTriangle(int,int,int,int,int,int,int)
    154:156:public static com.badlogic.gdx.graphics.g2d.Gdx2DPixmap newPixmap(java.io.InputStream,int)
    162:164:public static com.badlogic.gdx.graphics.g2d.Gdx2DPixmap newPixmap(int,int,int)
    222:236:public java.lang.String getFormatString()
    private static native void setPixel(long,int,int,int)
    private static native int getPixel(long,int,int)
    private static native void drawLine(long,int,int,int,int,int)
    private static native void drawRect(long,int,int,int,int,int)
    private static native void drawCircle(long,int,int,int,int)
    private static native void fillRect(long,int,int,int,int,int)
    private static native void fillCircle(long,int,int,int,int)
    private static native void fillTriangle(long,int,int,int,int,int,int,int)
com.badlogic.gdx.graphics.g2d.NinePatch
com.badlogic.gdx.graphics.g2d.ParticleEffect
com.badlogic.gdx.graphics.g2d.ParticleEffectPool
com.badlogic.gdx.graphics.g2d.ParticleEffectPool$PooledEffect
com.badlogic.gdx.graphics.g2d.ParticleEmitter
com.badlogic.gdx.graphics.g2d.ParticleEmitter$1
com.badlogic.gdx.graphics.g2d.ParticleEmitter$GradientColorValue
com.badlogic.gdx.graphics.g2d.ParticleEmitter$NumericValue
com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle
com.badlogic.gdx.graphics.g2d.ParticleEmitter$ParticleValue
com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue
com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShapeValue
com.badlogic.gdx.graphics.g2d.ParticleEmitterBox2D
com.badlogic.gdx.graphics.g2d.ParticleEmitterBox2D$1
com.badlogic.gdx.graphics.g2d.ParticleEmitterBox2D$ParticleBox2D
com.badlogic.gdx.graphics.g2d.PixmapPacker:
    264:264:public com.badlogic.gdx.utils.Array getPages()
    280:284:public synchronized com.badlogic.gdx.graphics.g2d.PixmapPacker$Page getPage(java.lang.String)
    331:365:public synchronized void updateTextureAtlas(com.badlogic.gdx.graphics.g2d.TextureAtlas,com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureFilter,boolean)
    368:368:public int getPageWidth()
    372:372:public int getPageHeight()
    376:376:public int getPadding()
    380:380:public boolean duplicateBoarder()
com.badlogic.gdx.graphics.g2d.PixmapPacker$2
com.badlogic.gdx.graphics.g2d.PixmapPacker$Page:
    com.badlogic.gdx.graphics.Texture texture
    114:114:public com.badlogic.gdx.graphics.Pixmap getPixmap()
com.badlogic.gdx.graphics.g2d.PolygonRegion
com.badlogic.gdx.graphics.g2d.PolygonSprite
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch
com.badlogic.gdx.graphics.g2d.Sprite
com.badlogic.gdx.graphics.g2d.SpriteBatch:
    public static final int X1
    public static final int Y1
    public static final int C1
    public static final int U1
    public static final int V1
    public static final int X2
    public static final int Y2
    public static final int C2
    public static final int U2
    public static final int V2
    public static final int X3
    public static final int Y3
    public static final int C3
    public static final int U3
    public static final int V3
    public static final int X4
    public static final int Y4
    public static final int C4
    public static final int U4
    public static final int V4
    127:128:public SpriteBatch(int,int)
    263:264:public void setColor(com.badlogic.gdx.graphics.Color)
    268:270:public void setColor(float,float,float,float)
    275:276:public void setColor(float)
    280:286:public com.badlogic.gdx.graphics.Color getColor()
    313:433:public void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,float,float,float,float,float,int,int,int,int,boolean,boolean)
    452:500:public void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,int,int,int,int,boolean,boolean)
    513:549:public void draw(com.badlogic.gdx.graphics.Texture,float,float,int,int,int,int)
    561:593:public void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,float,float,float,float)
    600:632:public void draw(com.badlogic.gdx.graphics.Texture,float,float)
    636:673:public void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float)
    705:706:public void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float)
    710:748:public void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float)
    756:866:public void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float,float,float,float,float,float)
    876:1002:public void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float,float,float,float,float,float,boolean)
    1006:1007:public void flush()
    1046:1049:public void disableBlending()
    1053:1056:public void enableBlending()
    1063:1066:public void setBlendFunction(int,int)
    1078:1078:public com.badlogic.gdx.math.Matrix4 getProjectionMatrix()
    1084:1084:public com.badlogic.gdx.math.Matrix4 getTransformMatrix()
    1091:1094:public void setProjectionMatrix(com.badlogic.gdx.math.Matrix4)
    1101:1104:public void setTransformMatrix(com.badlogic.gdx.math.Matrix4)
    1145:1160:public void setShader(com.badlogic.gdx.graphics.glutils.ShaderProgram)
com.badlogic.gdx.graphics.g2d.SpriteCache
com.badlogic.gdx.graphics.g2d.SpriteCache$Cache
com.badlogic.gdx.graphics.g2d.TextureAtlas:
    202:203:public TextureAtlas(java.lang.String)
    207:208:public TextureAtlas(com.badlogic.gdx.files.FileHandle)
    213:214:public TextureAtlas(com.badlogic.gdx.files.FileHandle,boolean)
    217:218:public TextureAtlas(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle)
    222:223:public TextureAtlas(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle,boolean)
    226:228:public TextureAtlas(com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData)
    231:264:private void load(com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData)
    293:295:public com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion findRegion(java.lang.String)
    302:308:public com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion findRegion(java.lang.String,int)
    314:319:public com.badlogic.gdx.utils.Array findRegions(java.lang.String)
    326:329:public com.badlogic.gdx.utils.Array createSprites()
    337:339:public com.badlogic.gdx.graphics.g2d.Sprite createSprite(java.lang.String)
    347:353:public com.badlogic.gdx.graphics.g2d.Sprite createSprite(java.lang.String,int)
    361:366:public com.badlogic.gdx.utils.Array createSprites(java.lang.String)
    370:379:private com.badlogic.gdx.graphics.g2d.Sprite newSprite(com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion)
    387:397:public com.badlogic.gdx.graphics.g2d.NinePatch createPatch(java.lang.String)
    402:402:public java.util.Set getTextures()
    424:427:static java.lang.String readValue(java.io.BufferedReader)
    432:446:static int readTuple(java.io.BufferedReader)
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion:
    public boolean rotate
    public int[] splits
    public int[] pads
    498:510:public TextureAtlas$AtlasRegion(com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion)
    514:517:public void flip(boolean,boolean)
    522:522:public float getRotatedPackedWidth()
    528:528:public float getRotatedPackedHeight()
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasSprite
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData:
    final com.badlogic.gdx.utils.Array pages
    final com.badlogic.gdx.utils.Array regions
    96:184:public TextureAtlas$TextureAtlasData(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle,boolean)
    187:187:public com.badlogic.gdx.utils.Array getPages()
    191:191:public com.badlogic.gdx.utils.Array getRegions()
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Page
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Region:
    public com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Page page
    public java.lang.String name
    public float offsetX
    public float offsetY
    public int originalWidth
    public int originalHeight
    public boolean rotate
    public int left
    public int top
    public int width
    public int height
    public boolean flip
    public int[] splits
    public int[] pads
com.badlogic.gdx.graphics.g2d.TextureRegion:
    44:47:public TextureRegion(com.badlogic.gdx.graphics.Texture,int,int)
    56:59:public TextureRegion(com.badlogic.gdx.graphics.Texture,float,float,float,float)
    62:64:public TextureRegion(com.badlogic.gdx.graphics.g2d.TextureRegion)
    69:71:public TextureRegion(com.badlogic.gdx.graphics.g2d.TextureRegion,int,int,int,int)
    75:77:public void setRegion(com.badlogic.gdx.graphics.Texture)
    100:102:public void setRegion(com.badlogic.gdx.graphics.g2d.TextureRegion)
    106:108:public void setRegion(com.badlogic.gdx.graphics.g2d.TextureRegion,int,int,int,int)
    115:116:public void setTexture(com.badlogic.gdx.graphics.Texture)
    119:119:public float getU()
    123:125:public void setU(float)
    128:128:public float getV()
    132:134:public void setV(float)
    137:137:public float getU2()
    141:143:public void setU2(float)
    146:146:public float getV2()
    150:152:public void setV2(float)
    159:160:public void setRegionX(int)
    167:168:public void setRegionY(int)
    176:177:public void setRegionWidth(int)
    185:186:public void setRegionHeight(int)
    189:199:public void flip(boolean,boolean)
    202:202:public boolean isFlipX()
    206:206:public boolean isFlipY()
    214:224:public void scroll(float,float)
    235:252:public com.badlogic.gdx.graphics.g2d.TextureRegion[][] split(int,int)
    264:265:public static com.badlogic.gdx.graphics.g2d.TextureRegion[][] split(com.badlogic.gdx.graphics.Texture,int,int)
com.badlogic.gdx.graphics.g2d.freetype.FreeType:
    30:398:public FreeType()
    605:605:public static boolean selectSize(com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face,int)
    private static native boolean selectSize(long,int)
    613:613:public static boolean setCharSize(com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face,int,int,int,int)
    private static native boolean setCharSize(long,int,int,int,int)
    629:629:public static boolean loadGlyph(com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face,int,int)
    private static native boolean loadGlyph(long,int,int)
    653:653:public static boolean hasKerning(com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face)
    private static native boolean hasKerning(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Bitmap:
    343:343:public int getPitch()
    private static native int getPitch(long)
    382:382:public int getNumGray()
    private static native int getNumGray(long)
    390:390:public int getPixelMode()
    private static native int getPixelMode(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face:
    62:62:public int getFaceFlags()
    private static native int getFaceFlags(long)
    70:70:public int getStyleFlags()
    private static native int getStyleFlags(long)
    78:78:public int getNumGlyphs()
    private static native int getNumGlyphs(long)
    86:86:public int getAscender()
    private static native int getAscender(long)
    94:94:public int getDescender()
    private static native int getDescender(long)
    102:102:public int getHeight()
    private static native int getHeight(long)
    118:118:public int getMaxAdvanceHeight()
    private static native int getMaxAdvanceHeight(long)
    126:126:public int getUnderlinePosition()
    private static native int getUnderlinePosition(long)
    134:134:public int getUnderlineThickness()
    private static native int getUnderlineThickness(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphMetrics:
    404:404:public int getWidth()
    private static native int getWidth(long)
    420:420:public int getHoriBearingX()
    private static native int getHoriBearingX(long)
    428:428:public int getHoriBearingY()
    private static native int getHoriBearingY(long)
    444:444:public int getVertBearingX()
    private static native int getVertBearingX(long)
    452:452:public int getVertBearingY()
    private static native int getVertBearingY(long)
    460:460:public int getVertAdvance()
    private static native int getVertAdvance(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphSlot:
    256:256:public int getLinearHoriAdvance()
    private static native int getLinearHoriAdvance(long)
    264:264:public int getLinearVertAdvance()
    private static native int getLinearVertAdvance(long)
    272:272:public int getAdvanceX()
    private static native int getAdvanceX(long)
    280:280:public int getAdvanceY()
    private static native int getAdvanceY(long)
    288:288:public int getFormat()
    private static native int getFormat(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$SizeMetrics:
    178:178:public int getXppem()
    private static native int getXppem(long)
    186:186:public int getYppem()
    private static native int getYppem(long)
    194:194:public int getXScale()
    private static native int getXscale(long)
    202:202:public int getYscale()
    private static native int getYscale(long)
    234:234:public int getMaxAdvance()
    private static native int getMaxAdvance(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator:
    public static final java.lang.String DEFAULT_CHARS
    97:101:public int scaleForPixelHeight(int)
    113:158:public com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$GlyphAndBitmap generateGlyphAndBitmap(int,int,boolean)
    165:165:public com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeBitmapFontData generateData(int)
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$GlyphAndBitmap
com.badlogic.gdx.graphics.g2d.freetype.FreetypeBuild
com.badlogic.gdx.graphics.g3d.Model:
    87:88:public Model(com.badlogic.gdx.graphics.g3d.model.data.ModelData)
    343:344:public com.badlogic.gdx.math.collision.BoundingBox calculateBoundingBox(com.badlogic.gdx.math.collision.BoundingBox)
    350:353:public com.badlogic.gdx.math.collision.BoundingBox extendBoundingBox(com.badlogic.gdx.math.collision.BoundingBox)
    358:358:public com.badlogic.gdx.graphics.g3d.model.Animation getAnimation(java.lang.String)
    363:374:public com.badlogic.gdx.graphics.g3d.model.Animation getAnimation(java.lang.String,boolean)
    379:379:public com.badlogic.gdx.graphics.g3d.materials.Material getMaterial(java.lang.String)
    384:395:public com.badlogic.gdx.graphics.g3d.materials.Material getMaterial(java.lang.String,boolean)
com.badlogic.gdx.graphics.g3d.ModelBatch:
    56:59:public ModelBatch(com.badlogic.gdx.graphics.g3d.utils.ShaderProvider)
    63:64:public ModelBatch(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle)
    68:69:public ModelBatch(java.lang.String,java.lang.String)
    106:109:public void render(com.badlogic.gdx.graphics.g3d.Renderable)
    118:119:public void render(com.badlogic.gdx.graphics.g3d.RenderableProvider)
    128:129:public void render(java.lang.Iterable)
    152:153:public void render(java.lang.Iterable,com.badlogic.gdx.graphics.g3d.lights.Lights)
    164:165:public void render(com.badlogic.gdx.graphics.g3d.RenderableProvider,com.badlogic.gdx.graphics.g3d.Shader)
    176:177:public void render(java.lang.Iterable,com.badlogic.gdx.graphics.g3d.Shader)
    212:214:public void render(java.lang.Iterable,com.badlogic.gdx.graphics.g3d.lights.Lights,com.badlogic.gdx.graphics.g3d.Shader)
com.badlogic.gdx.graphics.g3d.ModelInstance:
    54:55:public ModelInstance(com.badlogic.gdx.graphics.g3d.Model,java.lang.String,boolean)
    62:63:public ModelInstance(com.badlogic.gdx.graphics.g3d.Model,com.badlogic.gdx.math.Matrix4,java.lang.String,boolean)
    71:72:public ModelInstance(com.badlogic.gdx.graphics.g3d.Model,java.lang.String,boolean,boolean)
    81:82:public ModelInstance(com.badlogic.gdx.graphics.g3d.Model,com.badlogic.gdx.math.Matrix4,java.lang.String,boolean,boolean)
    90:91:public ModelInstance(com.badlogic.gdx.graphics.g3d.Model,java.lang.String,boolean,boolean,boolean)
    99:115:public ModelInstance(com.badlogic.gdx.graphics.g3d.Model,com.badlogic.gdx.math.Matrix4,java.lang.String,boolean,boolean,boolean)
    136:137:public ModelInstance(com.badlogic.gdx.graphics.g3d.Model,com.badlogic.gdx.utils.Array)
    140:146:public ModelInstance(com.badlogic.gdx.graphics.g3d.Model,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.utils.Array)
    150:152:public ModelInstance(com.badlogic.gdx.graphics.g3d.Model,com.badlogic.gdx.math.Vector3)
    162:163:public ModelInstance(com.badlogic.gdx.graphics.g3d.Model,com.badlogic.gdx.math.Matrix4)
    167:168:public ModelInstance(com.badlogic.gdx.graphics.g3d.ModelInstance)
    171:177:public ModelInstance(com.badlogic.gdx.graphics.g3d.ModelInstance,com.badlogic.gdx.math.Matrix4)
    181:181:public com.badlogic.gdx.graphics.g3d.ModelInstance copy()
    207:217:private void copyNodes(com.badlogic.gdx.utils.Array,com.badlogic.gdx.utils.Array)
    318:318:public com.badlogic.gdx.graphics.g3d.Renderable getRenderable(com.badlogic.gdx.graphics.g3d.Renderable)
    323:323:public com.badlogic.gdx.graphics.g3d.Renderable getRenderable(com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.model.Node)
    388:388:public com.badlogic.gdx.graphics.g3d.model.Animation getAnimation(java.lang.String)
    393:404:public com.badlogic.gdx.graphics.g3d.model.Animation getAnimation(java.lang.String,boolean)
    409:409:public com.badlogic.gdx.graphics.g3d.materials.Material getMaterial(java.lang.String)
    414:425:public com.badlogic.gdx.graphics.g3d.materials.Material getMaterial(java.lang.String,boolean)
com.badlogic.gdx.graphics.g3d.Shader:
    public abstract int compareTo(com.badlogic.gdx.graphics.g3d.Shader)
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy$1
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy$2
com.badlogic.gdx.graphics.g3d.decals.Decal
com.badlogic.gdx.graphics.g3d.decals.DecalBatch
com.badlogic.gdx.graphics.g3d.decals.DecalBatch$1
com.badlogic.gdx.graphics.g3d.decals.DecalMaterial
com.badlogic.gdx.graphics.g3d.decals.DefaultGroupStrategy
com.badlogic.gdx.graphics.g3d.decals.GroupPlug
com.badlogic.gdx.graphics.g3d.decals.GroupStrategy
com.badlogic.gdx.graphics.g3d.decals.PluggableGroupStrategy
com.badlogic.gdx.graphics.g3d.decals.SimpleOrthoGroupStrategy
com.badlogic.gdx.graphics.g3d.decals.SimpleOrthoGroupStrategy$Comparator
com.badlogic.gdx.graphics.g3d.lights.AmbientCubemap:
    18:23:public AmbientCubemap(float[])
    26:27:public AmbientCubemap(com.badlogic.gdx.graphics.g3d.lights.AmbientCubemap)
    30:32:public com.badlogic.gdx.graphics.g3d.lights.AmbientCubemap set(float[])
    36:36:public com.badlogic.gdx.graphics.g3d.lights.AmbientCubemap set(com.badlogic.gdx.graphics.g3d.lights.AmbientCubemap)
    53:54:public com.badlogic.gdx.graphics.Color getColor(com.badlogic.gdx.graphics.Color,int)
    58:60:public com.badlogic.gdx.graphics.g3d.lights.AmbientCubemap clear()
    70:75:public com.badlogic.gdx.graphics.g3d.lights.AmbientCubemap add(float,float,float)
    79:79:public com.badlogic.gdx.graphics.g3d.lights.AmbientCubemap add(com.badlogic.gdx.graphics.Color)
    109:109:public com.badlogic.gdx.graphics.g3d.lights.AmbientCubemap add(float,float,float,com.badlogic.gdx.math.Vector3)
    113:113:public com.badlogic.gdx.graphics.g3d.lights.AmbientCubemap add(com.badlogic.gdx.graphics.Color,float,float,float)
    117:117:public com.badlogic.gdx.graphics.g3d.lights.AmbientCubemap add(com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.graphics.g3d.lights.DirectionalLight:
    22:25:public com.badlogic.gdx.graphics.g3d.lights.DirectionalLight set(float,float,float,com.badlogic.gdx.math.Vector3)
    29:32:public com.badlogic.gdx.graphics.g3d.lights.DirectionalLight set(com.badlogic.gdx.graphics.Color,float,float,float)
com.badlogic.gdx.graphics.g3d.lights.Lights:
    15:17:public Lights(com.badlogic.gdx.graphics.Color)
    19:21:public Lights(float,float,float)
    24:26:public varargs Lights(com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.g3d.lights.BaseLight[])
    29:32:public com.badlogic.gdx.graphics.g3d.lights.Lights clear()
    36:38:public varargs com.badlogic.gdx.graphics.g3d.lights.Lights add(com.badlogic.gdx.graphics.g3d.lights.BaseLight[])
    42:44:public com.badlogic.gdx.graphics.g3d.lights.Lights add(com.badlogic.gdx.utils.Array)
com.badlogic.gdx.graphics.g3d.lights.PointLight:
    24:28:public com.badlogic.gdx.graphics.g3d.lights.PointLight set(float,float,float,com.badlogic.gdx.math.Vector3,float)
    32:36:public com.badlogic.gdx.graphics.g3d.lights.PointLight set(com.badlogic.gdx.graphics.Color,float,float,float,float)
com.badlogic.gdx.graphics.g3d.loader.G3dModelLoader
com.badlogic.gdx.graphics.g3d.loader.ObjLoader:
    87:87:public com.badlogic.gdx.graphics.g3d.Model loadObj(com.badlogic.gdx.files.FileHandle)
    97:97:public com.badlogic.gdx.graphics.g3d.Model loadObj(com.badlogic.gdx.files.FileHandle,boolean)
    102:102:public com.badlogic.gdx.graphics.g3d.Model loadModel(com.badlogic.gdx.files.FileHandle,boolean)
com.badlogic.gdx.graphics.g3d.loader.ObjLoader$ObjLoaderParameters:
    64:66:public ObjLoader$ObjLoaderParameters(boolean)
com.badlogic.gdx.graphics.g3d.materials.BlendingAttribute:
    public static final java.lang.String Alias
    31:32:public BlendingAttribute(int,int)
com.badlogic.gdx.graphics.g3d.materials.ColorAttribute:
    public static final java.lang.String DiffuseAlias
    public static final java.lang.String SpecularAlias
    public static final java.lang.String AmbientAlias
    public static final java.lang.String EmissiveAlias
    28:28:public static final com.badlogic.gdx.graphics.g3d.materials.ColorAttribute createDiffuse(float,float,float,float)
    32:32:public static final com.badlogic.gdx.graphics.g3d.materials.ColorAttribute createSpecular(com.badlogic.gdx.graphics.Color)
    36:36:public static final com.badlogic.gdx.graphics.g3d.materials.ColorAttribute createSpecular(float,float,float,float)
    54:56:public ColorAttribute(long,float,float,float,float)
com.badlogic.gdx.graphics.g3d.materials.FloatAttribute:
    public static final java.lang.String ShininessAlias
    public static final java.lang.String AlphaTestAlias
    11:11:public static com.badlogic.gdx.graphics.g3d.materials.FloatAttribute createShininess(float)
    18:18:public static com.badlogic.gdx.graphics.g3d.materials.FloatAttribute createAlphaTest(float)
    24:25:public FloatAttribute(long)
com.badlogic.gdx.graphics.g3d.materials.IntAttribute:
    public static final java.lang.String CullFaceAlias
    10:10:public static com.badlogic.gdx.graphics.g3d.materials.IntAttribute createCullFace(int)
    16:17:public IntAttribute(long)
com.badlogic.gdx.graphics.g3d.materials.Material:
    86:88:public varargs Material(com.badlogic.gdx.graphics.g3d.materials.Material$Attribute[])
    91:93:public varargs Material(java.lang.String,com.badlogic.gdx.graphics.g3d.materials.Material$Attribute[])
    96:98:public Material(com.badlogic.gdx.utils.Array)
    101:103:public Material(java.lang.String,com.badlogic.gdx.utils.Array)
    119:120:private final void disable(long)
    157:159:public final varargs void set(com.badlogic.gdx.graphics.g3d.materials.Material$Attribute[])
    164:166:public final void set(com.badlogic.gdx.utils.Array)
    171:179:public final void remove(long)
    184:188:public final com.badlogic.gdx.graphics.g3d.materials.Material$Attribute get(long)
    194:197:public final com.badlogic.gdx.utils.Array get(com.badlogic.gdx.utils.Array,long)
    202:204:public final void clear()
    208:208:public int size()
com.badlogic.gdx.graphics.g3d.materials.TextureAttribute:
    public static final java.lang.String DiffuseAlias
    public static final java.lang.String SpecularAlias
    public static final java.lang.String BumpAlias
    public static final java.lang.String NormalAlias
    29:29:public static com.badlogic.gdx.graphics.g3d.materials.TextureAttribute createDiffuse(com.badlogic.gdx.graphics.Texture)
    33:33:public static com.badlogic.gdx.graphics.g3d.materials.TextureAttribute createSpecular(com.badlogic.gdx.graphics.Texture)
    46:47:public TextureAttribute(long)
    50:51:public TextureAttribute(long,com.badlogic.gdx.graphics.Texture)
com.badlogic.gdx.graphics.g3d.model.Node:
    102:103:public com.badlogic.gdx.math.collision.BoundingBox calculateBoundingBox(com.badlogic.gdx.math.collision.BoundingBox)
    123:123:public com.badlogic.gdx.graphics.g3d.model.Node getChild(java.lang.String,boolean,boolean)
com.badlogic.gdx.graphics.g3d.model.data.ModelData:
    public java.lang.String id
    25:31:public void addMesh(com.badlogic.gdx.graphics.g3d.model.data.ModelMesh)
com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial:
    public com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial$MaterialType type
com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial$MaterialType
com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart:
    public int[][] uvMapping
com.badlogic.gdx.graphics.g3d.model.data.ModelTexture:
    public static final int USAGE_UNKNOWN
    public static final int USAGE_NONE
    public static final int USAGE_DIFFUSE
    public static final int USAGE_EMISSIVE
    public static final int USAGE_AMBIENT
    public static final int USAGE_SPECULAR
    public static final int USAGE_SHININESS
    public static final int USAGE_NORMAL
    public static final int USAGE_BUMP
    public static final int USAGE_TRANSPARENCY
    public static final int USAGE_REFLECTION
    public java.lang.String id
    public com.badlogic.gdx.math.Vector2 uvTranslation
    public com.badlogic.gdx.math.Vector2 uvScaling
com.badlogic.gdx.graphics.g3d.shaders.BaseShader:
    public static final int VERTEX_ATTRIBUTE
    public static final int GLOBAL_UNIFORM
    public static final int LOCAL_UNIFORM
    120:120:public java.lang.Iterable getInputs()
    217:220:public final boolean set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input,com.badlogic.gdx.math.Vector2)
    238:241:public final boolean set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input,float,float)
    245:248:public final boolean set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input,float,float,float)
    259:262:public final boolean set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input,int)
    266:269:public final boolean set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input,int,int)
    273:276:public final boolean set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input,int,int,int)
    280:283:public final boolean set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input,int,int,int,int)
com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input:
    71:72:public BaseShader$Input(int,java.lang.String,long,long,com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input$Setter)
    79:80:public BaseShader$Input(int,java.lang.String,long,com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input$Setter)
    87:88:public BaseShader$Input(int,java.lang.String,com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Input$Setter)
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader:
    protected static final long tangentAttribute
    protected static final long binormalAttribute
    private com.badlogic.gdx.graphics.Camera camera
    117:118:public DefaultShader(com.badlogic.gdx.graphics.g3d.materials.Material,com.badlogic.gdx.graphics.VertexAttributes,boolean,boolean,int,int,int,int)
    121:122:public DefaultShader(long,long,boolean,boolean,int,int,int,int)
    248:248:private final boolean can(long)
    253:255:public int compareTo(com.badlogic.gdx.graphics.g3d.Shader)
com.badlogic.gdx.graphics.g3d.shaders.GLES10Shader:
    54:54:public int compareTo(com.badlogic.gdx.graphics.g3d.Shader)
com.badlogic.gdx.graphics.g3d.shaders.graph.ShaderConnection
com.badlogic.gdx.graphics.g3d.shaders.graph.ShaderDefine
com.badlogic.gdx.graphics.g3d.shaders.graph.ShaderGraph
com.badlogic.gdx.graphics.g3d.shaders.graph.ShaderInput
com.badlogic.gdx.graphics.g3d.shaders.graph.ShaderInput$ShaderInputQualifier
com.badlogic.gdx.graphics.g3d.shaders.graph.ShaderNode
com.badlogic.gdx.graphics.g3d.shaders.graph.ShaderNode$ShaderNodeType
com.badlogic.gdx.graphics.g3d.shaders.graph.ShaderNodeBuilder
com.badlogic.gdx.graphics.g3d.shaders.graph.ShaderOutput
com.badlogic.gdx.graphics.g3d.shaders.graph.UniformNode
com.badlogic.gdx.graphics.g3d.utils.AnimationController
com.badlogic.gdx.graphics.g3d.utils.AnimationController$1
com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc
com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener
com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController
com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$1
com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$Transform
com.badlogic.gdx.graphics.g3d.utils.CameraInputController
com.badlogic.gdx.graphics.g3d.utils.DefaultShaderProvider:
    20:21:public DefaultShaderProvider(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.graphics.g3d.utils.DefaultTextureBinder:
    public static final int ROUNDROBIN
    public static final int WEIGHTED
    public static final int MAX_GLES_UNITS
    40:41:public DefaultTextureBinder(int)
    169:169:public final int getBindCount()
    172:172:public final int getReuseCount()
    175:175:public final void resetCounts()
com.badlogic.gdx.graphics.g3d.utils.FirstPersonCameraController
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder:
    113:114:public void begin(long)
    125:126:public void begin(long,int)
    212:212:public com.badlogic.gdx.graphics.g3d.model.MeshPart getMeshPart()
    231:231:private com.badlogic.gdx.math.Vector3 tmp(com.badlogic.gdx.math.Vector3)
    241:243:public void setColor(float,float,float,float)
    284:286:public short vertex(float[])
    297:298:public void index(short)
    302:305:public void index(short,short)
    309:313:public void index(short,short,short)
    350:353:public void line(short,short)
    357:358:public void line(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo)
    362:363:public void line(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    367:368:public void line(float,float,float,float,float,float)
    372:373:public void line(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color)
    377:383:public void triangle(short,short,short)
    387:388:public void triangle(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo)
    392:393:public void triangle(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    397:398:public void triangle(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color)
    427:431:public void rect(float,float,float,float,float,float,float,float,float,float,float,float,float,float,float)
    435:445:public void patch(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,int,int)
    449:454:public void patch(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int,int)
    515:516:public void box(float,float,float,float,float,float)
    520:521:public void circle(float,float,float,float,float,float,float,float,int)
    525:526:public void circle(float,float,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int)
    530:531:public void circle(float,float,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int)
    535:536:public void circle(float,float,float,float,float,float,float,float,float,float,float,float,float,float,int)
    540:546:public void circle(float,float,float,float,float,float,float,float,int,float,float)
    550:551:public void circle(float,float,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int,float,float)
    555:556:public void circle(float,float,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int,float,float)
    560:581:public void circle(float,float,float,float,float,float,float,float,float,float,float,float,float,float,int,float,float)
    585:586:public void cylinder(float,float,float,int)
    590:591:public void cylinder(float,float,float,int,float,float)
    596:630:public void cylinder(float,float,float,int,float,float,boolean)
    634:635:public void cone(float,float,float,int)
    640:665:public void cone(float,float,float,int,float,float)
    669:670:public void sphere(float,float,float,int,int)
    674:675:public void sphere(com.badlogic.gdx.math.Matrix4,float,float,float,int,int)
    679:680:public void sphere(float,float,float,int,int,float,float,float,float)
    685:716:public void sphere(com.badlogic.gdx.math.Matrix4,float,float,float,int,int,float,float,float,float)
    720:726:public void capsule(float,float,int)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder:
    public abstract com.badlogic.gdx.graphics.g3d.model.MeshPart getMeshPart()
    public abstract com.badlogic.gdx.graphics.VertexAttributes getAttributes()
    public abstract void setColor(com.badlogic.gdx.graphics.Color)
    public abstract void setColor(float,float,float,float)
    public abstract short vertex(float[])
    public abstract short vertex(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector2)
    public abstract short vertex(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo)
    public abstract void index(short)
    public abstract void index(short,short)
    public abstract void index(short,short,short)
    public abstract void index(short,short,short,short)
    public abstract void index(short,short,short,short,short,short)
    public abstract void index(short,short,short,short,short,short,short,short)
    public abstract void line(short,short)
    public abstract void line(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo)
    public abstract void line(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    public abstract void line(float,float,float,float,float,float)
    public abstract void line(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color)
    public abstract void triangle(short,short,short)
    public abstract void triangle(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo)
    public abstract void triangle(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    public abstract void triangle(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color)
    public abstract void rect(short,short,short,short)
    public abstract void rect(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo)
    public abstract void rect(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    public abstract void rect(float,float,float,float,float,float,float,float,float,float,float,float,float,float,float)
    public abstract void patch(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,int,int)
    public abstract void patch(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int,int)
    public abstract void box(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo)
    public abstract void box(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    public abstract void box(com.badlogic.gdx.math.Matrix4)
    public abstract void box(float,float,float,float,float,float)
    public abstract void circle(float,float,float,float,float,float,float,float,int)
    public abstract void circle(float,float,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int)
    public abstract void circle(float,float,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int)
    public abstract void circle(float,float,float,float,float,float,float,float,float,float,float,float,float,float,int)
    public abstract void circle(float,float,float,float,float,float,float,float,int,float,float)
    public abstract void circle(float,float,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int,float,float)
    public abstract void circle(float,float,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int,float,float)
    public abstract void circle(float,float,float,float,float,float,float,float,float,float,float,float,float,float,int,float,float)
    public abstract void cylinder(float,float,float,int)
    public abstract void cylinder(float,float,float,int,float,float)
    public abstract void cylinder(float,float,float,int,float,float,boolean)
    public abstract void cone(float,float,float,int)
    public abstract void cone(float,float,float,int,float,float)
    public abstract void sphere(float,float,float,int,int)
    public abstract void sphere(com.badlogic.gdx.math.Matrix4,float,float,float,int,int)
    public abstract void sphere(float,float,float,int,int,float,float,float,float)
    public abstract void sphere(com.badlogic.gdx.math.Matrix4,float,float,float,int,int,float,float,float,float)
    public abstract void capsule(float,float,int)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo:
    151:159:public com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo set(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo)
    162:164:public com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo setPos(float,float,float)
    167:169:public com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo setPos(com.badlogic.gdx.math.Vector3)
    172:174:public com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo setNor(float,float,float)
    177:179:public com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo setNor(com.badlogic.gdx.math.Vector3)
    182:184:public com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo setCol(float,float,float,float)
    187:189:public com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo setCol(com.badlogic.gdx.graphics.Color)
    197:199:public com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo setUV(com.badlogic.gdx.math.Vector2)
    202:210:public com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo lerp(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,float)
com.badlogic.gdx.graphics.g3d.utils.ModelBuilder:
    101:106:public com.badlogic.gdx.graphics.g3d.model.Node node(java.lang.String,com.badlogic.gdx.graphics.g3d.Model)
    111:114:public void manage(com.badlogic.gdx.utils.Disposable)
    130:137:public com.badlogic.gdx.graphics.g3d.model.MeshPart part(java.lang.String,com.badlogic.gdx.graphics.Mesh,int,int,int,com.badlogic.gdx.graphics.g3d.materials.Material)
    145:145:public com.badlogic.gdx.graphics.g3d.model.MeshPart part(java.lang.String,com.badlogic.gdx.graphics.Mesh,int,com.badlogic.gdx.graphics.g3d.materials.Material)
    192:192:public com.badlogic.gdx.graphics.g3d.Model createRect(float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,com.badlogic.gdx.graphics.g3d.materials.Material,long)
    201:203:public com.badlogic.gdx.graphics.g3d.Model createRect(float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,int,com.badlogic.gdx.graphics.g3d.materials.Material,long)
    212:212:public com.badlogic.gdx.graphics.g3d.Model createCylinder(float,float,float,int,com.badlogic.gdx.graphics.g3d.materials.Material,long)
    221:221:public com.badlogic.gdx.graphics.g3d.Model createCylinder(float,float,float,int,int,com.badlogic.gdx.graphics.g3d.materials.Material,long)
    230:230:public com.badlogic.gdx.graphics.g3d.Model createCylinder(float,float,float,int,com.badlogic.gdx.graphics.g3d.materials.Material,long,float,float)
    239:241:public com.badlogic.gdx.graphics.g3d.Model createCylinder(float,float,float,int,int,com.badlogic.gdx.graphics.g3d.materials.Material,long,float,float)
    250:250:public com.badlogic.gdx.graphics.g3d.Model createCone(float,float,float,int,com.badlogic.gdx.graphics.g3d.materials.Material,long)
    259:259:public com.badlogic.gdx.graphics.g3d.Model createCone(float,float,float,int,int,com.badlogic.gdx.graphics.g3d.materials.Material,long)
    268:268:public com.badlogic.gdx.graphics.g3d.Model createCone(float,float,float,int,com.badlogic.gdx.graphics.g3d.materials.Material,long,float,float)
    277:279:public com.badlogic.gdx.graphics.g3d.Model createCone(float,float,float,int,int,com.badlogic.gdx.graphics.g3d.materials.Material,long,float,float)
    288:288:public com.badlogic.gdx.graphics.g3d.Model createSphere(float,float,float,int,int,com.badlogic.gdx.graphics.g3d.materials.Material,long)
    297:297:public com.badlogic.gdx.graphics.g3d.Model createSphere(float,float,float,int,int,int,com.badlogic.gdx.graphics.g3d.materials.Material,long)
    306:306:public com.badlogic.gdx.graphics.g3d.Model createSphere(float,float,float,int,int,com.badlogic.gdx.graphics.g3d.materials.Material,long,float,float,float,float)
    315:317:public com.badlogic.gdx.graphics.g3d.Model createSphere(float,float,float,int,int,int,com.badlogic.gdx.graphics.g3d.materials.Material,long,float,float,float,float)
    326:326:public com.badlogic.gdx.graphics.g3d.Model createCapsule(float,float,int,com.badlogic.gdx.graphics.g3d.materials.Material,long)
    335:337:public com.badlogic.gdx.graphics.g3d.Model createCapsule(float,float,int,int,com.badlogic.gdx.graphics.g3d.materials.Material,long)
    368:368:public static com.badlogic.gdx.graphics.g3d.Model createFromMesh(com.badlogic.gdx.graphics.Mesh,int,com.badlogic.gdx.graphics.g3d.materials.Material)
    372:392:public static com.badlogic.gdx.graphics.g3d.Model createFromMesh(com.badlogic.gdx.graphics.Mesh,int,int,int,com.badlogic.gdx.graphics.g3d.materials.Material)
    396:399:public static com.badlogic.gdx.graphics.g3d.Model createFromMesh(float[],com.badlogic.gdx.graphics.VertexAttribute[],short[],int,com.badlogic.gdx.graphics.g3d.materials.Material)
com.badlogic.gdx.graphics.g3d.utils.TextureBinder:
    public abstract int getBindCount()
    public abstract int getReuseCount()
    public abstract void resetCounts()
com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor:
    14:16:public TextureDescriptor(com.badlogic.gdx.graphics.Texture,int,int,int,int)
    26:31:public void set(com.badlogic.gdx.graphics.Texture,int,int,int,int)
    34:39:public void set(com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor)
com.badlogic.gdx.graphics.glutils.ETC1:
    37:44:public ETC1()
    157:160:public static com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data encodeImage(com.badlogic.gdx.graphics.Pixmap)
    168:171:public static com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data encodeImagePKM(com.badlogic.gdx.graphics.Pixmap)
    public static native int getCompressedDataSize(int,int)
    public static native void formatHeader(java.nio.ByteBuffer,int,int,int)
    private static native java.nio.ByteBuffer encodeImage(java.nio.ByteBuffer,int,int,int,int)
    private static native java.nio.ByteBuffer encodeImagePKM(java.nio.ByteBuffer,int,int,int,int)
com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data:
    54:60:public ETC1$ETC1Data(int,int,java.nio.ByteBuffer,int)
    105:129:public void write(com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.graphics.glutils.ETC1TextureData:
    38:39:public ETC1TextureData(com.badlogic.gdx.files.FileHandle)
    46:49:public ETC1TextureData(com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data,boolean)
com.badlogic.gdx.graphics.glutils.FileTextureData:
    128:128:public com.badlogic.gdx.files.FileHandle getFileHandle()
com.badlogic.gdx.graphics.glutils.FloatFrameBuffer
com.badlogic.gdx.graphics.glutils.FloatTextureData
com.badlogic.gdx.graphics.glutils.FrameBuffer:
    93:101:public FrameBuffer(com.badlogic.gdx.graphics.Pixmap$Format,int,int,boolean)
    212:214:public void begin()
    218:220:public void end()
    223:227:private void addManagedFrameBuffer(com.badlogic.gdx.Application,com.badlogic.gdx.graphics.glutils.FrameBuffer)
    259:259:public com.badlogic.gdx.graphics.Texture getColorBufferTexture()
    264:264:public int getHeight()
    269:269:public int getWidth()
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer10
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer20
com.badlogic.gdx.graphics.glutils.IndexArray:
    48:48:public int getNumMaxIndices()
com.badlogic.gdx.graphics.glutils.IndexBufferObject:
    84:93:public IndexBufferObject(int)
    114:114:public int getNumMaxIndices()
com.badlogic.gdx.graphics.glutils.IndexBufferObjectSubData:
    84:93:public IndexBufferObjectSubData(int)
    120:120:public int getNumMaxIndices()
com.badlogic.gdx.graphics.glutils.IndexData:
    public abstract int getNumMaxIndices()
com.badlogic.gdx.graphics.glutils.MipMapGenerator:
    29:29:public MipMapGenerator()
    33:34:public static void setUseHardwareMipMap(boolean)
com.badlogic.gdx.graphics.glutils.ShaderProgram:
    public static final java.lang.String POSITION_ATTRIBUTE
    public static final java.lang.String NORMAL_ATTRIBUTE
    public static final java.lang.String COLOR_ATTRIBUTE
    public static final java.lang.String TEXCOORD_ATTRIBUTE
    public static final java.lang.String TANGENT_ATTRIBUTE
    public static final java.lang.String BINORMAL_ATTRIBUTE
    171:172:public ShaderProgram(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle)
    325:329:public void setUniformi(java.lang.String,int,int)
    332:335:public void setUniformi(int,int,int)
    345:349:public void setUniformi(java.lang.String,int,int,int)
    352:355:public void setUniformi(int,int,int,int)
    366:370:public void setUniformi(java.lang.String,int,int,int,int)
    373:376:public void setUniformi(int,int,int,int,int)
    384:388:public void setUniformf(java.lang.String,float)
    403:407:public void setUniformf(java.lang.String,float,float)
    410:413:public void setUniformf(int,float,float)
    423:427:public void setUniformf(java.lang.String,float,float,float)
    444:448:public void setUniformf(java.lang.String,float,float,float,float)
    457:464:public void setUniform1fv(java.lang.String,float[],int,int)
    467:473:public void setUniform1fv(int,float[],int,int)
    476:483:public void setUniform2fv(java.lang.String,float[],int,int)
    486:492:public void setUniform2fv(int,float[],int,int)
    495:502:public void setUniform3fv(java.lang.String,float[],int,int)
    514:521:public void setUniform4fv(java.lang.String,float[],int,int)
    524:530:public void setUniform4fv(int,float[],int,int)
    574:575:public void setUniformMatrix(java.lang.String,com.badlogic.gdx.math.Matrix3)
    584:591:public void setUniformMatrix(java.lang.String,com.badlogic.gdx.math.Matrix3,boolean)
    613:618:public void setUniformMatrix3fv(java.lang.String,java.nio.FloatBuffer,int,boolean)
    627:632:public void setUniformMatrix4fv(java.lang.String,java.nio.FloatBuffer,int,boolean)
    644:651:public void setUniformMatrix4fv(java.lang.String,float[],int,int)
    659:660:public void setUniformf(java.lang.String,com.badlogic.gdx.math.Vector2)
    663:664:public void setUniformf(int,com.badlogic.gdx.math.Vector2)
    672:673:public void setUniformf(java.lang.String,com.badlogic.gdx.math.Vector3)
    685:686:public void setUniformf(java.lang.String,com.badlogic.gdx.graphics.Color)
    703:708:public void setVertexAttribute(java.lang.String,int,int,boolean,int,java.nio.Buffer)
    727:732:public void setVertexAttribute(java.lang.String,int,int,boolean,int,int)
    786:791:public void enableVertexAttribute(java.lang.String)
    851:854:public void setAttributef(java.lang.String,float,float,float,float)
    910:910:public boolean hasAttribute(java.lang.String)
    916:920:public int getAttributeType(java.lang.String)
    936:940:public int getAttributeSize(java.lang.String)
    946:946:public boolean hasUniform(java.lang.String)
    952:956:public int getUniformType(java.lang.String)
    962:966:public int getUniformLocation(java.lang.String)
    972:976:public int getUniformSize(java.lang.String)
    981:981:public java.lang.String[] getAttributes()
    986:986:public java.lang.String[] getUniforms()
    993:993:public java.lang.String getVertexShaderSource()
    1000:1000:public java.lang.String getFragmentShaderSource()
com.badlogic.gdx.graphics.glutils.ShapeRenderer
com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType
com.badlogic.gdx.graphics.glutils.VertexArray:
    83:83:public int getNumVertices()
    88:88:public int getNumMaxVertices()
    182:183:public void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram)
    231:232:public void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram)
com.badlogic.gdx.graphics.glutils.VertexBufferObject:
    110:110:public int getNumVertices()
    115:115:public int getNumMaxVertices()
    203:204:public void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram)
    290:291:public void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram)
com.badlogic.gdx.graphics.glutils.VertexBufferObjectSubData:
    118:118:public int getNumVertices()
    123:123:public int getNumMaxVertices()
    221:222:public void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram)
    308:309:public void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram)
    332:334:public void invalidate()
    361:361:public int getBufferHandle()
com.badlogic.gdx.graphics.glutils.VertexData:
    public abstract int getNumVertices()
    public abstract int getNumMaxVertices()
    public abstract void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram)
    public abstract void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram)
com.badlogic.gdx.input.GestureDetector
com.badlogic.gdx.input.GestureDetector$1
com.badlogic.gdx.input.GestureDetector$GestureAdapter
com.badlogic.gdx.input.GestureDetector$GestureListener
com.badlogic.gdx.input.GestureDetector$VelocityTracker
com.badlogic.gdx.input.RemoteInput
com.badlogic.gdx.input.RemoteInput$EventTrigger
com.badlogic.gdx.input.RemoteInput$KeyEvent
com.badlogic.gdx.input.RemoteInput$RemoteInputListener
com.badlogic.gdx.input.RemoteInput$TouchEvent
com.badlogic.gdx.input.RemoteSender
com.badlogic.gdx.maps.ImageResolver
com.badlogic.gdx.maps.ImageResolver$AssetManagerImageResolver
com.badlogic.gdx.maps.ImageResolver$DirectImageResolver
com.badlogic.gdx.maps.ImageResolver$TextureAtlasImageResolver
com.badlogic.gdx.maps.Map
com.badlogic.gdx.maps.MapLayer
com.badlogic.gdx.maps.MapLayers
com.badlogic.gdx.maps.MapObject
com.badlogic.gdx.maps.MapObjects
com.badlogic.gdx.maps.MapProperties
com.badlogic.gdx.maps.MapRenderer
com.badlogic.gdx.maps.objects.CircleMapObject
com.badlogic.gdx.maps.objects.EllipseMapObject
com.badlogic.gdx.maps.objects.PolygonMapObject
com.badlogic.gdx.maps.objects.PolylineMapObject
com.badlogic.gdx.maps.objects.RectangleMapObject
com.badlogic.gdx.maps.objects.TextureMapObject
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver$AssetManagerAtlasResolver
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver$DirectAtlasResolver
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasTiledMapLoaderParameters
com.badlogic.gdx.maps.tiled.TideMapLoader
com.badlogic.gdx.maps.tiled.TideMapLoader$Parameters
com.badlogic.gdx.maps.tiled.TiledMap
com.badlogic.gdx.maps.tiled.TiledMapRenderer
com.badlogic.gdx.maps.tiled.TiledMapTile
com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode
com.badlogic.gdx.maps.tiled.TiledMapTileLayer
com.badlogic.gdx.maps.tiled.TiledMapTileLayer$Cell
com.badlogic.gdx.maps.tiled.TiledMapTileSet
com.badlogic.gdx.maps.tiled.TiledMapTileSets
com.badlogic.gdx.maps.tiled.TmxMapLoader
com.badlogic.gdx.maps.tiled.TmxMapLoader$Parameters
com.badlogic.gdx.maps.tiled.renderers.BatchTiledMapRenderer
com.badlogic.gdx.maps.tiled.renderers.HexagonalTiledMapRenderer
com.badlogic.gdx.maps.tiled.renderers.IsometricTiledMapRenderer
com.badlogic.gdx.maps.tiled.renderers.OrthogonalTiledMapRenderer
com.badlogic.gdx.maps.tiled.tiles.AnimatedTiledMapTile
com.badlogic.gdx.maps.tiled.tiles.StaticTiledMapTile
com.badlogic.gdx.math.BSpline
com.badlogic.gdx.math.Bezier
com.badlogic.gdx.math.Bresenham2
com.badlogic.gdx.math.Bresenham2$1
com.badlogic.gdx.math.CatmullRomSpline
com.badlogic.gdx.math.Circle
com.badlogic.gdx.math.EarClippingTriangulator
com.badlogic.gdx.math.Ellipse
com.badlogic.gdx.math.FloatCounter
com.badlogic.gdx.math.Frustum:
    84:88:public boolean pointInFrustum(com.badlogic.gdx.math.Vector3)
    97:100:public boolean sphereInFrustum(com.badlogic.gdx.math.Vector3,float)
    109:112:public boolean sphereInFrustumWithoutNearFar(com.badlogic.gdx.math.Vector3,float)
    120:132:public boolean boundsInFrustum(com.badlogic.gdx.math.collision.BoundingBox)
com.badlogic.gdx.math.GridPoint2
com.badlogic.gdx.math.GridPoint3
com.badlogic.gdx.math.Interpolation
com.badlogic.gdx.math.Interpolation$1
com.badlogic.gdx.math.Interpolation$2
com.badlogic.gdx.math.Interpolation$3
com.badlogic.gdx.math.Interpolation$4
com.badlogic.gdx.math.Interpolation$5
com.badlogic.gdx.math.Interpolation$6
com.badlogic.gdx.math.Interpolation$7
com.badlogic.gdx.math.Interpolation$8
com.badlogic.gdx.math.Interpolation$Bounce
com.badlogic.gdx.math.Interpolation$BounceIn
com.badlogic.gdx.math.Interpolation$BounceOut
com.badlogic.gdx.math.Interpolation$Elastic
com.badlogic.gdx.math.Interpolation$ElasticIn
com.badlogic.gdx.math.Interpolation$ElasticOut
com.badlogic.gdx.math.Interpolation$Exp
com.badlogic.gdx.math.Interpolation$ExpIn
com.badlogic.gdx.math.Interpolation$ExpOut
com.badlogic.gdx.math.Interpolation$Pow
com.badlogic.gdx.math.Interpolation$PowIn
com.badlogic.gdx.math.Interpolation$PowOut
com.badlogic.gdx.math.Interpolation$Swing
com.badlogic.gdx.math.Interpolation$SwingIn
com.badlogic.gdx.math.Interpolation$SwingOut
com.badlogic.gdx.math.Intersector:
    30:1134:public Intersector()
    39:57:public static float getLowestPositiveRoot(float,float,float)
    73:85:public static boolean isPointInTriangle(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    89:95:public static boolean intersectSegmentPlane(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Vector3)
    102:102:public static int pointLineSide(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
    108:108:public static int pointLineSide(float,float,float,float,float,float)
    117:129:public static boolean isPointInPolygon(java.util.List,com.badlogic.gdx.math.Vector2)
    140:157:public static float distanceLinePoint(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
    162:163:public static float distanceLinePoint(float,float,float,float,float,float)
    174:190:public static boolean intersectSegmentCircle(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,float)
    204:215:public static float intersectSegmentCircleDisplace(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,float,com.badlogic.gdx.math.Vector2)
    226:237:public static boolean intersectRayPlane(com.badlogic.gdx.math.collision.Ray,com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Vector3)
    252:264:public static float intersectLinePlane(float,float,float,float,float,float,com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Vector3)
    279:302:public static boolean intersectRayTriangle(com.badlogic.gdx.math.collision.Ray,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    318:358:public static boolean intersectRaySphere(com.badlogic.gdx.math.collision.Ray,com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Vector3)
    466:502:public static boolean intersectRayBoundsFast(com.badlogic.gdx.math.collision.Ray,com.badlogic.gdx.math.collision.BoundingBox)
    518:542:public static boolean intersectRayTriangles(com.badlogic.gdx.math.collision.Ray,float[],com.badlogic.gdx.math.Vector3)
    555:583:public static boolean intersectRayTriangles(com.badlogic.gdx.math.collision.Ray,float[],short[],int,com.badlogic.gdx.math.Vector3)
    594:616:public static boolean intersectRayTriangles(com.badlogic.gdx.math.collision.Ray,java.util.List,com.badlogic.gdx.math.Vector3)
    629:638:public static boolean intersectLines(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
    649:668:public static boolean intersectLinePolygon(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Polygon)
    680:692:public static boolean intersectSegments(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
    696:696:static float det(float,float,float,float)
    700:700:static double detd(double,double,double,double)
    704:704:public static boolean overlaps(com.badlogic.gdx.math.Circle,com.badlogic.gdx.math.Circle)
    708:708:public static boolean overlaps(com.badlogic.gdx.math.Rectangle,com.badlogic.gdx.math.Rectangle)
    712:732:public static boolean overlaps(com.badlogic.gdx.math.Circle,com.badlogic.gdx.math.Rectangle)
    741:741:public static boolean overlapConvexPolygons(com.badlogic.gdx.math.Polygon,com.badlogic.gdx.math.Polygon)
    752:752:public static boolean overlapConvexPolygons(com.badlogic.gdx.math.Polygon,com.badlogic.gdx.math.Polygon,com.badlogic.gdx.math.Intersector$MinimumTranslationVector)
    763:902:public static boolean overlapConvexPolygons(float[],float[],com.badlogic.gdx.math.Intersector$MinimumTranslationVector)
    925:1020:public static void splitTriangle(float[],com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Intersector$SplitTriangle)
    1025:1035:private static void splitEdge(float[],int,int,int,com.badlogic.gdx.math.Plane,float[],int)
    1038:1079:public static void main(java.lang.String[])
com.badlogic.gdx.math.Intersector$MinimumTranslationVector
com.badlogic.gdx.math.Intersector$SplitTriangle
com.badlogic.gdx.math.MathUtils:
    public static final float nanoToSec
    public static final float PI
    public static final float PI2
    private static final int SIN_BITS
    private static final int SIN_MASK
    private static final int SIN_COUNT
    private static final float radFull
    private static final float degFull
    private static final float radToIndex
    private static final float degToIndex
    public static final float radiansToDegrees
    public static final float radDeg
    public static final float degreesToRadians
    public static final float degRad
    private static final int ATAN2_BITS
    private static final int ATAN2_BITS2
    private static final int ATAN2_MASK
    private static final int ATAN2_COUNT
    private static final int BIG_ENOUGH_INT
    private static final double BIG_ENOUGH_FLOOR
    private static final double CEIL
    private static final double BIG_ENOUGH_CEIL
    private static final double BIG_ENOUGH_ROUND
    27:88:public MathUtils()
    61:61:public static final float sin(float)
    66:66:public static final float cos(float)
    71:71:public static final float sinDeg(float)
    76:76:public static final float cosDeg(float)
    104:126:public static final float atan2(float,float)
    140:140:public static final int random(int,int)
    145:145:public static final boolean randomBoolean()
    150:150:public static final float random()
    155:155:public static final float random(float)
    160:160:public static final float random(float,float)
    184:186:public static int clamp(int,int,int)
    190:192:public static short clamp(short,short,short)
    196:198:public static float clamp(float,float,float)
    214:214:public static int floor(float)
    220:220:public static int floorPositive(float)
    226:226:public static int ceil(float)
    232:232:public static int ceilPositive(float)
    238:238:public static int round(float)
    243:243:public static int roundPositive(float)
com.badlogic.gdx.math.MathUtils$Atan2
com.badlogic.gdx.math.MathUtils$Sin
com.badlogic.gdx.math.Matrix3:
    private static final long serialVersionUID
    private static final float DEGREE_TO_RAD
    public static final int M00
    public static final int M01
    public static final int M02
    public static final int M10
    public static final int M11
    public static final int M12
    public static final int M20
    public static final int M21
    public static final int M22
    45:47:public Matrix3(com.badlogic.gdx.math.Matrix3)
    72:94:public com.badlogic.gdx.math.Matrix3 mul(com.badlogic.gdx.math.Matrix3)
    101:117:public com.badlogic.gdx.math.Matrix3 setToRotation(float)
    125:137:public com.badlogic.gdx.math.Matrix3 setToTranslation(float,float)
    144:156:public com.badlogic.gdx.math.Matrix3 setToTranslation(com.badlogic.gdx.math.Vector2)
    165:174:public com.badlogic.gdx.math.Matrix3 setToScaling(float,float)
    184:184:public float det()
    191:216:public com.badlogic.gdx.math.Matrix3 inv()
    223:224:public com.badlogic.gdx.math.Matrix3 set(com.badlogic.gdx.math.Matrix3)
    247:249:public com.badlogic.gdx.math.Matrix3 trn(com.badlogic.gdx.math.Vector2)
    257:259:public com.badlogic.gdx.math.Matrix3 trn(float,float)
    266:268:public com.badlogic.gdx.math.Matrix3 trn(com.badlogic.gdx.math.Vector3)
    277:289:public com.badlogic.gdx.math.Matrix3 translate(float,float)
    297:309:public com.badlogic.gdx.math.Matrix3 translate(com.badlogic.gdx.math.Vector2)
    317:334:public com.badlogic.gdx.math.Matrix3 rotate(float)
    343:353:public com.badlogic.gdx.math.Matrix3 scale(float,float)
    361:371:public com.badlogic.gdx.math.Matrix3 scale(com.badlogic.gdx.math.Vector2)
    384:386:public com.badlogic.gdx.math.Matrix3 scl(float)
    393:395:public com.badlogic.gdx.math.Matrix3 scl(com.badlogic.gdx.math.Vector2)
    402:404:public com.badlogic.gdx.math.Matrix3 scl(com.badlogic.gdx.math.Vector3)
    411:423:public com.badlogic.gdx.math.Matrix3 transpose()
    434:455:private static void mul(float[],float[])
com.badlogic.gdx.math.Matrix4:
    private static final long serialVersionUID
    public static final int M00
    public static final int M01
    public static final int M02
    public static final int M03
    public static final int M10
    public static final int M11
    public static final int M12
    public static final int M13
    public static final int M20
    public static final int M21
    public static final int M22
    public static final int M23
    public static final int M30
    public static final int M31
    public static final int M32
    public static final int M33
    69:71:public Matrix4(float[])
    75:77:public Matrix4(com.badlogic.gdx.math.Quaternion)
    151:167:public com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    172:172:public com.badlogic.gdx.math.Matrix4 cpy()
    180:183:public com.badlogic.gdx.math.Matrix4 trn(com.badlogic.gdx.math.Vector3)
    193:196:public com.badlogic.gdx.math.Matrix4 trn(float,float,float)
    201:201:public float[] getValues()
    221:237:public com.badlogic.gdx.math.Matrix4 tra()
    332:332:public float det()
    399:400:public com.badlogic.gdx.math.Matrix4 setToOrtho2D(float,float,float,float,float,float)
    449:452:public com.badlogic.gdx.math.Matrix4 setTranslation(com.badlogic.gdx.math.Vector3)
    490:497:public com.badlogic.gdx.math.Matrix4 setToTranslationAndScaling(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    512:519:public com.badlogic.gdx.math.Matrix4 setToTranslationAndScaling(float,float,float,float,float,float)
    530:534:public com.badlogic.gdx.math.Matrix4 setToRotation(com.badlogic.gdx.math.Vector3,float)
    557:557:public com.badlogic.gdx.math.Matrix4 setToRotation(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    569:569:public com.badlogic.gdx.math.Matrix4 setToRotation(float,float,float,float,float,float)
    578:579:public com.badlogic.gdx.math.Matrix4 setFromEulerAngles(float,float,float)
    587:591:public com.badlogic.gdx.math.Matrix4 setToScaling(com.badlogic.gdx.math.Vector3)
    659:664:public com.badlogic.gdx.math.Matrix4 setToWorld(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    677:679:public void lerp(com.badlogic.gdx.math.Matrix4,float)
    684:700:public com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Matrix3)
    704:707:public com.badlogic.gdx.math.Matrix4 scl(com.badlogic.gdx.math.Vector3)
    711:714:public com.badlogic.gdx.math.Matrix4 scl(float,float,float)
    718:721:public com.badlogic.gdx.math.Matrix4 scl(float)
    731:732:public void getRotation(com.badlogic.gdx.math.Quaternion)
    735:738:public void getScale(com.badlogic.gdx.math.Vector3)
    742:745:public com.badlogic.gdx.math.Matrix4 toNormalMatrix()
    public static native void mulVec(float[],float[])
    public static native void mulVec(float[],float[],int,int,int)
    public static native void prj(float[],float[])
    public static native void rot(float[],float[])
    public static native void rot(float[],float[],int,int,int)
    public static native float det(float[])
    1046:1048:public com.badlogic.gdx.math.Matrix4 rotate(com.badlogic.gdx.math.Vector3,float)
    1080:1080:public com.badlogic.gdx.math.Matrix4 rotate(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Path
com.badlogic.gdx.math.Plane:
    private static final long serialVersionUID
    51:54:public Plane(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    62:64:public Plane(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    87:89:public void set(float,float,float,float)
    96:96:public float distance(com.badlogic.gdx.math.Vector3)
    105:112:public com.badlogic.gdx.math.Plane$PlaneSide testPoint(com.badlogic.gdx.math.Vector3)
    123:130:public com.badlogic.gdx.math.Plane$PlaneSide testPoint(float,float,float)
    139:140:public boolean isFrontFacing(com.badlogic.gdx.math.Vector3)
    145:145:public com.badlogic.gdx.math.Vector3 getNormal()
    150:150:public float getD()
    158:160:public void set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    163:165:public void set(float,float,float,float,float,float)
    171:173:public void set(com.badlogic.gdx.math.Plane)
com.badlogic.gdx.math.Plane$PlaneSide
com.badlogic.gdx.math.Polygon
com.badlogic.gdx.math.Polyline
com.badlogic.gdx.math.Quaternion:
    private static final long serialVersionUID
    private static final float NORMALIZATION_TOLERANCE
    54:56:public Quaternion(com.badlogic.gdx.math.Quaternion)
    62:64:public Quaternion(com.badlogic.gdx.math.Vector3,float)
    93:93:public com.badlogic.gdx.math.Quaternion set(com.badlogic.gdx.math.Vector3,float)
    98:98:public com.badlogic.gdx.math.Quaternion cpy()
    103:103:public float len()
    117:138:public com.badlogic.gdx.math.Quaternion setEulerAngles(float,float,float)
    164:167:public com.badlogic.gdx.math.Quaternion conjugate()
    175:182:public com.badlogic.gdx.math.Vector3 transform(com.badlogic.gdx.math.Vector3)
    190:198:public com.badlogic.gdx.math.Quaternion mul(com.badlogic.gdx.math.Quaternion)
    206:214:public com.badlogic.gdx.math.Quaternion mulLeft(com.badlogic.gdx.math.Quaternion)
    264:264:public com.badlogic.gdx.math.Quaternion setFromAxis(com.badlogic.gdx.math.Vector3,float)
    291:291:public com.badlogic.gdx.math.Quaternion setFromMatrix(com.badlogic.gdx.math.Matrix4)
    317:354:public com.badlogic.gdx.math.Quaternion setFromAxes(float,float,float,float,float,float,float,float,float)
    362:364:public com.badlogic.gdx.math.Quaternion setFromCross(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    376:378:public com.badlogic.gdx.math.Quaternion setFromCross(float,float,float,float,float,float)
    387:418:public com.badlogic.gdx.math.Quaternion slerp(com.badlogic.gdx.math.Quaternion,float)
    437:437:public float dot(com.badlogic.gdx.math.Quaternion)
    444:448:public com.badlogic.gdx.math.Quaternion mul(float)
com.badlogic.gdx.math.Rectangle:
    private static final long serialVersionUID
    58:62:public void set(float,float,float,float)
    66:66:public float getX()
    72:73:public void setX(float)
    77:77:public float getY()
    83:84:public void setY(float)
    94:95:public void setWidth(float)
    105:106:public void setHeight(float)
    111:111:public com.badlogic.gdx.math.Vector2 getPosition(com.badlogic.gdx.math.Vector2)
    117:119:public void setPosition(com.badlogic.gdx.math.Vector2)
    125:127:public void setPosition(float,float)
    133:135:public void setSize(float,float)
    140:142:public void setSize(float)
    147:147:public com.badlogic.gdx.math.Vector2 getSize(com.badlogic.gdx.math.Vector2)
    154:154:public boolean contains(float,float)
    160:160:public boolean contains(com.badlogic.gdx.math.Vector2)
    166:172:public boolean contains(com.badlogic.gdx.math.Rectangle)
    179:179:public boolean overlaps(com.badlogic.gdx.math.Rectangle)
    185:189:public void set(com.badlogic.gdx.math.Rectangle)
    194:203:public void merge(com.badlogic.gdx.math.Rectangle)
com.badlogic.gdx.math.Vector
com.badlogic.gdx.math.Vector2:
    private static final long serialVersionUID
    51:53:public Vector2(com.badlogic.gdx.math.Vector2)
    57:57:public com.badlogic.gdx.math.Vector2 cpy()
    62:62:public float len()
    67:67:public float len2()
    93:95:public com.badlogic.gdx.math.Vector2 sub(com.badlogic.gdx.math.Vector2)
    101:106:public com.badlogic.gdx.math.Vector2 nor()
    113:115:public com.badlogic.gdx.math.Vector2 add(com.badlogic.gdx.math.Vector2)
    123:125:public com.badlogic.gdx.math.Vector2 add(float,float)
    131:131:public float dot(com.badlogic.gdx.math.Vector2)
    138:140:public com.badlogic.gdx.math.Vector2 scl(float)
    145:145:public com.badlogic.gdx.math.Vector2 mul(float)
    151:153:public com.badlogic.gdx.math.Vector2 scl(float,float)
    158:158:public com.badlogic.gdx.math.Vector2 mul(float,float)
    164:166:public com.badlogic.gdx.math.Vector2 scl(com.badlogic.gdx.math.Vector2)
    171:171:public com.badlogic.gdx.math.Vector2 mul(com.badlogic.gdx.math.Vector2)
    175:175:public com.badlogic.gdx.math.Vector2 div(float)
    179:179:public com.badlogic.gdx.math.Vector2 div(float,float)
    183:183:public com.badlogic.gdx.math.Vector2 div(com.badlogic.gdx.math.Vector2)
    189:191:public float dst(com.badlogic.gdx.math.Vector2)
    198:200:public float dst(float,float)
    206:208:public float dst2(com.badlogic.gdx.math.Vector2)
    215:217:public float dst2(float,float)
    224:228:public com.badlogic.gdx.math.Vector2 limit(float)
    236:243:public com.badlogic.gdx.math.Vector2 clamp(float,float)
    255:257:public com.badlogic.gdx.math.Vector2 sub(float,float)
    264:268:public com.badlogic.gdx.math.Vector2 mul(com.badlogic.gdx.math.Matrix3)
    275:275:public float crs(com.badlogic.gdx.math.Vector2)
    283:283:public float crs(float,float)
    289:291:public float angle()
    297:300:public com.badlogic.gdx.math.Vector2 setAngle(float)
    306:316:public com.badlogic.gdx.math.Vector2 rotate(float)
    326:329:public com.badlogic.gdx.math.Vector2 lerp(com.badlogic.gdx.math.Vector2,float)
    357:360:public boolean epsilonEquals(com.badlogic.gdx.math.Vector2,float)
    369:371:public boolean epsilonEquals(float,float,float)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector lerp(com.badlogic.gdx.math.Vector,float)
    25:25:public bridge synthetic float dst2(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic float dst(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector scl(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector scl(float)
    25:25:public bridge synthetic float dot(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector add(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector nor()
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector sub(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector set(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector clamp(float,float)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector limit(float)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector cpy()
com.badlogic.gdx.math.Vector3:
    private static final long serialVersionUID
    76:78:public Vector3(float[])
    106:106:public com.badlogic.gdx.math.Vector3 set(float[])
    138:138:com.badlogic.gdx.math.Vector3 tmp3()
    163:163:public com.badlogic.gdx.math.Vector3 add(float)
    188:188:public com.badlogic.gdx.math.Vector3 sub(float)
    200:200:public com.badlogic.gdx.math.Vector3 mul(float)
    207:207:public com.badlogic.gdx.math.Vector3 scl(com.badlogic.gdx.math.Vector3)
    212:212:public com.badlogic.gdx.math.Vector3 mul(com.badlogic.gdx.math.Vector3)
    221:221:public com.badlogic.gdx.math.Vector3 scl(float,float,float)
    226:226:public com.badlogic.gdx.math.Vector3 mul(float,float,float)
    231:231:public com.badlogic.gdx.math.Vector3 scale(float,float,float)
    239:239:public com.badlogic.gdx.math.Vector3 div(float)
    245:245:public com.badlogic.gdx.math.Vector3 div(float,float,float)
    251:251:public com.badlogic.gdx.math.Vector3 div(com.badlogic.gdx.math.Vector3)
    261:261:public float len()
    266:266:public static float len2(float,float,float)
    277:277:public boolean idt(com.badlogic.gdx.math.Vector3)
    282:285:public static float dst(float,float,float,float,float,float)
    307:310:public static float dst2(float,float,float,float,float,float)
    329:332:public float dst2(float,float,float)
    346:346:public static float dot(float,float,float,float,float,float)
    361:361:public float dot(float,float,float)
    377:377:public com.badlogic.gdx.math.Vector3 crs(float,float,float)
    393:393:public com.badlogic.gdx.math.Vector3 mul(com.badlogic.gdx.math.Quaternion)
    414:415:public com.badlogic.gdx.math.Vector3 rot(com.badlogic.gdx.math.Matrix4)
    435:436:public com.badlogic.gdx.math.Vector3 rotate(com.badlogic.gdx.math.Vector3,float)
    441:441:public boolean isUnit()
    446:446:public boolean isUnit(float)
    451:451:public boolean isZero()
    456:456:public boolean isZero(float)
    478:495:public com.badlogic.gdx.math.Vector3 slerp(com.badlogic.gdx.math.Vector3,float)
    506:508:public com.badlogic.gdx.math.Vector3 limit(float)
    516:523:public com.badlogic.gdx.math.Vector3 clamp(float,float)
    553:557:public boolean epsilonEquals(com.badlogic.gdx.math.Vector3,float)
    563:566:public boolean epsilonEquals(float,float,float,float)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector lerp(com.badlogic.gdx.math.Vector,float)
    25:25:public bridge synthetic float dst2(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic float dst(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector scl(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector scl(float)
    25:25:public bridge synthetic float dot(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector add(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector nor()
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector sub(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector set(com.badlogic.gdx.math.Vector)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector clamp(float,float)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector limit(float)
    25:25:public bridge synthetic com.badlogic.gdx.math.Vector cpy()
com.badlogic.gdx.math.WindowedMean:
    83:83:public float getOldest()
    88:88:public float getLatest()
    93:101:public float standardDeviation()
com.badlogic.gdx.math.collision.BoundingBox:
    private static final long serialVersionUID
    40:40:public com.badlogic.gdx.math.Vector3 getCenter()
    44:55:protected void updateCorners()
    59:60:public com.badlogic.gdx.math.Vector3[] getCorners()
    65:65:public com.badlogic.gdx.math.Vector3 getDimensions()
    89:94:public BoundingBox(com.badlogic.gdx.math.collision.BoundingBox)
    100:105:public BoundingBox(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    112:113:public com.badlogic.gdx.math.collision.BoundingBox set(com.badlogic.gdx.math.collision.BoundingBox)
    137:141:public com.badlogic.gdx.math.collision.BoundingBox set(com.badlogic.gdx.math.Vector3[])
    149:153:public com.badlogic.gdx.math.collision.BoundingBox set(java.util.List)
    190:190:public boolean isValid()
    198:199:public com.badlogic.gdx.math.collision.BoundingBox ext(com.badlogic.gdx.math.collision.BoundingBox)
    209:217:public com.badlogic.gdx.math.collision.BoundingBox ext(com.badlogic.gdx.math.collision.BoundingBox,com.badlogic.gdx.math.Matrix4)
    226:234:public com.badlogic.gdx.math.collision.BoundingBox mul(com.badlogic.gdx.math.Matrix4)
    241:241:public boolean contains(com.badlogic.gdx.math.collision.BoundingBox)
    249:249:public boolean contains(com.badlogic.gdx.math.Vector3)
    264:265:public com.badlogic.gdx.math.collision.BoundingBox ext(float,float,float)
    273:273:static float max(float,float)
com.badlogic.gdx.math.collision.Ray:
    private static final long serialVersionUID
    43:43:public com.badlogic.gdx.math.collision.Ray cpy()
    51:51:public com.badlogic.gdx.math.Vector3 getEndPoint(float)
    59:59:public com.badlogic.gdx.math.Vector3 getEndPoint(com.badlogic.gdx.math.Vector3,float)
    69:73:public com.badlogic.gdx.math.collision.Ray mul(com.badlogic.gdx.math.Matrix4)
    87:89:public com.badlogic.gdx.math.collision.Ray set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
    102:104:public com.badlogic.gdx.math.collision.Ray set(float,float,float,float,float,float)
    112:114:public com.badlogic.gdx.math.collision.Ray set(com.badlogic.gdx.math.collision.Ray)
com.badlogic.gdx.math.collision.Segment
com.badlogic.gdx.math.collision.Sphere
com.badlogic.gdx.net.HttpParametersUtils
com.badlogic.gdx.net.HttpStatus:
    public static final int SC_CONTINUE
    public static final int SC_SWITCHING_PROTOCOLS
    public static final int SC_PROCESSING
    public static final int SC_OK
    public static final int SC_CREATED
    public static final int SC_ACCEPTED
    public static final int SC_NON_AUTHORITATIVE_INFORMATION
    public static final int SC_NO_CONTENT
    public static final int SC_RESET_CONTENT
    public static final int SC_PARTIAL_CONTENT
    public static final int SC_MULTI_STATUS
    public static final int SC_MULTIPLE_CHOICES
    public static final int SC_MOVED_PERMANENTLY
    public static final int SC_MOVED_TEMPORARILY
    public static final int SC_SEE_OTHER
    public static final int SC_NOT_MODIFIED
    public static final int SC_USE_PROXY
    public static final int SC_TEMPORARY_REDIRECT
    public static final int SC_BAD_REQUEST
    public static final int SC_UNAUTHORIZED
    public static final int SC_PAYMENT_REQUIRED
    public static final int SC_FORBIDDEN
    public static final int SC_NOT_FOUND
    public static final int SC_METHOD_NOT_ALLOWED
    public static final int SC_NOT_ACCEPTABLE
    public static final int SC_PROXY_AUTHENTICATION_REQUIRED
    public static final int SC_REQUEST_TIMEOUT
    public static final int SC_CONFLICT
    public static final int SC_GONE
    public static final int SC_LENGTH_REQUIRED
    public static final int SC_PRECONDITION_FAILED
    public static final int SC_REQUEST_TOO_LONG
    public static final int SC_REQUEST_URI_TOO_LONG
    public static final int SC_UNSUPPORTED_MEDIA_TYPE
    public static final int SC_REQUESTED_RANGE_NOT_SATISFIABLE
    public static final int SC_EXPECTATION_FAILED
    public static final int SC_INSUFFICIENT_SPACE_ON_RESOURCE
    public static final int SC_METHOD_FAILURE
    public static final int SC_UNPROCESSABLE_ENTITY
    public static final int SC_LOCKED
    public static final int SC_FAILED_DEPENDENCY
    public static final int SC_INTERNAL_SERVER_ERROR
    public static final int SC_NOT_IMPLEMENTED
    public static final int SC_BAD_GATEWAY
    public static final int SC_SERVICE_UNAVAILABLE
    public static final int SC_GATEWAY_TIMEOUT
    public static final int SC_HTTP_VERSION_NOT_SUPPORTED
    public static final int SC_INSUFFICIENT_STORAGE
    22:22:public int getStatusCode()
com.badlogic.gdx.net.NetJavaImpl$HttpClientResponse:
    56:69:public byte[] getResult()
    74:82:public java.lang.String getResultAsString()
    88:88:public java.io.InputStream getResultAsStream()
    93:93:public com.badlogic.gdx.net.HttpStatus getStatus()
    98:98:public java.lang.String getHeader(java.lang.String)
    103:103:public java.util.Map getHeaders()
com.badlogic.gdx.net.ServerSocket:
    public abstract com.badlogic.gdx.Net$Protocol getProtocol()
    public abstract com.badlogic.gdx.net.Socket accept(com.badlogic.gdx.net.SocketHints)
com.badlogic.gdx.net.ServerSocketHints:
    24:55:public ServerSocketHints()
com.badlogic.gdx.net.Socket:
    public abstract boolean isConnected()
    public abstract java.io.InputStream getInputStream()
    public abstract java.io.OutputStream getOutputStream()
com.badlogic.gdx.net.SocketHints:
    24:67:public SocketHints()
com.badlogic.gdx.physics.box2d.Body
com.badlogic.gdx.physics.box2d.BodyDef
com.badlogic.gdx.physics.box2d.BodyDef$BodyType
com.badlogic.gdx.physics.box2d.Box2DDebugRenderer
com.badlogic.gdx.physics.box2d.ChainShape
com.badlogic.gdx.physics.box2d.CircleShape
com.badlogic.gdx.physics.box2d.Contact
com.badlogic.gdx.physics.box2d.ContactFilter
com.badlogic.gdx.physics.box2d.ContactImpulse
com.badlogic.gdx.physics.box2d.ContactListener
com.badlogic.gdx.physics.box2d.DestructionListener
com.badlogic.gdx.physics.box2d.EdgeShape
com.badlogic.gdx.physics.box2d.Filter
com.badlogic.gdx.physics.box2d.Fixture
com.badlogic.gdx.physics.box2d.FixtureDef
com.badlogic.gdx.physics.box2d.Joint
com.badlogic.gdx.physics.box2d.JointDef
com.badlogic.gdx.physics.box2d.JointDef$JointType
com.badlogic.gdx.physics.box2d.JointEdge
com.badlogic.gdx.physics.box2d.Manifold
com.badlogic.gdx.physics.box2d.Manifold$ManifoldPoint
com.badlogic.gdx.physics.box2d.Manifold$ManifoldType
com.badlogic.gdx.physics.box2d.MassData
com.badlogic.gdx.physics.box2d.PolygonShape
com.badlogic.gdx.physics.box2d.QueryCallback
com.badlogic.gdx.physics.box2d.RayCastCallback
com.badlogic.gdx.physics.box2d.Shape
com.badlogic.gdx.physics.box2d.Shape$Type
com.badlogic.gdx.physics.box2d.Transform
com.badlogic.gdx.physics.box2d.World
com.badlogic.gdx.physics.box2d.World$1
com.badlogic.gdx.physics.box2d.World$2
com.badlogic.gdx.physics.box2d.WorldManifold
com.badlogic.gdx.physics.box2d.joints.DistanceJoint
com.badlogic.gdx.physics.box2d.joints.DistanceJointDef
com.badlogic.gdx.physics.box2d.joints.FrictionJoint
com.badlogic.gdx.physics.box2d.joints.FrictionJointDef
com.badlogic.gdx.physics.box2d.joints.GearJoint
com.badlogic.gdx.physics.box2d.joints.GearJointDef
com.badlogic.gdx.physics.box2d.joints.MouseJoint
com.badlogic.gdx.physics.box2d.joints.MouseJointDef
com.badlogic.gdx.physics.box2d.joints.PrismaticJoint
com.badlogic.gdx.physics.box2d.joints.PrismaticJointDef
com.badlogic.gdx.physics.box2d.joints.PulleyJoint
com.badlogic.gdx.physics.box2d.joints.PulleyJointDef
com.badlogic.gdx.physics.box2d.joints.RevoluteJoint
com.badlogic.gdx.physics.box2d.joints.RevoluteJointDef
com.badlogic.gdx.physics.box2d.joints.RopeJoint
com.badlogic.gdx.physics.box2d.joints.RopeJointDef
com.badlogic.gdx.physics.box2d.joints.WeldJoint
com.badlogic.gdx.physics.box2d.joints.WeldJointDef
com.badlogic.gdx.physics.box2d.joints.WheelJoint
com.badlogic.gdx.physics.box2d.joints.WheelJointDef
com.badlogic.gdx.scenes.scene2d.Action
com.badlogic.gdx.scenes.scene2d.Actor
com.badlogic.gdx.scenes.scene2d.Event
com.badlogic.gdx.scenes.scene2d.EventListener
com.badlogic.gdx.scenes.scene2d.Group
com.badlogic.gdx.scenes.scene2d.InputEvent
com.badlogic.gdx.scenes.scene2d.InputEvent$Type
com.badlogic.gdx.scenes.scene2d.InputListener
com.badlogic.gdx.scenes.scene2d.InputListener$1
com.badlogic.gdx.scenes.scene2d.Stage
com.badlogic.gdx.scenes.scene2d.Stage$TouchFocus
com.badlogic.gdx.scenes.scene2d.Touchable
com.badlogic.gdx.scenes.scene2d.actions.Actions
com.badlogic.gdx.scenes.scene2d.actions.AddAction
com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction
com.badlogic.gdx.scenes.scene2d.actions.AfterAction
com.badlogic.gdx.scenes.scene2d.actions.AlphaAction
com.badlogic.gdx.scenes.scene2d.actions.ColorAction
com.badlogic.gdx.scenes.scene2d.actions.DelayAction
com.badlogic.gdx.scenes.scene2d.actions.DelegateAction
com.badlogic.gdx.scenes.scene2d.actions.FloatAction
com.badlogic.gdx.scenes.scene2d.actions.IntAction
com.badlogic.gdx.scenes.scene2d.actions.LayoutAction
com.badlogic.gdx.scenes.scene2d.actions.MoveByAction
com.badlogic.gdx.scenes.scene2d.actions.MoveToAction
com.badlogic.gdx.scenes.scene2d.actions.ParallelAction
com.badlogic.gdx.scenes.scene2d.actions.RelativeTemporalAction
com.badlogic.gdx.scenes.scene2d.actions.RemoveAction
com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction
com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction
com.badlogic.gdx.scenes.scene2d.actions.RepeatAction
com.badlogic.gdx.scenes.scene2d.actions.RotateByAction
com.badlogic.gdx.scenes.scene2d.actions.RotateToAction
com.badlogic.gdx.scenes.scene2d.actions.RunnableAction
com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction
com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction
com.badlogic.gdx.scenes.scene2d.actions.SequenceAction
com.badlogic.gdx.scenes.scene2d.actions.SizeByAction
com.badlogic.gdx.scenes.scene2d.actions.SizeToAction
com.badlogic.gdx.scenes.scene2d.actions.TemporalAction
com.badlogic.gdx.scenes.scene2d.actions.TimeScaleAction
com.badlogic.gdx.scenes.scene2d.actions.TouchableAction
com.badlogic.gdx.scenes.scene2d.actions.VisibleAction
com.badlogic.gdx.scenes.scene2d.ui.Button
com.badlogic.gdx.scenes.scene2d.ui.Button$1
com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle
com.badlogic.gdx.scenes.scene2d.ui.ButtonGroup
com.badlogic.gdx.scenes.scene2d.ui.CheckBox
com.badlogic.gdx.scenes.scene2d.ui.CheckBox$CheckBoxStyle
com.badlogic.gdx.scenes.scene2d.ui.Dialog
com.badlogic.gdx.scenes.scene2d.ui.Dialog$1
com.badlogic.gdx.scenes.scene2d.ui.Dialog$2
com.badlogic.gdx.scenes.scene2d.ui.Dialog$3
com.badlogic.gdx.scenes.scene2d.ui.Dialog$4
com.badlogic.gdx.scenes.scene2d.ui.Image
com.badlogic.gdx.scenes.scene2d.ui.ImageButton
com.badlogic.gdx.scenes.scene2d.ui.ImageButton$ImageButtonStyle
com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton
com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton$ImageTextButtonStyle
com.badlogic.gdx.scenes.scene2d.ui.Label
com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle
com.badlogic.gdx.scenes.scene2d.ui.List
com.badlogic.gdx.scenes.scene2d.ui.List$1
com.badlogic.gdx.scenes.scene2d.ui.List$ListStyle
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$1
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$2
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$3
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$ScrollPaneStyle
com.badlogic.gdx.scenes.scene2d.ui.SelectBox
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$1
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxStyle
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectList
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectList$1
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectList$2
com.badlogic.gdx.scenes.scene2d.ui.Skin
com.badlogic.gdx.scenes.scene2d.ui.Skin$1
com.badlogic.gdx.scenes.scene2d.ui.Skin$2
com.badlogic.gdx.scenes.scene2d.ui.Skin$3
com.badlogic.gdx.scenes.scene2d.ui.Skin$4
com.badlogic.gdx.scenes.scene2d.ui.Skin$5
com.badlogic.gdx.scenes.scene2d.ui.Skin$TintedDrawable
com.badlogic.gdx.scenes.scene2d.ui.Slider
com.badlogic.gdx.scenes.scene2d.ui.Slider$1
com.badlogic.gdx.scenes.scene2d.ui.Slider$SliderStyle
com.badlogic.gdx.scenes.scene2d.ui.SplitPane
com.badlogic.gdx.scenes.scene2d.ui.SplitPane$1
com.badlogic.gdx.scenes.scene2d.ui.SplitPane$SplitPaneStyle
com.badlogic.gdx.scenes.scene2d.ui.Stack
com.badlogic.gdx.scenes.scene2d.ui.Table
com.badlogic.gdx.scenes.scene2d.ui.TableLayout
com.badlogic.gdx.scenes.scene2d.ui.TableToolkit
com.badlogic.gdx.scenes.scene2d.ui.TableToolkit$1
com.badlogic.gdx.scenes.scene2d.ui.TableToolkit$DebugRect
com.badlogic.gdx.scenes.scene2d.ui.TextButton
com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle
com.badlogic.gdx.scenes.scene2d.ui.TextField
com.badlogic.gdx.scenes.scene2d.ui.TextField$1
com.badlogic.gdx.scenes.scene2d.ui.TextField$DefaultOnscreenKeyboard
com.badlogic.gdx.scenes.scene2d.ui.TextField$KeyRepeatTask
com.badlogic.gdx.scenes.scene2d.ui.TextField$OnscreenKeyboard
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldFilter
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldFilter$DigitsOnlyFilter
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldListener
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldStyle
com.badlogic.gdx.scenes.scene2d.ui.Touchpad
com.badlogic.gdx.scenes.scene2d.ui.Touchpad$1
com.badlogic.gdx.scenes.scene2d.ui.Touchpad$TouchpadStyle
com.badlogic.gdx.scenes.scene2d.ui.Tree
com.badlogic.gdx.scenes.scene2d.ui.Tree$1
com.badlogic.gdx.scenes.scene2d.ui.Tree$Node
com.badlogic.gdx.scenes.scene2d.ui.Tree$TreeStyle
com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup
com.badlogic.gdx.scenes.scene2d.ui.Widget
com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup
com.badlogic.gdx.scenes.scene2d.ui.Window
com.badlogic.gdx.scenes.scene2d.ui.Window$1
com.badlogic.gdx.scenes.scene2d.ui.Window$2
com.badlogic.gdx.scenes.scene2d.ui.Window$WindowStyle
com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener
com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener$1
com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener$2
com.badlogic.gdx.scenes.scene2d.utils.Align
com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable
com.badlogic.gdx.scenes.scene2d.utils.ChangeListener
com.badlogic.gdx.scenes.scene2d.utils.ChangeListener$ChangeEvent
com.badlogic.gdx.scenes.scene2d.utils.ClickListener
com.badlogic.gdx.scenes.scene2d.utils.Cullable
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$1
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Payload
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Source
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Target
com.badlogic.gdx.scenes.scene2d.utils.DragListener
com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener
com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener$1
com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener$2
com.badlogic.gdx.scenes.scene2d.utils.Drawable
com.badlogic.gdx.scenes.scene2d.utils.FocusListener
com.badlogic.gdx.scenes.scene2d.utils.FocusListener$1
com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent
com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type
com.badlogic.gdx.scenes.scene2d.utils.Layout
com.badlogic.gdx.scenes.scene2d.utils.NinePatchDrawable
com.badlogic.gdx.scenes.scene2d.utils.ScissorStack
com.badlogic.gdx.scenes.scene2d.utils.SpriteDrawable
com.badlogic.gdx.scenes.scene2d.utils.TextureRegionDrawable
com.badlogic.gdx.scenes.scene2d.utils.TiledDrawable
com.badlogic.gdx.utils.Array:
    private com.badlogic.gdx.utils.Predicate$PredicateIterable predicateIterable
    62:65:public Array(boolean,int,java.lang.Class)
    69:70:public Array(java.lang.Class)
    76:79:public Array(com.badlogic.gdx.utils.Array)
    85:86:public Array(java.lang.Object[])
    93:96:public Array(boolean,java.lang.Object[],int,int)
    115:116:public void addAll(java.lang.Object[])
    137:146:public void insert(int,java.lang.Object)
    149:155:public void swap(int,int)
    193:201:public int lastIndexOf(java.lang.Object,boolean)
    245:271:public boolean removeAll(com.badlogic.gdx.utils.Array,boolean)
    284:284:public java.lang.Object peek()
    303:304:public void shrink()
    310:312:public java.lang.Object[] ensureCapacity(int)
    327:328:public void sort()
    336:342:public void reverse()
    345:351:public void shuffle()
    365:369:public java.lang.Iterable select(com.badlogic.gdx.utils.Predicate)
    375:379:public void truncate(int)
    383:384:public java.lang.Object random()
    390:390:public java.lang.Object[] toArray()
    394:396:public java.lang.Object[] toArray(java.lang.Class)
    430:438:public java.lang.String toString(java.lang.String)
com.badlogic.gdx.utils.Array$ArrayIterator:
    448:449:public Array$ArrayIterator(com.badlogic.gdx.utils.Array)
    473:474:public void reset()
com.badlogic.gdx.utils.ArrayMap:
    private com.badlogic.gdx.utils.ArrayMap$Values valuesIter1
    private com.badlogic.gdx.utils.ArrayMap$Values valuesIter2
    private com.badlogic.gdx.utils.ArrayMap$Keys keysIter1
    private com.badlogic.gdx.utils.ArrayMap$Keys keysIter2
    48:49:public ArrayMap(int)
    79:83:public ArrayMap(com.badlogic.gdx.utils.ArrayMap)
    94:102:public void put(java.lang.Object,java.lang.Object,int)
    105:106:public void putAll(com.badlogic.gdx.utils.ArrayMap)
    109:116:public void putAll(com.badlogic.gdx.utils.ArrayMap,int,int)
    121:130:public java.lang.Object get(java.lang.Object)
    137:146:public java.lang.Object getKey(java.lang.Object,boolean)
    150:151:public java.lang.Object getKeyAt(int)
    155:156:public java.lang.Object getValueAt(int)
    160:161:public java.lang.Object firstKey()
    165:166:public java.lang.Object firstValue()
    170:172:public void setKey(int,java.lang.Object)
    175:177:public void setValue(int,java.lang.Object)
    180:192:public void insert(int,java.lang.Object,java.lang.Object)
    195:204:public boolean containsKey(java.lang.Object)
    209:218:public boolean containsValue(java.lang.Object,boolean)
    234:242:public int indexOfValue(java.lang.Object,boolean)
    246:264:public java.lang.Object removeKey(java.lang.Object)
    268:284:public boolean removeValue(java.lang.Object,boolean)
    305:305:public java.lang.Object peekKey()
    310:310:public java.lang.Object peekValue()
    326:327:public void shrink()
    332:334:public void ensureCapacity(int)
    347:357:public void reverse()
    360:370:public void shuffle()
    375:381:public void truncate(int)
    424:437:public com.badlogic.gdx.utils.ArrayMap$Values values()
    443:456:public com.badlogic.gdx.utils.ArrayMap$Keys keys()
com.badlogic.gdx.utils.ArrayMap$Entries:
    491:492:public void reset()
com.badlogic.gdx.utils.ArrayMap$Keys
com.badlogic.gdx.utils.ArrayMap$Values
com.badlogic.gdx.utils.AtomicQueue
com.badlogic.gdx.utils.Base64Coder
com.badlogic.gdx.utils.BaseJsonReader
com.badlogic.gdx.utils.BinaryHeap
com.badlogic.gdx.utils.BinaryHeap$Node
com.badlogic.gdx.utils.Bits
com.badlogic.gdx.utils.BooleanArray
com.badlogic.gdx.utils.BufferUtils:
    32:32:public BufferUtils()
    79:81:public static void copy(short[],int,java.nio.Buffer,int)
    93:95:public static void copy(char[],int,java.nio.Buffer,int)
    107:109:public static void copy(int[],int,java.nio.Buffer,int)
    121:123:public static void copy(long[],int,java.nio.Buffer,int)
    135:137:public static void copy(float[],int,java.nio.Buffer,int)
    149:151:public static void copy(double[],int,java.nio.Buffer,int)
    232:234:public static java.nio.DoubleBuffer newDoubleBuffer(int)
    244:246:public static java.nio.ShortBuffer newShortBuffer(int)
    250:252:public static java.nio.CharBuffer newCharBuffer(int)
    262:264:public static java.nio.LongBuffer newLongBuffer(int)
    303:303:public static long getUnsafeBufferAddress(java.nio.Buffer)
    314:318:public static java.nio.ByteBuffer newUnsafeByteBuffer(java.nio.ByteBuffer)
    325:325:public static int getAllocatedBytesUnsafe()
    private static native long getBufferAddress(java.nio.Buffer)
    public static native void clear(java.nio.ByteBuffer,int)
    private static native void copyJni(char[],int,java.nio.Buffer,int,int)
    private static native void copyJni(short[],int,java.nio.Buffer,int,int)
    private static native void copyJni(int[],int,java.nio.Buffer,int,int)
    private static native void copyJni(long[],int,java.nio.Buffer,int,int)
    private static native void copyJni(float[],int,java.nio.Buffer,int,int)
    private static native void copyJni(double[],int,java.nio.Buffer,int,int)
com.badlogic.gdx.utils.CharArray
com.badlogic.gdx.utils.Clipboard:
    public abstract java.lang.String getContents()
    public abstract void setContents(java.lang.String)
com.badlogic.gdx.utils.ComparableTimSort
com.badlogic.gdx.utils.DataInput
com.badlogic.gdx.utils.DataOutput
com.badlogic.gdx.utils.DelayedRemovalArray
com.badlogic.gdx.utils.FloatArray:
    52:57:public FloatArray(com.badlogic.gdx.utils.FloatArray)
    62:63:public FloatArray(float[])
    70:73:public FloatArray(boolean,float[],int,int)
    82:83:public void addAll(com.badlogic.gdx.utils.FloatArray)
    86:89:public void addAll(com.badlogic.gdx.utils.FloatArray,int,int)
    109:111:public void set(int,float)
    114:123:public void insert(int,float)
    126:132:public void swap(int,int)
    135:139:public boolean contains(float)
    143:146:public int indexOf(float)
    150:153:public int lastIndexOf(char)
    157:164:public boolean removeValue(float)
    169:177:public float removeIndex(int)
    183:196:public boolean removeAll(com.badlogic.gdx.utils.FloatArray)
    201:201:public float pop()
    206:206:public float peek()
    211:212:public float first()
    222:223:public void shrink()
    229:231:public float[] ensureCapacity(int)
    243:244:public void sort()
    247:253:public void reverse()
    256:262:public void shuffle()
    267:268:public void truncate(int)
    272:273:public float random()
    277:279:public float[] toArray()
    308:316:public java.lang.String toString(java.lang.String)
com.badlogic.gdx.utils.GdxBuild
com.badlogic.gdx.utils.GdxNativesLoader:
    19:19:public GdxNativesLoader()
com.badlogic.gdx.utils.GdxRuntimeException:
    private static final long serialVersionUID
com.badlogic.gdx.utils.GwtModuleGenerator
com.badlogic.gdx.utils.IdentityMap
com.badlogic.gdx.utils.IdentityMap$Entries
com.badlogic.gdx.utils.IdentityMap$Entry
com.badlogic.gdx.utils.IdentityMap$Keys
com.badlogic.gdx.utils.IdentityMap$MapIterator
com.badlogic.gdx.utils.IdentityMap$Values
com.badlogic.gdx.utils.IntArray:
    52:57:public IntArray(com.badlogic.gdx.utils.IntArray)
    62:63:public IntArray(int[])
    70:73:public IntArray(boolean,int[],int,int)
    82:83:public void addAll(com.badlogic.gdx.utils.IntArray)
    86:89:public void addAll(com.badlogic.gdx.utils.IntArray,int,int)
    92:93:public void addAll(int[])
    96:101:public void addAll(int[],int,int)
    109:111:public void set(int,int)
    114:123:public void insert(int,int)
    126:132:public void swap(int,int)
    135:139:public boolean contains(int)
    143:146:public int indexOf(int)
    150:153:public int lastIndexOf(int)
    157:164:public boolean removeValue(int)
    169:177:public int removeIndex(int)
    183:196:public boolean removeAll(com.badlogic.gdx.utils.IntArray)
    206:206:public int peek()
    211:212:public int first()
    216:217:public void clear()
    222:223:public void shrink()
    229:231:public int[] ensureCapacity(int)
    243:244:public void sort()
    247:253:public void reverse()
    256:262:public void shuffle()
    267:268:public void truncate(int)
    272:273:public int random()
    277:279:public int[] toArray()
    308:316:public java.lang.String toString(java.lang.String)
com.badlogic.gdx.utils.IntFloatMap
com.badlogic.gdx.utils.IntFloatMap$Entries
com.badlogic.gdx.utils.IntFloatMap$Entry
com.badlogic.gdx.utils.IntFloatMap$Keys
com.badlogic.gdx.utils.IntFloatMap$MapIterator
com.badlogic.gdx.utils.IntFloatMap$Values
com.badlogic.gdx.utils.IntIntMap
com.badlogic.gdx.utils.IntIntMap$Entries
com.badlogic.gdx.utils.IntIntMap$Entry
com.badlogic.gdx.utils.IntIntMap$Keys
com.badlogic.gdx.utils.IntIntMap$MapIterator
com.badlogic.gdx.utils.IntIntMap$Values
com.badlogic.gdx.utils.IntMap:
    private static final int PRIME1
    private static final int PRIME2
    private static final int PRIME3
    private static final int EMPTY
    private com.badlogic.gdx.utils.IntMap$Entries entries1
    private com.badlogic.gdx.utils.IntMap$Entries entries2
    private com.badlogic.gdx.utils.IntMap$Values values1
    private com.badlogic.gdx.utils.IntMap$Values values2
    private com.badlogic.gdx.utils.IntMap$Keys keys1
    private com.badlogic.gdx.utils.IntMap$Keys keys2
    63:64:public IntMap(int)
    160:162:public void putAll(com.badlogic.gdx.utils.IntMap)
    289:301:public java.lang.Object get(int)
    305:317:public java.lang.Object get(int,java.lang.Object)
    321:324:private java.lang.Object getStash(int,java.lang.Object)
    393:403:public void clear()
    410:425:public boolean containsValue(java.lang.Object,boolean)
    453:468:public int findKey(java.lang.Object,boolean,int)
    474:476:public void ensureCapacity(int)
    547:560:public com.badlogic.gdx.utils.IntMap$Entries entries()
    566:579:public com.badlogic.gdx.utils.IntMap$Values values()
    585:598:public com.badlogic.gdx.utils.IntMap$Keys keys()
com.badlogic.gdx.utils.IntMap$Entries
com.badlogic.gdx.utils.IntMap$Entry
com.badlogic.gdx.utils.IntMap$Keys
com.badlogic.gdx.utils.IntMap$MapIterator
com.badlogic.gdx.utils.IntMap$Values
com.badlogic.gdx.utils.IntSet
com.badlogic.gdx.utils.IntSet$Entry
com.badlogic.gdx.utils.IntSet$IntSetIterator
com.badlogic.gdx.utils.Json
com.badlogic.gdx.utils.Json$FieldMetadata
com.badlogic.gdx.utils.Json$ReadOnlySerializer
com.badlogic.gdx.utils.Json$Serializable
com.badlogic.gdx.utils.Json$Serializer
com.badlogic.gdx.utils.JsonReader
com.badlogic.gdx.utils.JsonValue
com.badlogic.gdx.utils.JsonValue$1
com.badlogic.gdx.utils.JsonValue$ValueType
com.badlogic.gdx.utils.JsonWriter
com.badlogic.gdx.utils.JsonWriter$1
com.badlogic.gdx.utils.JsonWriter$JsonObject
com.badlogic.gdx.utils.JsonWriter$OutputType
com.badlogic.gdx.utils.LittleEndianInputStream
com.badlogic.gdx.utils.Logger:
    public static final int NONE
    public static final int ERROR
    public static final int INFO
    public static final int DEBUG
    36:37:public Logger(java.lang.String)
    39:42:public Logger(java.lang.String,int)
    49:50:public void debug(java.lang.String,java.lang.Exception)
    57:58:public void info(java.lang.String,java.lang.Exception)
    61:62:public void error(java.lang.String)
    72:73:public void setLevel(int)
com.badlogic.gdx.utils.LongArray
com.badlogic.gdx.utils.LongMap:
    private static final int PRIME1
    private static final int PRIME2
    private static final int PRIME3
    private static final int EMPTY
    private com.badlogic.gdx.utils.LongMap$Entries entries1
    private com.badlogic.gdx.utils.LongMap$Entries entries2
    private com.badlogic.gdx.utils.LongMap$Keys keys1
    private com.badlogic.gdx.utils.LongMap$Keys keys2
    63:64:public LongMap(int)
    160:162:public void putAll(com.badlogic.gdx.utils.LongMap)
    304:316:public java.lang.Object get(long,java.lang.Object)
    392:402:public void clear()
    407:422:public boolean containsValue(java.lang.Object,boolean)
    426:435:public boolean containsKey(long)
    439:442:private boolean containsKeyStash(long)
    450:465:public long findKey(java.lang.Object,boolean,long)
    471:473:public void ensureCapacity(int)
    539:552:public com.badlogic.gdx.utils.LongMap$Entries entries()
    577:590:public com.badlogic.gdx.utils.LongMap$Keys keys()
com.badlogic.gdx.utils.LongMap$Entries
com.badlogic.gdx.utils.LongMap$Entry
com.badlogic.gdx.utils.LongMap$Keys
com.badlogic.gdx.utils.LongMap$MapIterator:
    static final int INDEX_ILLEGAL
    static final int INDEX_ZERO
com.badlogic.gdx.utils.LongMap$Values:
    715:718:public com.badlogic.gdx.utils.Array toArray()
com.badlogic.gdx.utils.NumberUtils:
    19:19:public NumberUtils()
    29:29:public static int floatToRawIntBits(float)
    33:33:public static int floatToIntColor(float)
    43:43:public static float intBitsToFloat(int)
    47:47:public static long doubleToLongBits(double)
    51:51:public static double longBitsToDouble(long)
com.badlogic.gdx.utils.ObjectFloatMap
com.badlogic.gdx.utils.ObjectFloatMap$Entries
com.badlogic.gdx.utils.ObjectFloatMap$Entry
com.badlogic.gdx.utils.ObjectFloatMap$Keys
com.badlogic.gdx.utils.ObjectFloatMap$MapIterator
com.badlogic.gdx.utils.ObjectFloatMap$Values
com.badlogic.gdx.utils.ObjectIntMap:
    private static final int PRIME1
    private static final int PRIME2
    private static final int PRIME3
    private com.badlogic.gdx.utils.ObjectIntMap$Entries entries1
    private com.badlogic.gdx.utils.ObjectIntMap$Entries entries2
    private com.badlogic.gdx.utils.ObjectIntMap$Values values1
    private com.badlogic.gdx.utils.ObjectIntMap$Values values2
    private com.badlogic.gdx.utils.ObjectIntMap$Keys keys1
    private com.badlogic.gdx.utils.ObjectIntMap$Keys keys2
    60:61:public ObjectIntMap(int)
    144:146:public void putAll(com.badlogic.gdx.utils.ObjectIntMap)
    291:302:public int getAndIncrement(java.lang.Object,int,int)
    306:314:private int getAndIncrementStash(java.lang.Object,int,int)
    318:343:public int remove(java.lang.Object,int)
    347:356:int removeStash(java.lang.Object,int)
    361:367:void removeStashIndex(int)
    380:383:public boolean containsValue(int)
    387:396:public boolean containsKey(java.lang.Object)
    400:403:private boolean containsKeyStash(java.lang.Object)
    409:412:public java.lang.Object findKey(int)
    418:420:public void ensureCapacity(int)
    486:499:public com.badlogic.gdx.utils.ObjectIntMap$Entries entries()
    505:518:public com.badlogic.gdx.utils.ObjectIntMap$Values values()
    524:537:public com.badlogic.gdx.utils.ObjectIntMap$Keys keys()
com.badlogic.gdx.utils.ObjectIntMap$Entries
com.badlogic.gdx.utils.ObjectIntMap$Entry
com.badlogic.gdx.utils.ObjectIntMap$Keys
com.badlogic.gdx.utils.ObjectIntMap$MapIterator
com.badlogic.gdx.utils.ObjectIntMap$Values
com.badlogic.gdx.utils.ObjectMap:
    private static final int PRIME1
    private static final int PRIME2
    private static final int PRIME3
    private com.badlogic.gdx.utils.ObjectMap$Values values1
    private com.badlogic.gdx.utils.ObjectMap$Values values2
    60:61:public ObjectMap(int)
    154:157:public void putAll(com.badlogic.gdx.utils.ObjectMap)
    300:309:public java.lang.Object get(java.lang.Object,java.lang.Object)
    313:316:private java.lang.Object getStash(java.lang.Object,java.lang.Object)
    392:404:public boolean containsValue(java.lang.Object,boolean)
    432:444:public java.lang.Object findKey(java.lang.Object,boolean)
    450:452:public void ensureCapacity(int)
    537:550:public com.badlogic.gdx.utils.ObjectMap$Values values()
com.badlogic.gdx.utils.ObjectMap$Values
com.badlogic.gdx.utils.ObjectSet
com.badlogic.gdx.utils.ObjectSet$SetIterator
com.badlogic.gdx.utils.OrderedMap:
    32:34:public OrderedMap(int)
    37:39:public OrderedMap(int,float)
    57:57:public com.badlogic.gdx.utils.Array orderedKeys()
    100:100:public com.badlogic.gdx.utils.ObjectMap$Values values()
com.badlogic.gdx.utils.OrderedMap$3
com.badlogic.gdx.utils.PauseableThread
com.badlogic.gdx.utils.PerformanceCounter
com.badlogic.gdx.utils.PerformanceCounters
com.badlogic.gdx.utils.PooledLinkedList
com.badlogic.gdx.utils.PooledLinkedList$1
com.badlogic.gdx.utils.PooledLinkedList$Item
com.badlogic.gdx.utils.Pools
com.badlogic.gdx.utils.Predicate
com.badlogic.gdx.utils.Predicate$PredicateIterable
com.badlogic.gdx.utils.Predicate$PredicateIterator
com.badlogic.gdx.utils.ReflectionPool
com.badlogic.gdx.utils.Scaling
com.badlogic.gdx.utils.Scaling$1
com.badlogic.gdx.utils.ScreenUtils
com.badlogic.gdx.utils.SerializationException
com.badlogic.gdx.utils.SharedLibraryLoader:
    66:68:public SharedLibraryLoader(java.lang.String)
com.badlogic.gdx.utils.ShortArray:
    38:39:public ShortArray(int)
    52:57:public ShortArray(com.badlogic.gdx.utils.ShortArray)
    62:63:public ShortArray(short[])
    70:73:public ShortArray(boolean,short[],int,int)
    82:83:public void addAll(com.badlogic.gdx.utils.ShortArray)
    86:89:public void addAll(com.badlogic.gdx.utils.ShortArray,int,int)
    92:93:public void addAll(short[])
    96:101:public void addAll(short[],int,int)
    104:105:public short get(int)
    109:111:public void set(int,short)
    114:123:public void insert(int,short)
    126:132:public void swap(int,int)
    135:139:public boolean contains(short)
    143:146:public int indexOf(short)
    150:153:public int lastIndexOf(char)
    157:164:public boolean removeValue(short)
    169:177:public short removeIndex(int)
    183:196:public boolean removeAll(com.badlogic.gdx.utils.ShortArray)
    201:201:public short pop()
    206:206:public short peek()
    211:212:public short first()
    222:223:public void shrink()
    243:244:public void sort()
    247:253:public void reverse()
    256:262:public void shuffle()
    267:268:public void truncate(int)
    272:273:public short random()
    277:279:public short[] toArray()
    308:316:public java.lang.String toString(java.lang.String)
com.badlogic.gdx.utils.SnapshotArray
com.badlogic.gdx.utils.Sort:
    private com.badlogic.gdx.utils.ComparableTimSort comparableTimSort
    31:33:public void sort(com.badlogic.gdx.utils.Array)
    36:38:public void sort(java.lang.Object[])
    41:43:public void sort(java.lang.Object[],int,int)
    46:48:public void sort(com.badlogic.gdx.utils.Array,java.util.Comparator)
    51:53:public void sort(java.lang.Object[],java.util.Comparator)
com.badlogic.gdx.utils.SortedIntList
com.badlogic.gdx.utils.SortedIntList$Iterator
com.badlogic.gdx.utils.SortedIntList$Node
com.badlogic.gdx.utils.SortedIntList$NodePool
com.badlogic.gdx.utils.StreamUtils:
    15:15:public StreamUtils()
com.badlogic.gdx.utils.StringBuilder:
    static final int INITIAL_CAPACITY
    39:39:final char[] getValue()
    67:68:public StringBuilder(java.lang.CharSequence)
    70:74:public StringBuilder(com.badlogic.gdx.utils.StringBuilder)
    81:85:public StringBuilder(java.lang.String)
    106:112:final void append0(char[])
    116:129:final void append0(char[],int,int)
    169:169:public int capacity()
    185:199:final void delete0(int,int)
    203:211:final void deleteCharAt0(int)
    220:224:public void ensureCapacity(int)
    236:240:public void getChars(int,int,char[],int)
    243:251:final void insert0(int,char[])
    254:266:final void insert0(int,char[],int,int)
    270:277:final void insert0(int,char)
    280:293:final void insert0(int,java.lang.String)
    296:303:final void insert0(int,java.lang.CharSequence,int,int)
    313:324:private void move(int,int)
    327:353:final void replace0(int,int,java.lang.String)
    357:411:final void reverse0()
    419:423:public void setCharAt(int,char)
    432:443:public void setLength(int)
    451:459:public java.lang.String substring(int)
    510:510:public int indexOf(java.lang.String)
    522:553:public int indexOf(java.lang.String,int)
    565:565:public int lastIndexOf(java.lang.String)
    578:610:public int lastIndexOf(java.lang.String,int)
    618:623:public void trimToSize()
    634:637:public int codePointAt(int)
    649:652:public int codePointBefore(int)
    666:669:public int codePointCount(int,int)
    683:683:public int offsetByCodePoints(int,int)
    693:694:public com.badlogic.gdx.utils.StringBuilder append(boolean)
    793:794:public com.badlogic.gdx.utils.StringBuilder append(double)
    828:829:public com.badlogic.gdx.utils.StringBuilder append(char[])
    842:843:public com.badlogic.gdx.utils.StringBuilder append(char[],int,int)
    861:865:public com.badlogic.gdx.utils.StringBuilder append(com.badlogic.gdx.utils.StringBuilder)
    883:887:public com.badlogic.gdx.utils.StringBuilder append(com.badlogic.gdx.utils.StringBuilder,int,int)
    897:898:public com.badlogic.gdx.utils.StringBuilder appendCodePoint(int)
    909:910:public com.badlogic.gdx.utils.StringBuilder delete(int,int)
    920:921:public com.badlogic.gdx.utils.StringBuilder deleteCharAt(int)
    933:934:public com.badlogic.gdx.utils.StringBuilder insert(int,boolean)
    946:947:public com.badlogic.gdx.utils.StringBuilder insert(int,char)
    959:960:public com.badlogic.gdx.utils.StringBuilder insert(int,int)
    972:973:public com.badlogic.gdx.utils.StringBuilder insert(int,long)
    985:986:public com.badlogic.gdx.utils.StringBuilder insert(int,float)
    998:999:public com.badlogic.gdx.utils.StringBuilder insert(int,double)
    1011:1012:public com.badlogic.gdx.utils.StringBuilder insert(int,java.lang.Object)
    1023:1024:public com.badlogic.gdx.utils.StringBuilder insert(int,java.lang.String)
    1036:1037:public com.badlogic.gdx.utils.StringBuilder insert(int,char[])
    1052:1053:public com.badlogic.gdx.utils.StringBuilder insert(int,char[],int,int)
    1066:1067:public com.badlogic.gdx.utils.StringBuilder insert(int,java.lang.CharSequence)
    1083:1084:public com.badlogic.gdx.utils.StringBuilder insert(int,java.lang.CharSequence,int,int)
    1097:1098:public com.badlogic.gdx.utils.StringBuilder replace(int,int,java.lang.String)
    1105:1106:public com.badlogic.gdx.utils.StringBuilder reverse()
com.badlogic.gdx.utils.TimSort:
    private static final int MIN_MERGE
    private static final int MIN_GALLOP
    private static final int INITIAL_TMP_STORAGE_LENGTH
    private static final boolean DEBUG
    152:171:private TimSort(java.lang.Object[],java.util.Comparator)
    179:180:static void sort(java.lang.Object[],java.util.Comparator)
    183:227:static void sort(java.lang.Object[],int,int,java.util.Comparator)
com.badlogic.gdx.utils.TimeUtils:
    21:21:public TimeUtils()
    29:29:public static long millis()
com.badlogic.gdx.utils.Timer
com.badlogic.gdx.utils.Timer$Task
com.badlogic.gdx.utils.Timer$TimerThread
com.badlogic.gdx.utils.UBJsonReader
com.badlogic.gdx.utils.XmlReader
com.badlogic.gdx.utils.XmlReader$Element
com.badlogic.gdx.utils.XmlWriter
com.badlogic.gdx.utils.async.AsyncExecutor:
    28:37:public AsyncExecutor(int)
com.badlogic.gdx.utils.async.AsyncExecutor$1
com.badlogic.gdx.utils.async.ThreadUtils:
    8:8:public ThreadUtils()
com.badlogic.gdx.utils.compression.CRC
com.badlogic.gdx.utils.compression.ICodeProgress
com.badlogic.gdx.utils.compression.Lzma
com.badlogic.gdx.utils.compression.Lzma$CommandLine
com.badlogic.gdx.utils.compression.lz.BinTree
com.badlogic.gdx.utils.compression.lz.InWindow
com.badlogic.gdx.utils.compression.lz.OutWindow
com.badlogic.gdx.utils.compression.lzma.Base
com.badlogic.gdx.utils.compression.lzma.Decoder
com.badlogic.gdx.utils.compression.lzma.Decoder$LenDecoder
com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder
com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder$Decoder2
com.badlogic.gdx.utils.compression.lzma.Encoder
com.badlogic.gdx.utils.compression.lzma.Encoder$LenEncoder
com.badlogic.gdx.utils.compression.lzma.Encoder$LenPriceTableEncoder
com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder
com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder$Encoder2
com.badlogic.gdx.utils.compression.lzma.Encoder$Optimal
com.badlogic.gdx.utils.compression.rangecoder.BitTreeDecoder
com.badlogic.gdx.utils.compression.rangecoder.BitTreeEncoder
com.badlogic.gdx.utils.compression.rangecoder.Decoder
com.badlogic.gdx.utils.compression.rangecoder.Encoder
com.badlogic.gdx.utils.reflect.ArrayReflection:
    6:6:public ArrayReflection()
    15:15:public static int getLength(java.lang.Object)
    20:20:public static java.lang.Object get(java.lang.Object,int)
    25:26:public static void set(java.lang.Object,int,java.lang.Object)
com.badlogic.gdx.utils.reflect.ClassReflection:
    8:8:public ClassReflection()
    13:15:public static java.lang.Class forName(java.lang.String)
    26:26:public static boolean isInstance(java.lang.Class,java.lang.Object)
    32:32:public static boolean isAssignableFrom(java.lang.Class,java.lang.Class)
    37:37:public static boolean isMemberClass(java.lang.Class)
    42:42:public static boolean isStaticClass(java.lang.Class)
    48:52:public static java.lang.Object newInstance(java.lang.Class)
    58:63:public static com.badlogic.gdx.utils.reflect.Constructor[] getConstructors(java.lang.Class)
    69:73:public static varargs com.badlogic.gdx.utils.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])
    80:84:public static varargs com.badlogic.gdx.utils.reflect.Constructor getDeclaredConstructor(java.lang.Class,java.lang.Class[])
    90:95:public static com.badlogic.gdx.utils.reflect.Method[] getMethods(java.lang.Class)
    101:105:public static varargs com.badlogic.gdx.utils.reflect.Method getMethod(java.lang.Class,java.lang.String,java.lang.Class[])
    111:116:public static com.badlogic.gdx.utils.reflect.Method[] getDeclaredMethods(java.lang.Class)
    122:126:public static varargs com.badlogic.gdx.utils.reflect.Method getDeclaredMethod(java.lang.Class,java.lang.String,java.lang.Class[])
    132:137:public static com.badlogic.gdx.utils.reflect.Field[] getFields(java.lang.Class)
    143:147:public static com.badlogic.gdx.utils.reflect.Field getField(java.lang.Class,java.lang.String)
    153:158:public static com.badlogic.gdx.utils.reflect.Field[] getDeclaredFields(java.lang.Class)
    164:168:public static com.badlogic.gdx.utils.reflect.Field getDeclaredField(java.lang.Class,java.lang.String)
com.badlogic.gdx.utils.reflect.Constructor
com.badlogic.gdx.utils.reflect.Field
com.badlogic.gdx.utils.reflect.Method
com.badlogic.gdx.utils.reflect.ReflectionException
com.chickenbellyfinn.ubertube.Block:
    public static final float WIDTH
    public static final float HEIGHT
    public static final float DEPTH
    67:71:public void setPosition(float,float,float)
com.chickenbellyfinn.ubertube.BlockRing:
    public static final float MIN_SPEED
    public static final float MAX_SPEED
    public static final float RADIUS
com.chickenbellyfinn.ubertube.BuildConfig
com.chickenbellyfinn.ubertube.DefaultPlatformLayer
com.chickenbellyfinn.ubertube.GameScreen:
    429:429:public boolean mouseMoved(int,int)
    436:436:public boolean scrolled(int)
com.chickenbellyfinn.ubertube.MainMenuScreen:
    300:300:public boolean mouseMoved(int,int)
    306:306:public boolean scrolled(int)
com.chickenbellyfinn.ubertube.PlatformLayer:
    public static final java.lang.String PREFS
com.chickenbellyfinn.ubertube.R
com.chickenbellyfinn.ubertube.R$attr
com.chickenbellyfinn.ubertube.R$drawable
com.chickenbellyfinn.ubertube.R$layout
com.chickenbellyfinn.ubertube.R$string
com.chickenbellyfinn.ubertube.Resources:
    private static final float FONT_SIZE
com.chickenbellyfinn.ubertube.Starfield:
    private static final float SIZE
    private static final float DEPTH
    private static final float POINT_SIZE
com.chickenbellyfinn.ubertube.UberTubeGame:
    private static final java.lang.String PREFS
    private static final java.lang.String PREFS_HIGHSCORE
com.esotericsoftware.tablelayout.BaseTableLayout
com.esotericsoftware.tablelayout.BaseTableLayout$Debug
com.esotericsoftware.tablelayout.Cell
com.esotericsoftware.tablelayout.Toolkit
com.esotericsoftware.tablelayout.Value
com.esotericsoftware.tablelayout.Value$1
com.esotericsoftware.tablelayout.Value$10
com.esotericsoftware.tablelayout.Value$11
com.esotericsoftware.tablelayout.Value$2
com.esotericsoftware.tablelayout.Value$3
com.esotericsoftware.tablelayout.Value$4
com.esotericsoftware.tablelayout.Value$5
com.esotericsoftware.tablelayout.Value$6
com.esotericsoftware.tablelayout.Value$7
com.esotericsoftware.tablelayout.Value$8
com.esotericsoftware.tablelayout.Value$9
com.esotericsoftware.tablelayout.Value$CellValue
com.esotericsoftware.tablelayout.Value$FixedValue
com.esotericsoftware.tablelayout.Value$TableValue
